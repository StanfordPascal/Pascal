         TITLE 'PASCSP, PASCAL RUNTIME SUPPORT AND STANDARD PROCS'      00000010
*********************************************************************** 00000020
*                                                                       00000030
*                                                                       00000040
*                                                                       00000050
*     PASCAL ENVIRONMENT AND ENTRY SETUP                                00000060
*     ------------------------------------                              00000070
*                                                                       00000080
*                                                                       00000090
*     COPYRIGHT 1976, STANFORD LINEAR ACCELERATOR CENTER.               00000100
*                                                                       00000110
*                                                                       00000120
*     THE FOLLOWING PROGRAMS CREATE  THE  RUN-TIME  ENVIRONMENT  AND    00000130
*     PROVIDE THE I/O INTERFACE FOR THE SLAC 'PASCAL' COMPILER.         00000140
*                                                                       00000150
*     EXCEPT FOR THE FEW POINTS EXPLAINED IN THIS BOX, THE INTERNALS    00000160
*     OF THESE ROUTINES SHOULD BE INVISIBLE (AND INCONSEQUENTIAL) TO    00000170
*     THE 'PASCAL' USER.                                                00000180
*                                                                       00000190
*                                                                       00000200
*                                                                       00000210
*     1) THE USER MAY SPECIFY THE SIZE OF THE RUN  TIME  STACK/HEAP,    00000220
*     THE  SIZE OF THE AREA RETURNED TO THE OPERATING SYSTEM FOR I/O    00000230
*     BUFFERS, THE MAXIMUM COUNT OF RUN  TIME  ERRORS,  THE  RUNNING    00000240
*     TIME  OF  THE  PROGRAM,  REQUEST  AN  OPTIONAL MEMORY DUMP AND    00000250
*     SPECIFY OTHER SPECIAL CONTROL OPTIONS AS FOLLOWS:                 00000260
*                                                                       00000270
*       // EXEC USERPROG,                                               00000280
*       //      PARM='USER PARMS /STACK=XXXK,IOBUF=YYYK,             &  00000290
*                            TIME=TTTS,NOSPIE,NOSNAP,NOCC,DUMP'      #  00000300
*                                                                       00000310
*       'USER PARMS': THE PARAMETER LIST TO BE PASSED TO THE USER       00000320
*                     PROGRAM (IF ANY).                                 00000330
*       'XXX' : STORAGE AREA (IN K BYTES) FOR STACK+HEAP.               00000340
*       'YYY' : STORAGE AREA (IN K BYTES) TO BE RETURNED TO SYSTEM.     00000350
*       'TTT' : PROGRAM RUNNING TIME (IN SECONDS).                      00000360
*       'DUMP': TO GENERATE AN OS STYLE MEMORY DUMP IN CASE OF AN       00000370
*               ABNORMAL PROGRAM TERMINATION.                           00000380
*       'NOSPIE': TO PREVENT INTERCEPTION OF ERROR INTERRUPTS        #  00000390
*       'NOSNAP': TO STOP USE OF SNAPSHOT RT. AFTER AN ERROR         #  00000400
*       'NOCC': TO STOP FIRST CHARACTER ON EACH LINE FROM BEING      #  00000410
*               TAKEN AS A CONTROL CHARACTER                         #  00000420
*       DEFAULT VALUE FOR 'XXXK' IS THE JOB 'REGION' SIZE.              00000430
*       DEFAULT VALUE FOR 'YYYK' IS 36K.                                00000440
*                                                                       00000450
*     2) THE VALUE OF THE RETURN CODE 'RC', IF OTHER  THAN GENERATED    00000460
*     BY  THE  USER  PROGRAM,  MAY  BE  INTERPRETED ACCORDING TO THE    00000470
*     FOLLOWING TABLE.  FOR MORE DETAILED EXPANATION  OF  THE  ERROR    00000480
*     CONDITION,  SEE  THE  CONTENTS OF THE 'OUTPUT' FILE WHICH HAVE    00000490
*     THE APPROPRIATE MESSAGES.  NOTE THAT THIS FILE (OUTPUT) SHOULD    00000500
*     BE INCLUDED IN THE USER PROGRAM IN ORDER TO GET THE  RUN  TIME    00000510
*     DIAGNOSTICS AND RELATED MESSAGES.                                 00000520
*                                                                       00000530
*       RETURN CODE:  IMPLIES:                                          00000540
*                                                                       00000550
*       1001          INDEX VALUE OUT OF RANGE                          00000560
*       1002          SUBRANGE VALUE OUT OF RANGE                       00000570
*       1003          ACTUAL PARAMETER OUT OF RANGE                     00000580
*       1004          SET MEMBER OUT OF RANGE                           00000590
*       1005          POINTER VALUE INVALID                             00000600
*       1006          STACK/HEAP COLLISION                              00000610
*       1007          ILLEGAL INPUT/RESET OPERATION                     00000620
*       1008          ILLEGAL OUTPUT/REWRITE OPERATION                  00000630
*       1009          SYNCHRONOUS I/O ERROR                             00000640
*       1010          PROGRAM EXCEEDED SPECIFIED RUNNING TIME           00000650
*       1011          ILLEGAL FILE DEFINITION (I.E., TOO MANY FILES)    00000660
*       1012          NOT ENOUGH STACK SPACE                            00000670
*       1013          UNDEFINED OR OBSOLETE CSP CALL                 #  00000680
*       1014          LINELIMIT EXCEEDED FOR A FILE                  #  00000690
*       1015          BAD FILE CONTROL BLOCK                         @  00000700
*       1016          INPUT RECORD TOO LARGE                         @  00000710
*       1020          READ PAST END OF FILE                          #  00000720
*       1021          BAD BOOLEAN INPUT                              #  00000730
*       1022          BAD INTEGER INPUT                              #  00000740
*       1023          BAD REAL INPUT                                 #  00000750
*       1024          OVER-LARGE INTEGER INPUT                       &  00000760
*                                                                       00000770
*       200X          PROGRAM INTERRUPTION CODE 'X'                     00000780
*                                                                       00000790
*       3001          MISC. EXTERNAL ERROR CONDITIONS.                  00000800
*                                                                       00000810
*       X1XX          UNABLE TO RUN SNAPSHOT, OTHER DIGITS AS ABOVE     00000820
*                                                                       00000830
*                                                                       00000840
*     3) THE CONDITIONAL ASSEMBLY FLAG &SYSTEM DETERMINES WHETHER    #  00000850
*     CERTAIN SECTIONS OF CODE ARE INCLUDED IN THE PROGRAM.          #  00000860
*     WITH &SYSTEM=1, SOME CHECKING CODE, REAL NUMBER INPUT AND THE  #  00000870
*     FORTRAN INTERFACE IS OMITTED.  THIS RESULTS IN A SMALLER       #  00000880
*     FASTER PROGRAM BUT WHICH CAN ONLY BE USED WITH "SAFE"          #  00000890
*     PROGRAMS THAT DO NOT USE MATHEMATICAL ROUTINES - SUCH AS THE   #  00000900
*     COMPILER AND THE P-ASSEMBLER.                                  #  00000910
*     WITH &SYSTEM=0, THE FULL PROGRAM IS PRODUCED AND THIS IS THE   #  00000920
*     VERSION THAT SHOULD NORMALLY BE COMBINED WITH USER PROGRAMS.   #  00000930
*     THE CONDITIONAL ASSEMBLY FLAG &IBM370 DETERMINES WHETHER       @  00000940
*     IBM370 INSTRUCTIONS MAY BE GENERATED.  WHEN &IBM370=1,         @  00000950
*     THESE INSTRUCTIONS (E.G. MVCL) ARE USED FOR SPEED IN A FEW     @  00000960
*     CASES.  WHEN &IBM370=0, ONLY IBM360 INSTRUCTIONS ARE USED.     @  00000970
*                                                                       00000980
*                                                                       00000990
*     4) THIS PROGRAM MAY BE ASSEMBLED WITH MOST STANDARD IBM        #  00001000
*     ASSEMBLERS.                                                    #  00001010
*                                                                       00001020
*                                                                       00001030
*     5) IF THE RUN PROFILE SWITCH IS ENABLED IN THE PASCAL  PROGRAM    00001040
*     (I.E.   'K+'),  THE  RUN  TIME SYSTEM WILL 'REWRITE' THE 'RAW'    00001050
*     EXECUTION COUNTS ON THE PREDEFINED 'QRR'  FILE  AFTER  RUNNING    00001060
*     THE  USER  PROGRAM.  IN SUCH CASES THE USER PROGRAM SHOULD NOT    00001070
*     USE THE 'QRR' FILE BUT THE 'DD' STATEMENT FOR THIS FILE SHOULD    00001080
*     BE INCLUDED IN THE 'GO' STEP.  THE SUBMONITOR WILL SUBSEQUENTLY   00001090
*     INVOKE THE "PASPROF" LOAD-MODULE TO PRINT THE PROFILE.            00001100
*                                                                       00001110
*                                                                       00001120
*                                                                       00001130
*                                                                       00001140
*     THESE PROGRAMS INCLUDE SOME CONTRIBUTIONS BY KEITH RICH,  JOHN    00001150
*     BANNING AND NIGEL HORSPOOL.                                       00001160
*                                                                       00001170
*                                                                       00001180
*                                                                       00001190
*                                SASSAN HAZEGHI,                        00001200
*                                                                       00001210
*                                COMPUTATION RESEARCH GROUP             00001220
*                                STANFORD LINEAR ACCELERATOR CENTER     00001230
*                                P. O. BOX 4349                         00001240
*                                STANFORD, CALIFORNIA  94305.           00001250
*                                                                       00001260
*                                                                       00001270
*                                                                       00001280
*                                LAST UPDATE:                           00001290
*                                             MAR.  15, 76.             00001300
*                                             SEPT.  8, 76.             00001310
*                                             JAN.  20, 77.             00001320
*                                             JULY  28, 77.             00001330
*                                             MAY   21, 77.             00001340
*                                             JULY   6, 78.             00001350
*                                             SEPT. 15, 78.             00001360
*                                             NOV.  11, 78.             00001370
*                                             AUG.  09, 79.             00001380
*                                                                       00001390
*     FURTHER MODIFICATIONS MADE AT MCGILL UNIVERSITY,               #  00001400
*                                                                    #  00001410
*                                R. NIGEL HORSPOOL                   #  00001420
*                                APRIL 7, 1982                       &  00001430
*
*     Minor mods made by Dave Edwards (DE), Jan/2007 - see below.
*
* See also:  $psc:pascal.mon.notes
*            $psc:pascal.lib.notes
*
* *** This module, assembled with &SYSTEM set to 0, also forms
*     part of $psc:pascal.lib (run-time library object).
*
* 28jan2007 - JCL added an top of file, and module reassembled.
*    No change to the source. See $psc:pascal.mon.notes . (DE)
* 28jan2007 - Fix year-2000 problem when setting PASDATE (for the
*    Pascal predefined variable DATE e.g. '01-28-2007'): set correct
*    century if actual year is 20yy and this seems to be a MUSIC/SP
*    system. Previously, year 20nn would be reported as 19nn.
*    (But coding is still incorrect for years like 2100, because
*    that year is not a leap year.) (DE)
*                                                                       00001440
*********************************************************************** 00001450
         EJECT                                                          00001460
**************************************************************          00001470
*                                                                       00001480
*        I/O (FILE) HANDLING MACROS                                     00001490
*                                                                       00001500
**************************************************************          00001510
*                                                                       00001520
         MACRO ,                                                        00001530
&L       FILADR ,                                                       00001540
.*       TO COMPUTE FILE BUFFER ADDRESS ETC.                            00001550
         GBLB  &SYSTEM                                               @  00001560
&L       L     AE,PFILPTR(AD)      LOAD FILE BLOCK ADDR              @  00001570
         AIF   (&SYSTEM).NOCHK                                       @  00001580
         C     AD,FILPAS(AE)       CHECK THAT FILE BLOCK POINTS      @  00001590
         BNE   BADFILE             TO PASCAL FILE VARBL.             @  00001600
.NOCHK   L     AF,FILBUF(AE)       SET I/O BUFFER POINTER            @  00001610
         MEND  ,                                                        00001620
*                                                                       00001630
         MACRO ,                                                     #  00001640
         FILDEF &NAME,&DIRECT,&KIND,&LINK                            @  00001650
.*       DEFINE A FILE                                               @  00001660
         LCLC  &NAM,&OPT1,&OPT2                                         00001670
         DS    0D                                                    #  00001680
&NAM     SETC  '&NAME'(1,3)                                          #  00001690
FIL&NAM  DC    CL8'&NAME'          PASCAL FILE IDENTIFIER            @  00001700
         DC    A(&LINK)            PTR TO NEXT FILE BLOCK            @  00001710
         DC    A(0)                PTR TO PASCAL FILE VRBL.          @  00001720
         DC    A(0)                I/O BUFFER ADDRESS                @  00001730
         DC    F'0'                LINE-LIMIT FOR FILE (ON OUTPUT)   @  00001740
         DC    H'0'                CURRENT RECORD LENGTH (TEXTFILE)  @  00001750
         AIF   ('&KIND' NE 'TEXT').FD2                               @  00001760
&OPT1    SETC  'PL'                LOCATE-MODE OUTPUT NEEDED         @  00001770
         AIF   ('&DIRECT' EQ 'OUTPUT').FD1                           @  00001780
&OPT1    SETC  'GL'                LOCATE-MODE INPUT NEEDED          @  00001790
         AIF   ('&DIRECT' EQ 'INPUT').FD1                            @  00001800
&OPT2    SETC  'PL'                BOTH LOCATE MODE INPUT & OUTPUT   @  00001810
.FD1     DC    AL1(TEXTFLAG,0)     OPEN/TEXT FLAGS, EOF FLAG         @  00001820
         DC    H'0',H'0'           CHAR PTR, CHAR START POS          @  00001830
         AGO   .FD3                                                  @  00001840
.FD2     DC    AL1(0,0)            OPEN/TEXT FLAGS, EOF FLAG         @  00001850
         DC    H'0',H'0'           MAX REC SIZE, FILE COMP. SIZE     @  00001860
&OPT1    SETC  'GM'                MOVE-MODE INPUT AND               @  00001870
&OPT2    SETC  'PM'                MOVE-MODE OUTPUT NEEDED           @  00001880
.FD3     ANOP  ,                                                     @  00001890
         DCB   DSORG=PS,DDNAME=&NAME,EODAD=EOD,SYNAD=SYNADRT,        @ X00001900
               EXLST=XL&DIRECT,BFTEK=A,MACRF=(&OPT1,&OPT2)           @  00001910
         MEND  ,                                                     @  00001920
*                                                                    #  00001930
         EJECT                                                          00001940
         GBLB  &SYSTEM,&IBM370                                       @  00001950
&SYSTEM  SETB  1                  TRUE INDICATES A COMPACT 'CSP'        00001960
&IBM370  SETB  0                  TRUE INDICATES AN IBM-370          @  00001970
*                                                                       00001980
         AIF   (&SYSTEM).SYS1                                           00001990
*        GENERAL SETUP FOR USER PROGRAM(S).                             00002000
         AGO   .USE1                                                    00002010
.SYS1    ANOP                                                           00002020
*        COMPACT SETUP, OMITS FORTRAN INTERFACE & TRACING               00002030
.USE1    ANOP                                                           00002040
*                                                                       00002050
*                                                                       00002060
*                                                                       00002070
         EJECT                                                          00002080
***************************************************************         00002090
*                                                                       00002100
*        STACK (AND SAVE AREA) LAYOUT                                   00002110
*                                                                       00002120
***************************************************************         00002130
*                                                                       00002140
*                                                                       00002150
         PRINT NOGEN                                                    00002160
         DCBD  DSORG=PS                                                 00002170
         PRINT GEN                                                      00002180
*                                                                       00002190
DYNSTORE DSECT ,                                                        00002200
         DS    20F                 PASCAL ENVIRONMENT SAVE AREA         00002210
STACK    DS    18F                 BOTTOM OF RUNTIME STACK              00002220
CLOCK    EQU   STACK               CLOCK LOCATION                       00002230
NEWPTR   DS    A                   PASCAL 'NEW' POINTER                 00002240
HEAPLIM  DS    A                   UPPER LIMIT OF HEAP ( +1 )           00002250
*                                  ALSO POINTS TO DYN2STOR              00002260
DISPREGS DS    10F                 RUN TIME DISPLAY REGISTERS           00002270
DISPLAY  EQU   DISPREGS,*-DISPREGS                                      00002280
FL1      DS    D                   R/W  FIX/FLOAT CONVERSION HELPS      00002290
FL2      DS    D                   R ONLY                               00002300
FL3      DS    D                   R/W                                  00002310
FL4      DS    D                   R ONLY                               00002320
CHKSUBS  DS    0F                  ENTRY TO RUN TIME CHECK ROUTINES     00002330
INXCHK   DS    3F                  INDEX CHECK                          00002340
RNGCHK   DS    3F                  SUBRANGE CHECK                       00002350
PRMCHK   DS    3F                  PARAMETER VALUE CHECK                00002360
PTRCHK   DS    3F                  POINTER CHECK                        00002370
PTACHK   DS    3F                  SET MEMBER CHECK                     00002380
SETCHK   DS    3F                                                       00002390
STKCHK   DS    3F                                                       00002400
TRACER   DS    3F                                                    &  00002410
INPUT    DS    3F                                                    @  00002420
OUTPUT   DS    3F                                                    @  00002430
PRD      DS    3F                                                    @  00002440
PRR      DS    3F                                                    @  00002450
QRD      DS    3F                                                    @  00002460
QRR      DS    3F                                                    @  00002470
CLEARBUF DS    XL8                  BUFFER TO CLEAR ACTIVATION RECORDS  00002480
PASDATE  DS    CL10                 PREDEFINED VARIABLE DATE            00002490
PASTIME  DS    CL10                 PREDEFINED VARIABLE TIME            00002500
OSPRMPTR DS    A                    POINTER TO O.S. PARM STRING      #  00002510
FRSTGVAR DS    0D                  FOR ALIGNMENT PURPOSES               00002520
*                                                                       00002530
*       DYNAMIC STORAGE AREA POINTED TO BY HEAPLIM                      00002540
*                                                                       00002550
DYN2STOR DSECT     ,                                                    00002560
DYNRUNC  DS        F         # OF RUN TIME FREQUENCY COUNTERS           00002570
         DS        0D                                                   00002580
DYNCOUNT DS        0F                                                   00002590
         AIF       (&SYSTEM).SYS3                                       00002600
DYN2LEN  EQU       128       EXTRA MARGIN FOR PATHOLOGICAL CALL PARMS   00002610
         AGO       .USE3                                                00002620
.SYS3    ANOP                                                           00002630
DYN2LEN  EQU       *-DYN2STOR                                           00002640
.USE3    ANOP                                                           00002650
*                                                                       00002660
         EJECT                                                          00002670
**************************************************************          00002680
*                                                                       00002690
*        PASCAL ENTRY POINT AND PROGRAM PROLOGUE                        00002700
*                                                                       00002710
**************************************************************          00002720
*                                                                       00002730
*                                                                       00002740
$PASENT  CSECT ,                                                        00002750
         ENTRY $PASENT,$PASCSP,$PASINT,$TRACER                       &  00002760
*                                                                       00002770
*                                                                       00002780
         USING *,15                                                     00002790
         SAVE  (14,12),,*                                               00002800
         LR    R10,R15                                                  00002810
         DROP  R15                                                      00002820
         USING $PASENT,R10                                              00002830
         ST    R1,OSPARMS          SAVE ADDRESS OF O.S. PARMS        #  00002840
         L     R1,0(R1)                                                 00002850
         SPACE                                                          00002860
*                                                                       00002870
*        R1 POINTS TO THE PARAMETER LIST THE FIRST HALF WORD OF         00002880
*        WHICH GIVES THE LENGTH OF THE LIST                             00002890
*                                                                       00002900
         LH    R2,0(R1)                                                 00002910
         LTR   R2,R2                                                    00002920
         BNH   NOPARM             NO PARAMETER LIST SPECIFIED           00002930
         LA    R0,256              SET MAX STRING LENGTH             #  00002940
         CR    R2,R0                                                 #  00002950
         BNH   *+6                 JUMP IF LENGTH OK                 #  00002960
         LR    R2,R0               ENFORCE THE LIMIT                 #  00002970
         LA    R8,1                INCREMENT FOR BXLE & BXH          #  00002980
         LA    R9,1(R1,R2)         LIMIT FOR BXLE & BXH              #  00002990
         LA    R1,2(,R1)           POINT AT FIRST CHAR               #  00003000
         ST    R1,OSPARMAD         SAVE ADDRESS FOR LATER            #  00003010
*                                                                       00003020
PARMRTRY CLI   0(R1),C'/'                                               00003030
         BE    PARMSLSH            SEPARATOR FOUND ?                 #  00003040
         BXLE  R1,R8,PARMRTRY                                        #  00003050
*                                                                       00003060
PARMSLSH LR    R3,R1                                                 #  00003070
         SL    R3,OSPARMAD         COMPUTE STRING LENGTH             #  00003080
         STH   R3,OSPARML          SAVE IT FOR LATER                 #  00003090
         BXH   R1,R8,NOPARM        JUMP IF STRING END                #  00003100
GOTPARM  SR    R0,R0               CLEAR NEGATE FLAG                 &  00003110
         CLI   0(R1),C','                                               00003120
         BNE   *+8                                                      00003130
         LA    R1,1(,R1)                                                00003140
         CLC   0(2,R1),=C'NO'      TEST FOR NEGATION OF KEYWORD      &  00003150
         BNE   *+12                                                  &  00003160
         LA    R0,X'FF'           SET NEGATION FLAG                  &  00003170
         LA    R1,2(,R1)                                             &  00003180
         LA    R5,KWRDTAB                                            &  00003190
         SR    R3,R3                                                 &  00003200
KWRDSRCH IC    R3,2(,R5)           LOAD KEYWORD LENGTH-1             &  00003210
         LTR   R3,R3               ZERO FLAGS TABLE END              &  00003220
         BZ    NXTPARM             SO EXIT                           &  00003230
         EX    R3,KWRDCLC          COMPARE NEXT KEYWORD              &  00003240
         BE    KWRDFND             JUMP IF MATCHED                   &  00003250
         LA    R5,4(R3,R5)         STEP TO NEXT ENTRY                &  00003260
         B     KWRDSRCH            AND REPEAT                        &  00003270
KWRDCLC  CLC   0(*-*,R1),3(R5)                                       &  00003280
KWRDFND  LA    R1,1(R3,R1)         ADVANCE IN PARM STRING            &  00003290
         CLI   1(R5),0             TEST NUMERIC INPUT FLAG           &  00003300
         BE    KWRDNON             JUMP IF NOT WANTED                &  00003310
         LTR   R0,R0          TEST IF "NO" SPECIFIED                 &  00003320
         BNZ   KWRDNON        IF SO, NO INTEGER FOLLOWS              &  00003330
         BAL   R7,GETNUM           GET AN INTEGER                    &  00003340
         LTR   R4,R4               TEST FOR VALIDITY                 &  00003350
         BNP   NXTPARM             AND IGNORE IF NO GOOD             &  00003360
         SR    R3,R3               RE-CLEAR R3 (USED BY GETNUM)      &  00003370
KWRDNON  IC    R3,0(,R5)           GET RELATIVE ADDRESS              &  00003380
         B     KWRDSTAK(R3)        AND GO TO THIS ROUTINE            &  00003390
*                                                                       00003400
KWRDSTAK LTR   R0,R0          TEST "NO" OPTION                       &  00003410
         BNZ   NXTPARM        IF SO, IGNORE                          &  00003420
         SLA   R4,10          CONVERT TO K                              00003430
         ST    R4,REQSTORE         RESET REGION SIZE                    00003440
         ST    R4,REQSTORE+4       AND SET MAXIMUM STORAGE              00003450
         B     NXTPARM                                                  00003460
*                                                                       00003470
KWRDIOB  LTR   R0,R0          TEST "NO" OPTION                       &  00003480
         BNZ   NXTPARM        IF SO, IGNORE                          &  00003490
         SLA   R4,10          CONVERT TO K                              00003500
         ST    R4,BUFSTORE         SET I/O BUFFER AMOUNT                00003510
         B     NXTPARM                                                  00003520
*                                                                       00003530
KWRDDUMP STC   R0,DUMPFLAG         SET THE DUMP FLAG                 &  00003540
         XI    DUMPFLAG,X'FF'      BUT R0 WAS REVERSED               &  00003550
         B     NXTPARM                                                  00003560
*                                                                       00003570
KWRDTIME LTR   R0,R0          TEST "NO" OPTION                       &  00003580
         LH    R5,=H'-1'      SET FOR UNLIMITED EXECUTION            &  00003590
         BNZ   KWRDTIM2                                              &  00003600
         LR    R5,R4                                                    00003610
         M     R4,=F'38400'        CONVERT TO TIMER UNITS            &  00003620
         CLI   0(R1),C'M'          TEST FOR TIME IN                  &  00003630
         BNE   KWRDTIM2            THOUSANDTHS OF A SECOND           &  00003640
         D     R4,=F'1000'         IF SO, CONVERT                    &  00003650
KWRDTIM2 ST    R5,EXECTIME         AND SAVE FOR STIMER               &  00003660
         B     NXTPARM                                                  00003670
*                                                                       00003680
KWRDCC   L     R15,=A(CCFLAG)      FLAG NOT DIRECTLY ADDRESSABLE     &  00003690
         STC   R0,0(,R15)          SET THE FLAG                      &  00003700
         B     NXTPARM                                                  00003710
*                                                                       00003720
KWRDSPIE STC   R0,SPIEFLAG         SET THE FLAG                      &  00003730
         B     NXTPARM                                               &  00003740
*                                                                       00003750
KWRDSNAP STC   R0,SNAPFLAG         SET THE FLAG                      &  00003760
         B     NXTPARM                                                  00003770
*                                                                       00003780
NXTPARM  BXLE  R1,R8,GOTPARM       STEP TO NEXT CHAR                 #  00003790
*                                                                    #  00003800
*                                                                    #  00003810
*        DDNAME-LIST PARAMETER PROCESSING                            #  00003820
*                                                                    #  00003830
NOPARM   EQU   *                                                     #  00003840
         L     R1,OSPARMS                                            #  00003850
         TM    0(R1),X'80'         TEST IF DDNAME LIST PROVIDED      #  00003860
         BO    NODDPARM                                              #  00003870
         L     R1,4(,R1)           ADDRESS OF DDNAME LIST PARM       #  00003880
         LH    R2,0(,R1)           LENGTH OF LIST IN BYTES           #  00003890
         L     AE,=A(FILLIST)      POINT AT FIRST FILE IN            @  00003900
         L     AE,0(,AE)              THE CHAIN OF FILE BLOCKS       @  00003910
DDLOOP   SH    R2,=H'8'            CHECK FOR END OF DDNAME LIST      #  00003920
         BM    NODDPARM                                              #  00003930
         TM    2(R1),X'FF'         CHECK FOR BINARY ZEROS            @  00003940
         BZ    DDDFLT              IF SO, DONT CHANGE DDNAME         #  00003950
         USING IHADCB-FILDCB,AE                                      #  00003960
         MVC   DCBDDNAM(8),2(R1)   MOVE NEW DDNAME INTO DCB          #  00003970
DDDFLT   LA    R1,8(,R1)           ADVANCE THROUGH LIST              #  00003980
         L     AE,FILLNK(AE)       ADVANCE TO NEXT FILE IN CHAIN     @  00003990
         LTR   AE,AE               TEST FOR END OF CHAIN             @  00004000
         BNZ   DDLOOP              IF NOT END, REPEAT                @  00004010
NODDPARM EQU   *                                                     #  00004020
*                                                                       00004030
*                                                                       00004040
*        GET SPACE FOR THE RUN TIME STACK                               00004050
*                                                                       00004060
         L     R0,BUFSTORE                                              00004070
         A     R0,REQSTORE         COMPUTE THE SIZE OF THE SMALLEST     00004080
         ST    R0,REQSTORE         AREA THAT WILL MEET THE DEMAND       00004090
         C     R0,REQSTORE+4                                            00004100
         BL    *+8                 UPPER BOUND OK ?                     00004110
         ST    R0,REQSTORE+4       ADJUST IT IF NEEDED.                 00004120
*                                                                       00004130
*        GET ENOUGH SPACE FOR STACK+IOBUF NOW                           00004140
*                                                                       00004150
         GETMAIN VU,LA=REQSTORE,A=ALOSTORE                              00004160
         SPACE ,                                                        00004170
*                                                                       00004180
         L     R1,ALOSTORE         GET ADDRESS OF ALLOCATED AREA        00004190
         LR    R12,R1                                                   00004200
         A     R1,ALOSTORE+4       ADD SIZE OF THE AREA                 00004210
         S     R1,BUFSTORE         BEGINNIG (ENDING !) OF THE HEAP      00004220
         S     R1,=A(8)            NAME FIELD OF THE HEAP               00004230
         USING DYNSTORE,GBR                                          @  00004240
         AIF   (&SYSTEM).SYS32                                          00004250
*                                                                       00004260
         LR    R2,R1                                                    00004270
         SR    R2,R12              R2 <-- SIZE OF THE USABLE AREA       00004280
         L     R3,=A(FRSTGVAR-STACK)                                 @  00004290
         CLR   R2,R3                                                 @  00004300
         BNH   NOCLR               SKIP IF NOT LARGE ENOUGH             00004310
         AIF   (&IBM370).M720                                        @  00004320
         LR    R2,R3                                                 @  00004330
         LD    FPR0,=XL8'8181818181818181'                              00004340
         SRA   R2,3                CONVERT BYTE COUNT TO D_WORD COUNT   00004350
         LA    R3,STACK                                              @  00004360
         STD   FPR0,0(R3)                                               00004370
         LA    R3,8(R3)                                                 00004380
         BCT   R2,*-8                                                   00004390
         AGO   .M620                                                 @  00004400
.M720    LR    R2,R12              ADDRESS OF STACK                  @  00004410
         LA    R15,X'81'                                             @  00004420
         SLL   R15,24              SET PADDING CHAR FOR MVCL         @  00004430
         MVCL  R2,R14              CLEAR THE AREA                    @  00004440
.M620    ANOP                                                        @  00004450
*                                                                       00004460
.SYS32   ANOP                                                           00004470
NOCLR    ST    R13,4(R12)          BACK LINK OF NEW SAVE AREA           00004480
         ST    R12,8(R13)          FRWRD LINK OF OLD SAVE AREA          00004490
         LR    R13,R12             RESET SAVE AREA POINTER              00004500
*                                                                       00004510
         MVC   STACK-8(8),=CL8'   STACK'                                00004520
         MVC   0(8,R1),=CL8'HEAP    '                                   00004530
         LA    R12,STACK           GLOBAL (STACK BOTTOM) POINTER        00004540
         USING STACK,R12                                                00004550
         ST    R1,NEWPTR           SET PASCAL 'NEW' PONTER              00004560
*                                                                       00004570
*        CLEAR DISPLAY PSEUDO REGISTERS                                 00004580
*                                                                       00004590
         MVI   DISPLAY,X'FF'       SET DISP REGS TO '-1'                00004600
         MVC   DISPLAY+1(L'DISPLAY-1),DISPLAY                           00004610
         SPACE ,                                                     @  00004620
*                                                                    @  00004630
*        LINK PASCAL FILE VARIABLES TO FILE CONTROL                  @  00004640
*        BLOCKS IN THIS SUBMONITOR PROGRAM                           @  00004650
*                                                                    @  00004660
         L     AE,=A(FILLIST)                                        @  00004670
         L     AE,0(,AE)           POINT TO FIRST FILE CONTROL BLOCK @  00004680
         LA    AD,INPUT            POINT TO FIRST FILE VARIABLE      @  00004690
FILLP    ST    AD,FILPAS(AE)       SET LINK FROM HERE TO THERE       @  00004700
         ST    AE,PFILPTR(AD)      AND FROM THERE TO HERE            @  00004710
         MVI   PFILEOF(AD),TRUE    INITIALIZE EOF FLAG IN PASCAL     @  00004720
         MVI   PFILEOL(AD),TRUE    INITIALIZE EOL FLAG IN PASCAL     @  00004730
         LA    AD,PFILTSIZ(AD)     ADVANCE TO NEXT BUILT IN VRBL.    @  00004740
         L     AE,FILLNK(AE)       ADVANCE TO NEXT FILE CONTROL BLOCK@  00004750
         LTR   AE,AE               TEST FOR END OF LIST              @  00004760
         BNZ   FILLP               REPEAT                            @  00004770
         SPACE ,                                                        00004780
         L     R0,BUFSTORE         SIZE OF THE AREA TO BE RETURNED      00004790
         LA    R1,8(R1)            ADDRESS OF THE AREA TO BE RETURNED   00004800
         LR    R2,R1                                                    00004810
         SR    R2,R12              R2 <-- SPACE LEFT FOR THE STACK      00004820
         C     R2,USESTORE                                              00004830
         LA    R2,SPCERR           ERROR CODE FOR LACK OF SPACE         00004840
         BL    QUIT1                                                    00004850
*                                                                       00004860
*        FREE SOME SPACE FOR O/S FILE BUFFERS (4K/FILE !)               00004870
*                                                                       00004880
         FREEMAIN R,LV=(R0),A=(R1)                                      00004890
         L     R1,ALOSTORE+4       KEEP TRACK OF HOW MUCH CORE       #  00004900
         S     R1,BUFSTORE         TO RETURN TO THE O.S.             #  00004910
         ST    R1,ALOSTORE+4       AT END OF EXECUTION               #  00004920
         SPACE ,                                                        00004930
*                                                                       00004940
*        INITIALIZE FORTRAN ENVIRONMENT (IF THERE ARE FORTRAN           00004950
*        ROUTINES IN THE LOAD MODULE)                                   00004960
*                                                                       00004970
         AIF   (&SYSTEM).SYS325                                         00004980
         L     R15,=V(IBCOM#)     SEE IF FORTRAN ENVIRONMENT INCLUDED   00004990
         LTR   R15,R15                                                  00005000
         BZ    NOFORT                                                   00005010
         BAL   R14,IBCOMINI(R15)  IF SO CALL IBCOM# INIT ENTRY POINT    00005020
*                                                                       00005030
*        NOTE: THIS CALL SAVES R13 FOR IBCOMXIT, BE SURE TO HAVE        00005040
*        THE SAVE AREA CONSISTENT PRIOR TO CALLING IBCOMXIT             00005050
*                                                                       00005060
.SYS325  ANOP                                                           00005070
*                                                                       00005080
*        SET THE 'SPIE' TO TRAP PROGRAM  INTERRUPTS                     00005090
*                                                                       00005100
NOFORT   CLI   SPIEFLAG,X'00'      TEST IF SPIE TO BE ISSUED         #  00005110
         BNE   NOSPIE                                                #  00005120
         SPIE  MF=(E,PASSPIE)     OTHERWISE TRAP TO $PASINT          #  00005130
         ST    R1,OLDPICA         SAVE PRVIOUS PICA ADDRESS             00005140
NOSPIE   EQU   *                                                        00005150
*                                                                       00005160
*        SETUP DYN2STOR AREA                                            00005170
*                                                                       00005180
         L     R1,NEWPTR          TOP OF HEAP                           00005190
         S     R1,=A(DYN2LEN)     LESS SIZE OF DYN2                     00005200
         ST    R1,HEAPLIM         AND LIMIT                             00005210
         USING DYN2STOR,R1                                              00005220
         SR    R0,R0                                                    00005230
         ST    R0,DYNRUNC         CLEAR '# OF COUNTERS' FIELD           00005240
         LH    R2,OSPARML                                            #  00005250
         LTR   R2,R2                                                 #  00005260
         BZ    OSPARM1             JUMP IF NO PARM STRING            #  00005270
         SLR   R1,R2                                                 #  00005280
         SL    R1,=F'4'            ALLOCATE PARM STRING RECORD       #  00005290
         SRL   R1,3                FORCE TO DOUBLE-WORD BOUNDARY     #  00005300
         SLL   R1,3                                                  #  00005310
         ST    R2,0(,R1)           PUT STRING LENGTH IN RECORD       #  00005320
         L     R3,OSPARMAD                                           #  00005330
         BCTR  R2,0                                                  #  00005340
         EX    R2,OSPRMMVC         MOVE STRING INTO RECORD           #  00005350
         ST    R1,OSPRMPTR         SET POINTER TO RECORD             #  00005360
         B     OSPARM2                                               #  00005370
OSPRMMVC MVC   4(0,R1),0(R3)                                         #  00005380
OSPARM1  BCTR  R2,0                SET POINTER TO NIL                #  00005390
         ST    R2,OSPRMPTR                                           #  00005400
OSPARM2  ST    R1,NEWPTR                                             #  00005410
         DROP  R1                                                    #  00005420
*                                                                       00005430
*                                                                       00005440
*                                                                       00005450
*        DISABLE INTEGER OVERFLOW, EXPONENT UNDERFLOW AND               00005460
*        SIGNIFICANCE INTERRUPTS.                                       00005470
*                                                                       00005480
         SR    R6,R6                                                    00005490
         SPM   R6                  DISABLE ALL MASKABLE INTERRUPTS   @  00005500
         SPACE ,                                                        00005510
         MVC   FL1,=X'4E00000000000000'  INITIALIZE FIX-FLOAT-FIX       00005520
         MVC   FL2,=X'4E00000080000000'  CONVERSION VALUES              00005530
         MVC   FL3,=X'0000000000000000'                                 00005540
         MVC   FL4,=X'4F08000000000000'                                 00005550
         SPACE ,                                                        00005560
         MVC   CHKSUBS(L'CALLSUBS),CALLSUBS  INIT. RUN TIME CHECK AREA  00005570
         MVC   CLOCK,EXECTIME            SET THE ALARM CLOCK            00005580
         STIMER  TASK,$TIMEOUT,TUINTVL=CLOCK                            00005590
*                                                                       00005600
*        INITIALIZE DATE/TIME PREDEFINED VARIABLES                      00005610
*                                                                       00005620
         TIME  DEC                 GET TOD IN TU                        00005630
         ST    R1,DATESAV               PUT DATE IN WORK AREA           00005640
         CP    DATESAV+2(2),=PL2'59'                                    00005650
         BNH   LY                                                       00005660
         TM    DATESAV+1,1              LEAP YEAR?                      00005670
         BNZ   NLY                      NO                              00005680
         TM    DATESAV+1,X'12'          LEAP YEAR?                      00005690
         BNM   LY                       YES                             00005700
NLY      AP    DATESAV+2(2),=P'1'                                       00005710
LY       LA    R4,JAN                                                   00005720
         LA    R3,12                                                    00005730
         ZAP   MONTH(3),=P'0'                                           00005740
MDLP     AP    MONTH(3),=P'1000'       BUMP MONTH                       00005750
         CP    DATESAV+2(2),0(2,R4)    THIS MONTH?                      00005760
         BNH   MDEND                    BR IF SO                        00005770
         SP    DATESAV+2(2),0(2,R4)    TRY NEXT                         00005780
         LA    R4,2(R4)                                                 00005790
         BCT   R3,MDLP                                                  00005800
MDEND    L     R3,DATESAV                                               00005810
         N     R3,=X'00FF0000'          GET YEAR                        00005820
         O     R3,MONTH-2               INSERT MONTH                    00005830
         L     R4,DATESAV               GET DAY                         00005840
         SRL   R4,4                                                     00005850
         N     R4,=X'000000FF'                                          00005860
         OR    R3,R4                                                    00005870
         ST    R3,DATESAV               PREPARE TO REFORMAT DATE        00005880
         UNPK  DATESAV(9),DATESAV(5)                                    00005890
         MVC   PASDATE(10),=X'04050B06070B00010203'                  @  00005900
         TR    PASDATE(10),DATESAV      RE-ORDER THE CHARACTERS      @  00005910
*** QUICK YEAR-2000 FIX (MUSIC/SP ONLY): THE CORRECT 4-DIGIT YEAR
*** IS 4 CHARS AT LOWCORE ADDR X'3AC'+12 ($NOWDATE+12).
*** NOTE: STILL, ABOVE LEAP-YEAR CODING IS WRONG STARTING IN THE
*** YEAR 2100, SINCE THAT YEAR IS NOT A LEAP YEAR.
$NOWDATE EQU   X'3AC'
         CLC   =C'20',$NOWDATE+12
         BNE   Y2KB1        19XX OR MAYBE NOT MUSIC/SP: LEAVE AS IS
         MVC   PASDATE+6(2),$NOWDATE+12  FIX 1ST 2 DIGITS OF YEAR
Y2KB1    DS    0H
*** END OF YEAR-2000 FIX.
*                                                                       00005920
*        FIX TIME OF DAY STRING                                         00005930
*                                                                       00005940
         ST    R0,DATESAV                                               00005950
         UNPK  DATESAV(7),DATESAV(4)     CONVERT TO EBCDIC              00005960
         MVC   PASTIME(10),=X'00010A02030A04054040'                  @  00005970
         TR    PASTIME(8),DATESAV        RE-ORDER THE CHARACTERS     @  00005980
*                                                                       00005990
*        FINALLY CALL THE USER PROGRAM                                  00006000
*                                                                       00006010
         LA    1,STACK                                                  00006020
         L     LINK,=A($MAINBLK)                                        00006030
         BALR  RET,LINK                                                 00006040
*                                                                       00006050
*        CLOSE THE OPEN FILES AND RETURN TO OS                          00006060
*                                                                       00006070
         SR    R2,R2               RETURN CODE = ZERO  !                00006080
QUIT1    LA    R1,PXIT             CLOSE OPEN FILES / RETURN TO OS      00006090
         L     LINK,=A($PASCSP)                                         00006100
         BR    LINK               EXIT PASCAL PROGRAM                   00006110
*                                                                       00006120
*                                                                       00006130
*        GET THE NEXT INTEGER IN THE PARAMETER LIST                     00006140
*                                                                       00006150
         BXH   R1,R8,NOPARM        QUIT IF NO MORE CHARS             #  00006160
GETNUM   CLI   0(R1),C'='                                               00006170
         BNE   GETNUM-4           SKIP UNTIL THE FIRST '='              00006180
*                                                                       00006190
         SR    R3,R3                                                    00006200
         SR    R4,R4              CLEAR ACCUMULATOR                     00006210
*                                                                       00006220
NXTDIG   BXH   R1,R8,0(R7)         RETURN IF NO MORE CHARS           #  00006230
         CLI   0(R1),C'9'                                               00006240
         BHR   R7                 OR IF A NON DIGIT                     00006250
         IC    R3,0(R1)                                                 00006260
         SH    R3,=Y(C'0')                                              00006270
         BLR   R7                 IS ENCOUNTERED                        00006280
         MH    R4,=H'10'                                                00006290
         AR    R4,R3              OTHERWISE KEEP ACCUMULATING           00006300
         B     NXTDIG                                                   00006310
*                                                                       00006320
         EJECT                                                          00006330
****************************************************************        00006340
*                                                                       00006350
*        TABLE OF CALLS FOR RUN TIME CHECK ROUTINES. TO BE COPIED       00006360
*        ,EXACTLY AS IS, ONTO THE RUN TIME STACK.                       00006370
*                                                                       00006380
****************************************************************        00006390
*                                                                       00006400
CALSUB   DS    0F                                                       00006410
CALLINX  L     R15,INXCHK+8                                             00006420
         BR    R15                                                      00006430
         DC    A($INXCHK)                                               00006440
*                                                                       00006450
CALLRNG  L     R15,RNGCHK+8                                             00006460
         BR    R15                                                      00006470
         DC    A($RNGCHK)                                               00006480
*                                                                       00006490
CALLPRM  L     R15,PRMCHK+8                                             00006500
         BR    R15                                                      00006510
         DC    A($PRMCHK)                                               00006520
*                                                                       00006530
CALLPTR  L     R15,PTRCHK+8                                             00006540
         BR    R15                                                      00006550
         DC    A($PTRCHK)                                               00006560
*                                                                       00006570
CALLPTA  L     R15,PTACHK+8                                             00006580
         BR    R15                                                      00006590
         DC    A($PTACHK)                                               00006600
*                                                                       00006610
CALLSET  L     R15,SETCHK+8                                             00006620
         BR    R15                                                      00006630
         DC    A($SETCHK)                                               00006640
*                                                                       00006650
CALLSTK  L     R15,STKCHK+8                                             00006660
         BR    R15                                                      00006670
         DC    A($STKCHK)                                               00006680
*                                                                       00006690
CALLTRC  L     R15,TRACER+8                                          &  00006700
         BR    R15                                                   &  00006710
         DC    A($TRACER)                                            &  00006720
*                                                                       00006730
CALLSUBS EQU   CALSUB,*-CALSUB                                          00006740
*                                                                       00006750
         DROP  R10                                                      00006760
         EJECT                                                          00006770
*                                                                       00006780
BUFSTORE DC    A(IOBUFSZE)                                              00006790
REQSTORE DC    A(MINSTORE,MAXSTORE)                                     00006800
ALOSTORE DS    2A                                                       00006810
OSPARMS  DS    A                   ADDRESS OF O.S. PARAMETERS        #  00006820
OSPARMAD DC    A(0)                POINTER TO O.S. STRING            #  00006830
USESTORE DC    A(8000)                                                  00006840
OLDPICA  DC    A(1)                                                  #  00006850
EXECTIME DC    XL4'7FFFFFFF'       DEFAULT TIME LIMIT                   00006860
PASSPIE  SPIE  $PASINT,((1,7),9,11,12,15),MF=L                       #  00006870
OSPARML  DC    H'0'                LENGTH OF PARM STRING             #  00006880
DUMPFLAG DC    X'00'               X'FF' IF DUMP REQUESTED              00006890
SPIEFLAG DC    X'00'               X'FF' IF SPIE NOT TO BE ISSUED    #  00006900
SNAPFLAG DC    X'00'               X'FF' IF SNAPSHOT NOT TO BE CALLED#  00006910
*                                                                       00006920
DATESAV  DS    2F        # THESE LOCATIONS TO SUCCEED WITH NO GAPS   @  00006930
         DC    C'  :-'   #      (UNPACKING BUFFERS ETC.)             @  00006940
         DC    X'1900'   #                                              00006950
MONTH    DS    3X        #                                              00006960
JAN      DC    P'31,29,31,30,31,30,31,31,30,31,30,31'                   00006970
KWRDTAB  DC    AL1(0,1,4),C'STACK'                                   &  00006980
         DC    AL1(KWRDIOB-KWRDSTAK,1,4),C'IOBUF'                    &  00006990
         DC    AL1(KWRDDUMP-KWRDSTAK,0,3),C'DUMP'                    &  00007000
         DC    AL1(KWRDTIME-KWRDSTAK,1,3),C'TIME'                    &  00007010
         DC    AL1(KWRDCC-KWRDSTAK,0,1),C'CC'                        &  00007020
         DC    AL1(KWRDSPIE-KWRDSTAK,0,3),C'SPIE'                    &  00007030
         DC    AL1(KWRDSNAP-KWRDSTAK,0,3),C'SNAP'                    &  00007040
         DC    AL1(0,0,0)          END-OF-TABLE MARKER               &  00007050
*                                                                       00007060
         LTORG ,                                                        00007070
         EJECT                                                          00007080
*********************************************************************** 00007090
*                                                                       00007100
*                                                                       00007110
*        INTERRRUPT PROCCESSING FOR PASCAL PROGRAMS                     00007120
*                                                                       00007130
*        ONLY FIXED/FLOAT DIVISION BY ZERO AND EXPONENT OVERFLOW        00007140
*        INTERRUPTS ARE EXPECTED TO BE CAUGHT HERE, OTHER INTERRUPTS    00007150
*        IN GENERAL ARE CAUSED BY STACK/HEAP OVER FLOW OR A BAD I/O     00007160
*        FILE SPECIFICATION AND OR MISSING APPROPRIATE DD STATEMENTS.   00007170
*                                                                       00007180
*********************************************************************** 00007190
         USING $PASINT,R15                                              00007200
$PASINT  B     *+12                                                     00007210
         DC    X'7',C'$PASINT'                                          00007220
         MVC   INTDATA(12),0(R1)   SAVE ALL INTERRUPT DATA           *  00007230
         MVC   INTDATA+12(20),20(R1)                                 *  00007240
         STM   R3,R13,INTDATA+24                                     *  00007250
         MVC   INTDATA+68(8),12(R1)                                  *  00007260
         LA    R0,PASINT1          GO TO PASINT1 VIA THE CONTROL     #  00007270
         ST    R0,8(R1)            PROGRAM TO CANCEL SPIE EXIT       #  00007280
         BR    R14                                                   #  00007290
         DROP  R15                                                   #  00007300
*                                                                       00007310
PASINT1  BALR  R11,0               RE-ESTABLISH ADDRESSABILITY       #  00007320
         USING *,R11                                                 #  00007330
         L     R1,=A(OLDPICA)      CANCEL THE SPIE TRAP              #  00007340
         L     1,0(R1)             THAT IS IN EFFECT                 #  00007350
         SPIE  MF=(E,(1))                                            #  00007360
*                                                                    #  00007370
*        GET INTERRUPT CODE AND POINT TO THE APPROPRIATE ERROR MESSAGE  00007380
*                                                                       00007390
         SR    R4,R4                                                    00007400
         IC    R4,INTDATA+7        GET THE INTERRUPT CODE            #  00007410
         LA    R8,2000(R4)         SET THE RETURN CODE                  00007420
         IC    R4,MSGTBL(R4)                                            00007430
         LA    R3,MSGTXT+1(R4)     R3 --> ERROR MESSAGE                 00007440
         IC    R4,MSGTXT(R4)       R4 --> MESSAGE LENGTH                00007450
         L     R14,INTDATA+8       GET LOCATION OF INTERRUPT         #  00007460
         CLI   SPUSERSA,X'FF'      SEE IF INTERR. IN SP MODULE          00007470
         BE    NOTINSP                                                  00007480
*                                                                       00007490
*        IF INTERRUPTION OCCURED WITHIN THE '$PASCSP' ROUTINE PATCH UP  00007500
*        A SAVE AREA TO POINT TO CALLERS SAVE AREA FOR A MEANINGFULL    00007510
*        ERROR MESSAGE.                                                 00007520
*                                                                       00007530
         L     R5,=A(SPUSERSA)              GET USER REGS               00007540
         LM    R12,R15,(R12-R1)*4(R5)       GET IMPORTANT VALUES        00007550
         LR    R10,R15                      SET PROC ENTRY POINT ADR    00007560
         ST    R13,FAKESA+4                 SET SAVE AREA CHAIN         00007570
         STM   R14,R15,FAKESA+12            SET RETURN ADR FIELD        00007580
         LA    R13,FAKESA                                               00007590
         L     R14,INTDATA+8       RESET INTERRUPT LOCATION          #  00007600
         B     KNOWNPRC                                                 00007610
*                                                                       00007620
*        SEE IF R10 POINTS TO THE BEGINING OF A PROC.                   00007630
*                                                                       00007640
NOTINSP  L     R12,=A(ALOSTORE)        GET THE STACK ADDRESS            00007650
         L     R12,0(R12)                                               00007660
         LA    R12,STACK-DYNSTORE(R12) POINT TO BASE OF THE STACK       00007670
         LA    R10,0(R10)                                               00007680
*        C     R10,=A($PASCSP)                                       #  00007690
*        BL    FIXENTRY                IF R10 IS OUT OF BOUND, SKIP  #  00007700
*        C     R10,=A($MAINBLK)                                      #  00007710
*        BH    FIXENTRY                                              #  00007720
         LH    R5,0(R10)               R10 IS WITHIN BOUND, SEE IF      00007730
         CH    R5,=XL2'47F0'           IT POINTS TO A PROC ENTRY POINT  00007740
         BNE   FIXENTRY                                                 00007750
         CR    R13,R12                 SEE IF SAVE AREA PTR IS          00007760
         BL    FIXENTRY                WITHIN BOUNDS                    00007770
         C     R13,NEWPTR-STACK(R12)                                    00007780
         BH    FIXENTRY                                                 00007790
         C     R10,16(R13)             CONSISTANCY CHECK                00007800
         BE    KNOWNPRC                THIS IS A USER PROCEDURE ?       00007810
*                                                                       00007820
*        R10 POINTS TO NOWHERE, FAKE A PROCEDURE HEADING                00007830
*                                                                       00007840
FIXENTRY ST    R12,4+FAKESA            CHAIN THE FAKE SAVE AREA         00007850
         L     R5,16(R12)              POINT TO $MAINBLK ENTRY POINT    00007860
         ST    R5,12+FAKESA            SET RET. ADR. FROM FAKE PROC     00007870
         LA    R10,FAKEPROC            POINT TO THE ENTRY OF FAKEPROC   00007880
         AR    R14,R10                 ALSO SET THE ERROR LOCATION ADR  00007890
         LA    R13,FAKESA                                               00007900
*                                                                       00007910
*        THIS IS THE ENTRY TO A FAKE PROC TO BE USED IF                 00007920
*        NO MEANINGFULL PROC IS FOUND AFTER AN INTRRUPT                 00007930
*                                                                       00007940
KNOWNPRC L     R15,=A($CHKMSG)                                       &  00007950
         BR    R15                GO TO PRINT ERROR MESSAGE             00007960
*                                                                       00007970
         USING *,R15                                                    00007980
FAKEPROC B     *+12                                                     00007990
         DC    AL1(7),C'UNKNOWN'                                        00008000
*                                                                       00008010
FAKESA   DC    6F'0'                                                    00008020
*                                                                    #  00008030
         DC    CL8'INTDATA'                                          #  00008040
INTDATA  DC    19F'0'              INTERRUPT DATA                    &  00008050
*                                                                       00008060
MSGTBL   DC    AL1(0,IMSG1,IMSG1,IMSG1,IMSG1,IMSG1,IMSG1,IMSG1,IMSG1)   00008070
         DC    AL1(IMSG2,IMSG1,IMSG2,IMSG3,IMSG1,IMSG1,IMSG2)           00008080
*                                                                       00008090
MSGTXT   DS    0C                                                       00008100
IM1      DC    AL1(L'IMSG1),C' PROGRAM INTERRUPT, SEE RETURN CODE.'     00008110
IMSG1    EQU   IM1-MSGTXT,*-IM1-1                                       00008120
IM2      DC    AL1(L'IMSG2),C' DIVISION BY ZERO '                       00008130
IMSG2    EQU   IM2-MSGTXT,*-IM2-1                                       00008140
IM3      DC    AL1(L'IMSG3),C' EXPONENT OVERFLOW '                      00008150
IMSG3    EQU   IM3-MSGTXT,*-IM3-1                                       00008160
         DC    C'    '                                                  00008170
         DROP  R11                                                      00008180
*                                                                       00008190
***************************************************************         00008200
*                                                                       00008210
*        END OF INTERRUPT HANDLING ROUTINE                              00008220
*                                                                       00008230
***************************************************************         00008240
         EJECT                                                          00008250
         AIF   (&SYSTEM).SYS900                                         00008260
*                                                                       00008270
*      $TRACER IS CALLED FROM THE PASCAL CODE IN ORDER TO               00008280
*      ENTER A CONTROL TRANSFER INTO THE TRANSFER TABLE                 00008290
*      AND (IF DESIRED) PRINT THIS TRANSFER.                            00008300
*                                                                       00008310
*      CALLING CODE:                                                    00008320
*                       BAL 14,TRACER                                   00008330
*                       DC  AL2( PARAMETER )                            00008340
*                                                                       00008350
*      THE ROUTINE 'TRACER' IS ONE OF THE CHECK ROUTINES                00008360
*      INCLUDED ON THE PASCAL RUN STACK.  ITS STRUCTURE IS              00008370
*      SIMPLY:                                                          00008380
*               TRACER  L    15,=V($TRACER)                             00008390
*                       BR   15                                         00008400
*                                                                       00008410
*      THE HALFWORD PARAMETER TO TRACER HAS THE FOLLOWING               00008420
*      INTERPRETATIONS:                                                 00008430
*                                                                       00008440
*      1.  POSITIVE VALUE IS TAKEN TO MEAN A BRANCH TO THIS             00008450
*          ADDRESS RELATIVE TO THE START OF THE CURRENT                 00008460
*          PROCEDURE (WHOSE BASE ADDRESS IS IN REG 10).                 00008470
*          THIS IS THE USAGE FOR ALL BRANCHES INTERNAL TO A             00008480
*          PROCEDURE.                                                   00008490
*                                                                       00008500
*      2.  ZERO VALUE IMPLIES A PROCEDURE RETURN TO THE                 00008510
*          ADDRESS IN REG. 0.  NOTE: THIS IS ALSO THE USAGE             00008520
*          FOR A GOTO THAT EXITS THE CURRENT PROCEDURE.                 00008530
*                                                                       00008540
*      3.  NEGATIVE VALUE IMPLIES A PROCEDURE CALL TO THE               00008550
*          ABSOLUTE ADDRESS WHICH IS HELD IN A LOCAL V-TYPE             00008560
*          ADDRESS CONSTANT WITHIN THE CURRENT PROCEDURE.               00008570
*          THE ADDRESS CONSTANT'S OFFSET WITHIN THE CURRENT             00008580
*          PROCEDURE IS THE NEGATIVE OF THE PARAMETER VALUE.            00008590
*                                                                       00008600
         DROP  ,                                                        00008610
         USING $TRACER,R15                                              00008620
$TRACER  STM   R0,R2,TRACESA+4                                          00008630
         L     R2,TRPTR           LOAD AND ADVANCE                      00008640
         LA    R2,8(,R2)          THE CYCLIC POINTER                    00008650
         N     R2,=F'127'                                               00008660
         ST    R2,TRPTR                                                 00008670
         LH    R1,0(,R14)         LOAD AND TEST PARAMETER               00008680
         LTR   R1,R1                                                    00008690
         BNP   TRACE4             JUMP IF PROC. CALL/RETURN             00008700
         LA    R1,0(R1,R10)       R1 = DESTINATION ADDRESS              00008710
TRACE2   ST    R1,TRTABL(R2)      PUT IN TABLE                          00008720
         ST    R14,TRTABL+4(R2)   PUT ORIGIN ADDRESS+4 IN TABLE         00008730
         L     R0,TRLINES                                               00008740
         BCT   R0,TRACE6          JUMP TO PRINT TRANSFER                00008750
TRRET    BC    0,TRACE3                                                 00008760
         LR    R14,R1                                                   00008770
         LM    R0,R2,TRACESA+4                                          00008780
         BR    R14                                                      00008790
TRACE3   NI    TRRET+1,X'0F'      CLEAR BRANCH CONDITION                00008800
         LA    R14,2(,R14)                                              00008810
         ST    R1,TRACESA                                               00008820
         LM    R15,R2,TRACESA                                           00008830
         BR    R15                JUMP TO CALLED PROCEDURE              00008840
TRACE4   BZ    TRACE5             JUMP IF PROC. RETURN                  00008850
         OI    TRRET+1,X'F0'      FORCE LATER JUMP TO TRACE3            00008860
         LPR   R1,R1              MAKE OFFSET POSITIVE                  00008870
         L     R1,0(R1,R10)       LOAD THE ADDRESS CONSTANT             00008880
         O     R1,TRACEFL1        SET FLAG BYTE (FOR CALL)              00008890
         B     TRACE2                                                   00008900
TRACE5   LR    R1,R0                                                    00008910
         LA    R1,0(,R1)          CLEAR HIGH BYTE                       00008920
         O     R1,TRACEFL2        SET FLAG BYTE (FOR RETURN)            00008930
         B     TRACE2                                                   00008940
TRACE6   ST    R0,TRLINES         STORE UPDATED LINE COUNT              00008950
         L     R15,=A(TRPR1)                                            00008960
         BALR  R14,R15            CALL PRINT ROUTINE                    00008970
         USING *,R14                                                    00008980
         L     R15,=A($TRACER)    RESTORE BASE REG.                     00008990
         DROP  R14                                                      00009000
         L     R14,TRTABL+4(R2)   RESTORE RETURN REG                    00009010
         B     TRRET                                                    00009020
*                                                                       00009030
*      TRDUMP IS CALLED IN CASE OF ABNORMAL PROGRAM TERMINATION         00009040
*      TO PRINT OUT THE CONTENTS OF THE TRACE TABLE.                    00009050
*                                                                       00009060
TRDUMP   LR    R10,R15                                                  00009070
         DROP  ,                                                        00009080
         USING TRDUMP,R10                                               00009090
         USING STACK,GBR                                                00009100
         TM    TRPTR,X'80'                                              00009110
         BOR   R14                RETURN IF TABLE IS EMPTY              00009120
         ST    R14,TRDUMPSV       SAVE RETURN ADDRESS                   00009130
         L     R15,=A($PASCSP)                                          00009140
         LA    AD,OUTPUT                                                00009150
         L     AE,=A(FILOUT)                                            00009160
         TM    FILOPN(AE),WRITEOPN                                      00009170
         BNZ   TRDUMP1            JUMP IF OUTPUT FILE OPEN              00009180
         LA    R1,PREW            FORCE THE FILE TO BE OPEN             00009190
         B     TRDUMP2                                                  00009200
TRDUMP1  LA    R1,PSKP            DOUBLE-SPACE                          00009210
         LA    R2,2                                                     00009220
TRDUMP2  BALR  R14,R15                                                  00009230
         LA    R2,TRDUMPMS                                              00009240
         LA    R3,L'TRDUMPMS                                            00009250
         LR    R4,R3                                                    00009260
         LA    R1,PWRS            PUT OUT HEADING                       00009270
         BALR  R14,R15                                                  00009280
         LA    R6,16              LOAD NO. OF TABLE ENTRIES             00009290
TRDUMP3  L     R2,TRPTR                                                 00009300
         LA    R2,8(,R2)                                                00009310
         N     R2,=F'127'         CYCLICALLY ADVANCE POINTER            00009320
         ST    R2,TRPTR                                                 00009330
         LA    R15,TRPR1                                                00009340
         L     R1,TRTABL(R2)      LOAD TABLE ENTRY                      00009350
         LTR   R1,R1              TEST IF EMPTY                         00009360
         BZ    *+6                                                      00009370
         BALR  R14,R15            PRINT NON-EMPTY ENTRY                 00009380
         XC    TRPRFST(4),TRPRFST FORCE NEXT ITEM ON NEW LINE           00009390
         BCT   R6,TRDUMP3                                               00009400
         L     R14,TRDUMPSV                                             00009410
         BR    R14                RETURN                                00009420
*                                                                       00009430
*      TRPR1 OUTPUTS ONE ENTRY IN THE TRACE TABLE.  THE INDEX           00009440
*      OF THIS ENTRY IS GIVEN BY REG 2.                                 00009450
*                                                                       00009460
         DROP  ,                                                        00009470
         USING TRPR1,R15                                                00009480
         USING STACK,GBR                                                00009490
TRPR1    STM   R0,R15,TRPRSAV                                           00009500
         LR    R10,R15                                                  00009510
         USING TRPR1,R10                                                00009520
         DROP  R15                                                      00009530
         LA    R3,TRTABL(R2)                                            00009540
         MVC   TRPRDLIM(3),=C' ->'                                   &  00009550
         MVC   TRPRTAG(1),0(R3)                                      &  00009560
         LR    R6,R2                                                    00009570
         SR    R0,R0                                                    00009580
         TM    0(R3),X'FF'                                              00009590
         BZ    TRPR3              JUMP FOR NORMAL BRANCH                00009600
         BM    TRPR2              JUMP IF PROC. RETURN                  00009610
         MVC   TRPRMSG(10),=C' CALL FROM'                               00009620
         LA    R0,10                                                    00009630
         B     TRPR3                                                    00009640
TRPR2    MVC   TRPRMSG(12),=C' RETURN FROM'                             00009650
         LA    R0,12                                                    00009660
TRPR3    STH   R0,TRPRLEN         SAVE STRING LENGTH SO FAR             00009670
         L     R1,TRTABL+4(R6)    LOAD ORIGIN ADDRESS                   00009680
         SH    R1,=H'4'                                                 00009690
         LA    R15,TRLN                                              &  00009700
         BALR  R5,R15              CONVERT TO TEXT                   &  00009710
         LTR   R0,R0              TEST RETURN CODE                      00009720
         BNZ   TRPR6              JUMP IF INCOMPLETE INFO.              00009730
         TM    TRPRTAG,X'FF'      TEST TRANSFER TYPE                    00009740
         BZ    TRPR4              JUMP IF NORMAL BRANCH                 00009750
         MVC   TRPRDLIM(3),=C' TO'                                      00009760
TRPR4    LH    R1,TRPRLEN                                               00009770
         LA    R4,TRPRMSG(R1)                                           00009780
         ALR   R1,R3              COMPUTE NEW TEXT LENGTH               00009790
         EX    R3,TRPRMVC1        CATENATE STRINGS                      00009800
         LA    R1,3(,R1)                                                00009810
         ALR   R4,R3                                                    00009820
TRPR4A   MVC   0(3,R4),TRPRDLIM   CATENATE 'TO' SYMBOL                  00009830
         STH   R1,TRPRLEN                                               00009840
         L     R1,TRTABL(R6)                                            00009850
         LA    R1,0(,R1)                                                00009860
         TM    TRPRTAG,X'FF'      TEST IF PROC. CALL                    00009870
         BNO   *+8                SKIP NEXT ACTION IF NOT A CALL        00009880
         ST    R1,TRLNLAST        TELL TRLN ABOUT THE NEW PROC.         00009890
         LA    R15,TRLN                                              &  00009900
         BALR  R5,R15              CONVERT IT TO TEXT                &  00009910
         LTR   R0,R0              TEST RETURN CODE                      00009920
         BNZ   TRPR9                                                    00009930
         TM    TRPRTAG,X'FF'      TEST TRANSFER TYPE                    00009940
         BZ    TRPR5              JUMP IF NORMAL BRANCH                 00009950
         LR    R3,R4              FORCE FULL MESSAGE TEXT               00009960
TRPR5    LH    R1,TRPRLEN                                               00009970
         LA    R4,TRPRMSG(R1)                                           00009980
         ALR   R1,R3                                                    00009990
         EX    R3,TRPRMVC1        CATENATE STRINGS                      00010000
         LA    R1,2(,R1)                                                00010010
         ALR   R4,R3                                                    00010020
         MVC   0(2,R4),=C'; '                                           00010030
         STH   R1,TRPRLEN                                               00010040
         B     TRPR10             GO AND PRINT MESSAGE                  00010050
TRPR6    TM    TRPRTAG,X'FF'                                            00010060
         BZ    TRPR4              (SHOULD NOT OCCUR)                    00010070
         CH    R0,=H'4'                                                 00010080
         BH    TRPR7              JUMP IF NO INFO AT ALL                00010090
         LA    R2,6(,R2)          OTHERWISE, JUST USE                   00010100
         SH    R4,=H'6'           THE PROCEDURE NAME                    00010110
         LR    R3,R4                                                    00010120
         B     TRPR4-6                                                  00010130
TRPR7    LH    R1,TRPRLEN         IF NO INFO, WE WONT INCLUDE           00010140
         SH    R1,=H'3'           THE ORIGIN IN THE MESSAGE             00010150
         LA    R4,TRPRMSG-2(R1)                                         00010160
         B     TRPR4A                                                   00010170
TRPR9    TM    TRPRTAG,X'FF'                                            00010180
         BZ    TRPR5              (SHOULD NOT OCCUR)                    00010190
         LA    R2,5(,R2)          JUST USE THE PROCEDURE                00010200
         SH    R4,=H'5'           NAME PART                             00010210
         LR    R3,R4                                                    00010220
         B     TRPR5                                                    00010230
TRPR10   L     R15,=A($PASCSP)                                          00010240
         L     AE,=A(FILOUT)                                            00010250
         LA    AD,OUTPUT                                                00010260
         TM    FILOPN(AE),WRITEOPN                                      00010270
         BNZ   TRPR11                                                   00010280
         LA    R1,PREW                                                  00010290
         BALR  R14,R15            FORCE FILE TO BE OPEN                 00010300
         B     TRPR12A                                                  00010310
TRPR11   CLC   FILBUF(16,AE),TRPRFST   TEST IF FILE HAS BEEN USED       00010320
         BNE   TRPR12             SINCE LAST CALL TO TRPR               00010330
         LH    R1,TRPRFEND                                              00010340
         STH   R1,FILEND(AE)      RESET FILE ATTRIBUTES                 00010350
         SH    R1,FILPTR(AE)                                            00010360
         CH    R1,TRPRLEN         SEE IF ENOUGH ROOM ON LINE            00010370
         BH    TRPR13             JUMP IF NOT                           00010380
TRPR12   LA    R1,PWLN                                                  00010390
         BALR  R14,R15            FORCE NEW LINE                        00010400
TRPR12A  LA    R1,PWRS            PUT OUT A SPECIAL                     00010410
         LA    R2,=C' *TRACE:'    MARGIN MESSAGE TO                     00010420
         LA    R3,8               FLAG TRACE OUTPUT                     00010430
         LR    R4,R3                                                    00010440
         BALR  R14,R15                                                  00010450
TRPR13   LH    R3,TRPRLEN                                               00010460
         LR    R4,R3                                                    00010470
         LA    R2,TRPRMSG                                               00010480
         LA    R1,PWRS                                                  00010490
         BALR  R14,R15            OUTPUT TRACE MESSAGE                  00010500
         LH    R1,FILEND(AE)                                            00010510
         STH   R1,TRPRFEND        SAVE FILE STATUS                      00010520
         LH    R1,FILPTR(AE)                                            00010530
         BCTR  R1,0               FLAG LINE AS 'OVER-FULL'              00010540
         STH   R1,FILEND(AE)                                            00010550
         MVC   TRPRFST(16),FILBUF(AE)   SAVE COPY OF FILE STATE         00010560
         LM    R0,R15,TRPRSAV                                           00010570
         BR    R14                                                      00010580
         SPACE 2                                                        00010590
*                                                                       00010600
*     TRLN CONVERTS AN ABSOLUTE ADDRESS IN THE CODE AREA INTO A         00010610
*     TEXT STRING THAT SPECIFIES THE SOURCE LINE NUMBER AND THE         00010620
*     PROCEDURE/FUNCTION NAME.  FOR EXAMPLE, THE FOLLOWING STRING       00010630
*     IS A POSSIBLE RESULT:                                             00010640
*            ' 276 IN TREE_SEARCH '                                     00010650
*     IF THE LINE NO. IS UNAVAILABLE, A QUESTION MARK APPEARS IN        00010660
*     THE MESSAGE.  IF THE PROCEDURE NAME IS UNAVAILABLE (BECAUSE       00010670
*     THE PROCEDURE WAS NOT GENERATED BY PASCAL), THE TEXT STRING       00010680
*     WILL BE ' ? IN UNKNOWN PROC. '.                                   00010690
*                                                                       00010700
*     INPUT PARAMETER:  REG 1 MUST HOLD THE CODE ADDRESS.               00010710
*                                                                       00010720
*     OUTPUT PARAMETERS:                                                00010730
*          REG. 2 = ADDRESS OF TEXT STRING,                             00010740
*          REG. 4 = LENGTH OF TEXT STRING,                              00010750
*          REG. 3 = LENGTH OF TEXT STRING IF PROC. NAME IS OMITTED,     00010760
*          REG. 0 = RETURN CODE (0 MEANS O.K., 4 MEANS LINE NUMBER      00010770
*                   APPEARS AS '?', 8 MEANS UNKNOWN PROCEDURE).         00010780
*                                                                       00010790
         DROP  ,                                                        00010800
         USING TRLN,R15                                                 00010810
TRLN     LA    R1,0(,R1)          CLEAR HIGH BYTE                       00010820
         L     R2,TRLNLAST        BASE ADDRESS OF LAST PROC.            00010830
         LR    R0,R1                                                    00010840
         SR    R0,R2              TEST IF CURRENT ADDRESS IS WITHIN     00010850
         BM    TRLN0              THIS LAST PROC.                       00010860
         BZ    TRLN4                                                    00010870
         CH    R0,=H'8192'                                              00010880
         BNL   TRLN0                                                    00010890
         LH    R0,10(,R2)         THIS SHOULD BE THE CODE SIZE          00010900
         CL    R0,=F'8192'        OF THE PROCEDURE                      00010910
         BNL   TRLN0                                                    00010920
         AR    R0,R2                                                    00010930
         CR    R1,R0                                                    00010940
         BL    TRLN4              PASSED ALL CHECKS                     00010950
*                                                                       00010960
TRLN0    LR    R2,R1                                                    00010970
         N     R2,TRLNMSK         FORCE DOUBLE-WORD ALIGNMENT           00010980
         LH    R0,TRLNPROL        LOAD PROC. START PATTERN              00010990
         LA    R3,1024            SET 8K SEARCH LIMIT                   00011000
TRLN1    CH    R0,0(,R2)                                                00011010
         BNE   TRLN2              JUMP IF MISMATCH                      00011020
         CLC   2(3,R2),=X'F00C07'                                       00011030
         BE    TRLN6              JUMP IF MATCH FOR PROC. START         00011040
         CLC   2(3,R2),=X'F02C27'                                       00011050
         BE    TRLN6              JUMP IF MATCH FOR $MAINBLK            00011060
TRLN2    SH    R2,=H'8'                                                 00011070
         BCT   R3,TRLN1                                                 00011080
TRLN3    LA    R2,=C' ? IN UNKNOWN PROC. '                              00011090
         LA    R4,20                                                    00011100
         LA    R3,3                                                     00011110
         LA    R0,8                                                     00011120
         BR    R5                                                       00011130
TRLN4    CLC   0(5,R2),=X'47F0F00C07'                                   00011140
         BE    TRLN5              DOUBLE-CHECK FOR STANDARD ENTRY CODE  00011150
         CLC   0(5,R2),=X'47F0F02C27'                                   00011160
         BNE   TRLN3                                                    00011170
TRLN5    ST    R2,TRLNLAST        SAVE PROC. ADDR. FOR NEXT TIME        00011180
TRLN6    LH    R3,10(R2)                                                00011190
         CL    R3,=F'8192'                                              00011200
         BNL   TRLN10             JUMP IF NO LINE NUM TABLE PROVIDED    00011210
         ALR   R3,R2                                                    00011220
         MVC   TRLNMSG+10(12),4(R3)                                     00011230
         MVC   TRLNMSG(10),TRLNPAT SET UP EDIT PATTERN                  00011240
         SLR   R1,R2                                                    00011250
         SRA   R1,1               CONVERT TO HALFWORD OFFSET            00011260
         LH    R2,2(,R3)                                                00011270
         SR    R0,R0                                                    00011280
TRLN7    IC    R0,16(,R3)         LOAD ENTRY IN LINE NUM TABLE          00011290
         CH    R0,=H'250'                                               00011300
         BL    TRLN8              JUMP IF NOT ESCAPE MODE ENTRY         00011310
         CH    R0,=H'255'                                               00011320
         BE    TRLN9              EXIT IF END OF TABLE FLAG             00011330
         IC    R0,17(,R3)                                               00011340
         SLA   R0,8                                                     00011350
         SR    R1,R0              PROCESS 1ST BYTE OF LARGE ENTRY       00011360
         SR    R0,R0                                                    00011370
         IC    R0,18(,R3)         BUT TREAT LOW BYTE AS NORMAL ENTRY    00011380
         LA    R3,2(,R3)                                                00011390
TRLN8    LA    R3,1(,R3)                                                00011400
         LA    R2,1(,R2)                                                00011410
         SR    R1,R0                                                    00011420
         BP    TRLN7                                                    00011430
         BCTR  R2,0               CORRECT OVERSHOOT OF LINE NUM         00011440
TRLN9    CVD   R2,TRLNPINT                                              00011450
         LA    R1,TRLNMSG+5                                             00011460
         EDMK  TRLNMSG(6),TRLNPINT+5                                    00011470
         BCTR  R1,0                                                     00011480
         LR    R2,R1                                                    00011490
         LA    R4,TRLNMSG+22                                            00011500
         BCTR  R4,0               REMOVE                                00011510
         CLI   0(R4),C' '         TRAILING                              00011520
         BE    *-6                BLANKS FROM                           00011530
         LA    R4,1(,R4)          PROCEDURE NAME                        00011540
         SLR   R4,R1                                                    00011550
         LA    R3,TRLNMSG+6                                             00011560
         SLR   R3,R1                                                    00011570
         SR    R0,R0                                                    00011580
         BR    R5                                                       00011590
TRLN10   MVC   TRLNMSG(6),=C' ? IN '                                    00011600
         MVC   TRLNMSG+6(7),5(R2)                                       00011610
         LA    R2,TRLNMSG                                               00011620
         LA    R3,3                                                     00011630
         LA    R4,13                                                    00011640
         LA    R0,4                                                     00011650
         BR    R5                                                       00011660
*                                                                       00011670
TRTABL   DC    32F'0'              SPACE FOR 16 CONTROL TRANSFERS       00011680
TRPTR    DC    F'-8'                                                    00011690
TRACESA  DS    4F                                                       00011700
TRACEFL1 DC    XL4'FF000000'                                            00011710
TRACEFL2 DC    XL4'FE000000'                                            00011720
TRLINES  DC    F'1'               => NO TRACE OUTPUT                    00011730
TRDUMPSV DS    F                                                        00011740
TRDUMPMS DC    C'0*  TRACE OF LAST 16 CONTROL TRANSFERS'                00011750
TRPRMVC1 MVC   0(*-*,R4),0(R2)                                          00011760
TRPRSAV  DS    16F                                                      00011770
TRPRLEN  DS    1H                                                       00011780
TRPRFEND DS    1H                                                       00011790
TRPRFST  DS    16X                                                      00011800
TRPRTAG  DS    1X                                                       00011810
TRPRDLIM DS    3C                                                       00011820
TRPRMSG  DS    64C                                                      00011830
TRLNPINT DS    D                                                        00011840
TRLNMSK  DC    X'00FFFFF8'                                              00011850
TRLNPROL DC    X'47F0'                                                  00011860
TRLNMSG  DC    23C' '                                                   00011870
TRLNLAST DC    A($MAINBLK)                                              00011880
TRLNPAT  DC    X'402020202120',C' IN '                                  00011890
         LTORG                                                          00011900
         AGO   .USE900                                                  00011910
.SYS900  ANOP                                                           00011920
*                                                                       00011930
*                                                                    &  00011940
*        - DUMMY VERSION FOR COMPACT SP                              &  00011950
*                                                                    &  00011960
         USING $TRACER,R15                                           &  00011970
$TRACER  STM   R0,R1,TRACESA+4                                       &  00011980
         LH    R1,0(,R14)          LOAD PARAMETER                    &  00011990
         LTR   R1,R1               TEST FOR TRANSFER TYPE            &  00012000
         BNP   TRACE4                                                &  00012010
         LA    R14,0(R1,R10)       OFFSET WITHIN CUR. PROC.          &  00012020
         L     R1,TRACESA+8                                          &  00012030
         BR    R14                                                   &  00012040
TRACE4   BZ    TRACE5                                                &  00012050
         LPR   R1,R1                                                 &  00012060
         LA    R14,2(,R14)         COMPUTE RETURN ADDRESS            &  00012070
         L     R0,0(R1,R10)        LOAD PROC. ADDRESS                &  00012080
         ST    R0,TRACESA                                            &  00012090
         LM    R15,R1,TRACESA      LOAD AFFECTED REG.S               &  00012100
         BR    R15                 GOTO PROCEDURE                    &  00012110
TRACE5   LR    R14,R0              LOAD RETURN ADDRESS               &  00012120
         BR    R14                 AND GOTO IT                       &  00012130
TRACESA  DS    3F                                                    &  00012140
*                                                                       00012150
.USE900  ANOP                                                           00012160
         DROP ,                                                         00012170
         USING $RNGCHK,R15                                              00012180
$RNGCHK  STM   R0,R15,CHKSVALL                                       &  00012190
         BAL   R3,BADRNG                                             &  00012200
         DC    AL2(26,SUBERR),C' SUBRANGE VALUE OUT OF RANGE '       &  00012210
         USING $INXCHK,R15                                              00012220
$INXCHK  STM   R0,R15,CHKSVALL                                       &  00012230
         BAL   R3,BADRNG                                             &  00012240
         DC    AL2(23,INXERR),C' INDEX VALUE OUT OF RANGE '          &  00012250
         USING $PRMCHK,R15                                              00012260
$PRMCHK  STM   R0,R15,CHKSVALL                                       &  00012270
         BAL   R3,BADRNG                                             &  00012280
         DC    AL2(28,PARERR),C' ACTUAL PARAMETER OUT OF RANGE '     &  00012290
*                                                                       00012300
*                                                                       00012310
*        POINTER CHECK ROUTINE                                          00012320
*                                                                       00012330
*                                                                       00012340
         USING $PTACHK,R15                                              00012350
$PTACHK  SR    R0,R0                                                    00012360
         BCTR  R0,0     R0 <-- '-1'                                     00012370
         CR    R0,R2                                                    00012380
         BER   R14      NIL VALUE BEING ASSIGNED                        00012390
*                                                                       00012400
         BALR  R15,0    GO TO NEXT ROUTINE TO CNTINUE CHECKING          00012410
*                                                                       00012420
         USING $PTRCHK,R15                                              00012430
         USING STACK,R12                                             &  00012440
$PTRCHK  LM    R0,R1,NEWPTR   LOAD POINTER RANGE                        00012450
         CR    R2,R0    CHECK LOWER BOUND                               00012460
         BL    BADPTR                                                   00012470
         CR    R2,R1    CHECK UPPER BOUND                               00012480
         BNHR  R14      IF WITHIN BOUNDS, RETURN                        00012490
BADPTR   STM   R0,R15,CHKSVALL SAVE IN CASE OF RETURN                   00012500
         BAL   R3,RUNMSG                                             &  00012510
         DC    AL2(28,PTRERR),C' POINTER VALUE OUT OF RANGE '        &  00012520
*                                                                       00012530
*                                                                       00012540
*        SET MEMBER CHECK ROUTINE                                       00012550
*                                                                       00012560
         USING $SETCHK,R15                                              00012570
$SETCHK  STM   R0,R15,CHKSVALL    SAVE IN CASE OF RETURN                00012580
         BAL   R3,RUNMSG                                             &  00012590
         DC    AL2(28,SETERR),C' SET MEMBER(S) OUT OF RANGE '        &  00012600
*                                                                       00012610
*        STACK/HEAP INTERFERENCE ERROR                                  00012620
*                                                                       00012630
         USING $STKCHK,R15                                              00012640
$STKCHK  BAL   R3,RUNMSG                                             &  00012650
         DC    AL2(22,STKERR),C' STACK/HEAP COLLISION '              &  00012660
*                                                                       00012670
*        'TIME OUT' ENTRY POINT                                         00012680
*                                                                       00012690
*        ASSUMES THAT R10 POINTS TO THE CURR PROC ENTRY POINT           00012700
*        THIS MAY NOT BE TRUE UNDER MFT OR SOME OTHER VARIANTS          00012710
*        OF THE OPERATING SYSTEM. ( 'STIMER' PECULIARITY )              00012720
*                                                                       00012730
$TIMEOUT  BALR  R15,0                                                   00012740
         USING *,R15                                                    00012750
         L     R12,=A(ALOSTORE)   RESTORE STACK POINTER IN CASE !       00012760
         L     R12,0(R12)                                               00012770
         LA    R12,STACK-DYNSTORE(R12)                                  00012780
         LR    R13,R12                                                  00012790
*                                                                       00012800
         CLI   SPUSERSA,X'FF'     SEE IF TIMER WENT OFF IN '$PASCSP'    00012810
         BE    TIMEOUT2                                                 00012820
         LM    R1,R14,SPUSERSA     IF SO, RESTORE REGS ACCORDINGLY      00012830
         B     TIMEOUT4                                                 00012840
*                                                                       00012850
TIMEOUT2 L     R1,16          LOAD CVT ADDR                          #  00012860
         L     R1,0(,R1)      LOAD TCB WORDS ADDR                    #  00012870
         L     R1,4(,R1)      ADDR OF CURRENT TCB                    #  00012880
         L     R1,120(,R1)    ADDR OF TQE                            #  00012890
         L     R1,28(,R1)     ADDR OF RB                             #  00012900
         L     R1,20(,R1)     WORD2 OF OLD PSW (AT LAST)             #  00012910
         LA    R14,0(,R1)     SET ERROR LOC TO THIS ADDRESS          #  00012920
TIMEOUT3 C     R10,16(R13)        GO DOWN THE CALL CHAIN UP TO          00012930
         BE    TIMEOUT4           CURRENT PROC.                         00012940
         L     R13,8(R13)         PROCEED TO NEXT SAVE AREA             00012950
         B     TIMEOUT3                                                 00012960
TIMEOUT4 BAL   R3,RUNMSG                                             &  00012970
         DC    AL2(21,TIMERR),C' TIME LIMIT EXCEEDED '               &  00012980
*                                                                       00012990
BADRNG   BALR  R15,0                                                 &  00013000
         USING *,R15                                                 &  00013010
         LH    R0,0(,R14)          GET S-FORMAT ADDRESS PARM.        &  00013020
         STH   R0,*+6              PLANT IN NEXT INSTR.              &  00013030
         LM    R4,R5,*-*           *** SEE LINE ABOVE ***            &  00013040
         AR    R2,R5                                                 &  00013050
         AR    R4,R5                                                 &  00013060
         LR    R0,R5                                                 &  00013070
         LR    R1,R4                                                 &  00013080
         LA    R14,2(,R14)         TRUE RETURN ADDRESS               &  00013090
         ST    R14,CHKSVALL+4*R14                                    &  00013100
*                                                                       00013110
RUNMSG   BALR  R15,0                                                 &  00013120
         USING *,R15                                                 &  00013130
         LH    R4,0(,R3)           LOAD MESSAGE LENGTH               &  00013140
         LH    R8,2(,R3)           LOAD ERROR CODE                   &  00013150
         LA    R3,4(,R3)           LOAD MESSAGE ADDRESS              &  00013160
*        B     $CHKMSG                                               &  00013170
*                                                                       00013180
*                                                                       00013190
*                                                                       00013200
*        THIS IS THE ENTRY POINT FOR RUN-TIME ERROR INDICATION          00013210
*        AND THE RELATED MESSAGES.                                      00013220
*                                                                       00013230
*                                                                       00013240
$CHKMSG  BALR  R11,0                                                    00013250
         USING *,R11                                                    00013260
         DROP  R15                                                      00013270
         LA    R14,0(R14)                                               00013280
         LA    R15,0(R15)         GET RID OF FLAG BITS                  00013290
         STM   R14,R13,CHKSAVE    SAVE RELEVANT REGISTERS               00013300
         L     R15,=A($PASCSP)                                       @  00013310
         L     R1,=A(FILOUT)       REFER TO OUTPUT FILE CONTROL BLOCK@  00013320
         LA    R9,OUTPUT                                             @  00013330
         TM    FILOPN(R1),WRITEOPN  CHECK IF "OUTPUT" IS OPEN        @  00013340
         BNZ   $CHKMSG4            JUMP IF OPEN                      @  00013350
         LA    R1,PREW                                               @  00013360
         BALR  R14,R15             CALL PASCSP TO OPEN THE FILE      @  00013370
$CHKMSG4 EQU   *                                                     @  00013380
*                                                                       00013390
         L     R2,SNAPADR                                               00013400
         LTR   R2,R2               IS SNAPSHOT LOADED ?                 00013410
         BZ    NOSNAP                                                   00013420
         L     R2,=A(SNAPFLAG)                                       #  00013430
         CLI   0(R2),X'00'         SNAPSHOT TO BE USED?              #  00013440
         BNE   NOSNAP              NO                                #  00013450
         MVI   0(R2),X'FF'         PREVENT SNAPSHOT BEING REENTERED  @  00013460
         L     R2,=A(FILOUT)       FORCE "OUTPUT" FILE TO            @  00013470
         NI    FILBEG+1(R2),X'FE'  ACCEPT CONTROL CHARS              @  00013480
*                                                                       00013490
         ST    R8,CHKSAVE-4        SAVE ERROR CODE                      00013500
         GETMAIN EC,LV=SNAPAREA,A=SNAPLOCS                           #  00013510
         LTR   R15,R15             SUCCESSFUL ?                      #  00013520
         BNZ   NOSNAP              NOT ENOUGH SPACE FOR SNAPSHOT     #  00013530
         L     R1,SNAPLOCS                                           #  00013540
*        R1 POINTS TO THE BASE OF GOTTEN AREA                           00013550
         SR    R2,R2                                                    00013560
         BCTR  R2,0                R2 <-- '-1'                          00013570
         LA    R3,CHKSAVE-4        SECOND PARM OF 'SNAPSHOT'            00013580
         STM   R2,R3,LCAFTMST+FPRSAREA(R1)                           &  00013590
         L     R15,SNAPADR                                              00013600
         BALR  R14,R15                                                  00013610
         FREEMAIN R,LV=SNAPAREA,A=SNAPLOCS  RETURN THE AREA TO O.S.  #  00013620
         AIF   (&SYSTEM).SYS910                                         00013630
         L     R15,=A(TRDUMP)      CALL THE TRACE TABLE DUMP         &  00013640
         BALR  R14,R15             ROUTINE TO PRINT LAST TRANSFERS   &  00013650
.SYS910  ANOP                                                           00013660
         L     R2,=A(SNAPFLAG)                                       @  00013670
         MVI   0(R2),X'00'         REALLOW SNAPSHOT CALLS            @  00013680
         L     R2,=A(CCFLAG)                                         @  00013690
         TM    0(R2),X'FF'         TEST IF "NOCC" OPTION ON          @  00013700
         BZ    SNAPDONE            JUMP IF NOT                       @  00013710
         L     R2,=A(FILOUT)                                         @  00013720
         OI    FILBEG+1(R2),X'01'  READJUST FILE BLOCK               @  00013730
         B     SNAPDONE                                                 00013740
*                                                                       00013750
NOSNAP   L     R15,=A($PASCSP)                                       &  00013760
         LA    R8,SNPERR(R8)                                            00013770
         BAL   R6,SKIP2                                              @  00013780
*        IF AN INTERRUPT, DUMP PSW AND REGISTERS                     *  00013790
         L     R7,=A(INTDATA+4)    POINT AT INTERRUPT PSW            *  00013800
         TM    3(R7),X'FF'                                           *  00013810
         BZ    NOSNAP4             JUMP IF NOT AN OCX TYPE ERROR     *  00013820
         LA    R2,MSG8                                               *  00013830
         LA    R4,L'MSG8                                             *  00013840
         BAL   R6,MSGLINE          PRINT A DESCRIPTION               *  00013850
         BAL   R6,HEXWORD          PRINT 1ST PSW WORD                *  00013860
         LA    R7,4(,R7)                                             *  00013870
         BAL   R6,HEXWORD          PRINT 2ND PSW WORD                *  00013880
         BAL   R6,SKIP2                                              *  00013890
         LA    R2,MSG9                                               *  00013900
         LA    R4,L'MSG9                                             *  00013910
         BAL   R6,MSGLINE                                            *  00013920
         LA    R5,8                # OF REGS PER LINE                *  00013930
NOSNAP2  LA    R7,4(R7)                                              *  00013940
         BAL   R6,HEXWORD          PRINT REGS 0-7                    *  00013950
         BCT   R5,NOSNAP2                                            *  00013960
         BAL   R6,SKIP2                                              *  00013970
         LA    R2,MSG10                                              *  00013980
         LA    R4,L'MSG10                                            *  00013990
         BAL   R6,MSGLINE                                            *  00014000
         LA    R5,8                # OF REGS ON 2ND LINE             *  00014010
NOSNAP3  LA    R7,4(R7)                                              *  00014020
         BAL   R6,HEXWORD          PRINT REGS 8-15                   *  00014030
         BCT   R5,NOSNAP3                                            *  00014040
         BAL   R6,SKIP2                                              *  00014050
         LA    R2,MSG11                                              &  00014060
         LA    R4,L'MSG11                                            &  00014070
         BAL   R6,MSGLINE                                            &  00014080
         LA    R7,=A($PASENT)                                        &  00014090
         BAL   R6,HEXWORD                                            &  00014100
         BAL   R6,SKIP2                                              &  00014110
NOSNAP4  EQU   *                                                     *  00014120
*                                                                       00014130
         LA    R1,PWRS            THE FUNCTION (WRITE STRING)           00014140
         LA    R2,MSG1                                                  00014150
         LA    R4,L'MSG1                                                00014160
         LA    R3,3(R4)           STRING LENGTH AND FIELD WIDTH         00014170
         BALR  R14,R15                                                  00014180
*                                                                       00014190
         LA    R1,PWRI                 WRITE LOCATION OF ERROR          00014200
         LA    R3,11                                                    00014210
         L     R2,CHKSAVE                                               00014220
         S     R2,CHKSAVE+(R10+2)*4    RELATIVE ADDRESS OF ERROR        00014230
         BM    NOSNAP5             TEST FOR OUT-OF-RANGE             &  00014240
         CH    R2,=H'8192'                                           &  00014250
         BNH   NOSNAP6             ADDRESS OK                        &  00014260
NOSNAP5  LA    R1,PWRC             NOT OK, SO PRINT                  &  00014270
         LA    R2,C'?'             A QUESTION MARK INSTEAD           &  00014280
         LA    R3,2                                                  &  00014290
NOSNAP6  BALR  R14,R15                                                  00014300
*                                                                       00014310
         L     R2,CHKSAVE+4*(R10+2)    POINT TO PROC. ENTRY POINT       00014320
         MVC   MSG2PROC,5(R2)          AND MOVE THE PROC. NAME          00014330
         LA    R1,PWRS                                                  00014340
         LA    R2,MSG2                                                  00014350
         LA    R3,L'MSG2+7                                              00014360
         LR    R4,R3                                                    00014370
         BALR  R14,R15                                                  00014380
*                                                                       00014390
*        INDICATE THE TYPE OF RUN TIME ERROR                            00014400
*                                                                       00014410
         BAL   R6,SKIP2                                              @  00014420
         LA    R1,PWRS                                                  00014430
         LA    R2,MSG1                 ' **** '                         00014440
         LA    R4,7                                                     00014450
         LA    R3,3(R4)                                                 00014460
         BALR  R14,R15                                                  00014470
         LM    R2,R3,CHKSAVE+4*(R3+2)                                   00014480
         LR    R4,R3                                                    00014490
         BALR  R14,R15                                                  00014500
*                                                                       00014510
*        INDICATE THE STATMNT # OF THE ERROR LOCATION, IF ASKED FOR     00014520
*                                                                       00014530
         BAL   R6,PRNTLOC                                               00014540
         AIF   (&SYSTEM).SYS34                                          00014550
*                                                                       00014560
*        PRINT THE ERRONEOUS VALUE AND THE RANGE                        00014570
*                                                                       00014580
PRNTRNG  L     R0,CHKSAVE+4*(R15-R14)                                   00014590
         C     R0,=A($SETCHK)          THESE ERRORS DO NOT HAVE      *  00014600
         BNL   CALCHAIN                A RANGE TO BE PRINTED            00014610
*                                                                       00014620
         LA    R1,PWRS                                                  00014630
         LA    R2,MSG4                                                  00014640
         LA    R4,L'MSG4                                                00014650
         LA    R3,3(R4)                                                 00014660
         BALR  R14,R15                                                  00014670
         LA    R1,PWRI                                                  00014680
         L     R2,CHKSAVE+4*(R2+2)                                      00014690
         LA    R3,8                                                     00014700
         BALR  R14,R15                 PRINT THE OUT OF RANGE VALUE     00014710
         LA    R1,PWRS                                                  00014720
         LA    R2,MSG5                                                  00014730
         LA    R4,L'MSG5                                                00014740
         LR    R3,R4                                                    00014750
         BALR  R14,R15                                                  00014760
         LA    R1,PWRI                                                  00014770
         L     R2,CHKSAVE+4*(R0+2)                                      00014780
         LA    R3,8                                                     00014790
         BALR  R14,R15                 PRINT LOWER BOUND (OF THE RANGE) 00014800
         LA    R3,10                                                    00014810
         L     R2,CHKSAVE+4*(R1+2)                                      00014820
         BALR  R14,R15                 AND THE UPPER BOUND              00014830
         BAL   R6,SKIP2                                              @  00014840
*                                                                       00014850
.SYS34   ANOP                                                           00014860
CALCHAIN BAL   R6,SKIP2                                              @  00014870
         LA    R7,16                   SET MAX # OF LINKS TO BE TRACED  00014880
NXTLNK   CR    R13,R12                 SEE IF END OF STACK              00014890
         BE    ABORT                                                    00014900
         MVC   CALLED(7),5(R10)        MOVE CALLERS NAME                00014910
         L     R5,12(R13)              BACK UP TO THE HIGHER SAVE AREA  00014920
         L     R13,4(R13)                                               00014930
         L     R10,12+(R15-R14)*4(R13) ENTRY POINT OF THE 'CALLER'      00014940
         MVC   CALLER(7),5(R10)        MOVE CALLER'S 'NAME'             00014950
         LA    R2,MSG7                                                  00014960
         LA    R3,L'MSG7                                                00014970
         LR    R4,R3                                                    00014980
         LA    R1,PWRS                                                  00014990
         BALR  R14,R15                                                  00015000
         BAL   R6,PRNTLOC              PRINT WHEREABOUT OF THE CALL     00015010
         BCT   R7,NXTLNK               NEXT LEVEL IF NOT EXHAUSTED      00015020
*                                                                       00015030
*                                                                       00015040
*        TIME TO EXIT                                                   00015050
*                                                                       00015060
ABORT    LA    R1,PWLN                 TERMINATE LINE BUFFER            00015070
         BALR  R14,R15                                                  00015080
*                                                                       00015090
SNAPDONE L     R15,=A($PASCSP)                                          00015100
         LA    R9,OUTPUT                                                00015110
         LA    R1,PWLN                 ANOTHER LINE FOR LUCK         @  00015120
         BALR  R14,R15                                                  00015130
         LR    R2,R8                                                    00015140
         LA    R1,PXIT                                                  00015150
         BR    R15                                                      00015160
*                                                                       00015170
MSGLINE  LA    R1,PWRS             WRITE-STRING                      *  00015180
         LA    R3,3(R4)            SET FIELD-WIDTH                   *  00015190
         LR    R14,R6              SET RETURN ADDRESS                *  00015200
         BR    R15                 GOTO CSP                          *  00015210
*                                                                       00015220
HEXWORD  UNPK  HEXBUF(9),0(5,R7)  CHANGE ZONES TO BYTES              *  00015230
         TR    HEXBUF(8),HEXCHARS  CONVERT TO HEX. CHARS             *  00015240
         LA    R1,PWRS                                               *  00015250
         LA    R2,HEXBUF                                             *  00015260
         LA    R3,9                                                  *  00015270
         LA    R4,8                                                  *  00015280
         LR    R14,R6                                                *  00015290
         BR    R15                 GO AND PRINT THE HEX NUMBER       *  00015300
*                                                                       00015310
PRNTLOC  DS    0H                                                       00015320
SKIP2    LA    R1,PSKP                                               #  00015330
         LA    R2,2                                                  #  00015340
         BALR  R14,R15                                                  00015350
         BR    R6            RETURN TO CALLER                           00015360
.SYS36   ANOP                                                           00015370
*                                                                       00015380
NORETURN DS    X                   IF X'FF' THEN CAN RETURN             00015390
         DS    0D                                                       00015400
CHKSVALL DS    18F                                                      00015410
CHKSAVE  DS    16F                 ALSO INCLUDES THE PREV. FOUR BYTES   00015420
*                                                                       00015430
SNAPADR  DC    V(SNAPSHOT)                                              00015440
SNAPAREA EQU   4096                OVERESTIMATE OF SNAPSHOT DATA SIZE#  00015450
SNAPLOCS DS    A                   ADDRESS OF TEMP SNAPAREA          #  00015460
*                                                                       00015470
HEXBUF   DS    CL9                 UNPACKING BUFFER                  *  00015480
HEXCHARS EQU   *-240               TRANSLATE TABLE FOR CODES         *  00015490
         DC    C'0123456789ABCDEF'  X'F0' TO X'FF' ONLY              *  00015500
*                                                                       00015510
MSG1     DC    C' ****   RUN ERROR AT LOCATION :'                       00015520
*                                                                       00015530
MSG2     DC    C'  OF PROCEDURE :  '                                    00015540
MSG2PROC DS    CL7                                                      00015550
*                                                                       00015560
MSG3     DC    C'  BETWEEN P_STATEMENTS :'                              00015570
*                                                                       00015580
MSG4     DC    C' ****   THE OFFENDING VALUE :'                         00015590
*                                                                       00015600
MSG5     DC    C'  IS NOT IN THE RANGE :'                               00015610
*                                                                       00015620
MS7      DC    C'    ****   '                                           00015630
CALLED   DC    CL7' '                                                   00015640
MSG6     DC    C'  WAS CALLED BY :  '                                   00015650
CALLER   DC    CL7' '                                                   00015660
MSG7     EQU   MS7,*-MS7                                                00015670
MSG8     DC    C' **** INTERRUPT PSW: '                              *  00015680
MSG9     DC    C' **** REGS 0 -  7: '                                *  00015690
MSG10    DC    C' **** REGS 8 - 15: '                                *  00015700
MSG11    DC    C' **** ENTRY POINT, $PASENT, AT: '                   &  00015710
*                                                                       00015720
         DROP  R11                                                      00015730
         LTORG                                                          00015740
         EJECT                                                          00015750
******************************************************************      00015760
*                                                                       00015770
*                                                                       00015780
*        PASCAL I/O AND STANDARD PROCEDURE (CSP) INTERFACE              00015790
*                                                                       00015800
*        FOLLOWING CODE INTERCEPTS ERRORS DETECTED BY FORTRAN        #  00015810
*        MATH. ROUTINES.  SUCH ROUTINES ARE PRESENT IF REFERRED      #  00015820
*        TO BY THE PASCAL PROGRAM.                                   #  00015830
*                                                                       00015840
******************************************************************      00015850
         SPACE 2                                                        00015860
         AIF   (&SYSTEM).SYS38                                          00015870
*                                                                       00015880
*        IHCERRM - CALLED BY FORTRAN MATH ROUTINES IN CASE OF ERROR     00015890
*                                                                       00015900
ERRMON   DS    0H                                                    #  00015910
IHCERRM  DS    0H                                                       00015920
IHOERRM  DS    0H                                                       00015930
IHNERRM  DS    0H                                                    #  00015940
         ENTRY IHCERRM,IHOERRM,IHOERRE,IHNERRM,IHNERRE,IHCERRE       #  00015950
         ENTRY  ERRMON                                               #  00015960
         USING IHCERRM,R15                                              00015970
         L     R1,0(R1)            GET 1ST ARG - PTR TO A(LEN),C'MSG'   00015980
         SR    R4,R4                                                    00015990
         IC    R4,3(R1)            GET THE MESSAGE LENGTH               00016000
         LA    R3,4(R1)            POINT TO MESSAGE TEXT                00016010
         NOPR  0                   WARNING - THE LOCATION ERRMON+19  #  00016020
         BC    0,0                 CAN BE OVERWRITTEN BY FORTRAN     #  00016030
*                                                                       00016040
*        SET RELEVANT REGS ACCORDING TO $CHKMSG CONVENTIONS             00016050
*                                                                       00016060
         L     R13,4(R13)          POINT TO THE ORIGINAL SAVE AREA      00016070
         L     R10,12+4*1(R13)     ENTRY POINT OF THE CURRENT ROUTINE   00016080
         LR    R14,R10             SET ERROR LOC TO ENTRY POINT TOO     00016090
         L     R12,=A(ALOSTORE)                                         00016100
         L     R12,0(R12)                                               00016110
         LA    R12,STACK-DYNSTORE(R12)    AND THE GLOBAL DATA POINTER   00016120
*                                                                       00016130
         L     R15,=A($CHKMSG)                                          00016140
         LA    R8,3001             SET ERROR RETURN CODE                00016150
         BR    R15                 AND JOIN THE ERROR HANDLER           00016160
         DROP  R15                                                      00016170
*                                                                       00016180
*        THE FOLLOWING IS FOR THE FORTRAN ERROR MESSAGES                00016190
*                                                                       00016200
IHCERRE  DS    0H                                                    #  00016210
IHNERRE  DS    0H                                                    #  00016220
IHOERRE  BR    R14                 THIS SHOULD NOT BE CALLED            00016230
         LTORG                                                       #  00016240
*                                                                       00016250
         SPACE 2                                                        00016260
.SYS38   ANOP                                                           00016270
         EJECT                                                          00016280
*****************************************************************       00016290
*                                                                       00016300
*                                                                       00016310
*        $PASCSP (PASCAL I/0) ENTRY POINT                               00016320
*                                                                       00016330
*                                                                       00016340
*****************************************************************       00016350
*                                                                       00016360
         DS    0D                                                       00016370
         USING *,15                                                     00016380
$PASCSP  B     *+12                BRANCH AROUND ID                     00016390
         DC    AL1(7),CL7'$PASCSP'                                      00016400
*                                                                       00016410
         STM   R1,R15,SPUSERSA                                          00016420
         LA    R13,SPSYSTSA        SET UP SYSTEM SAVE AREA              00016430
         LR    R10,R15                                                  00016440
         LA    R11,4092(,R10)                                        @  00016450
         DROP  R15                                                      00016460
         USING $PASCSP,R10         PROVIDE TWO BASE REGS             @  00016470
         USING $PASCSP+4092,R11                                      @  00016480
         USING STACK,GBR                                             @  00016490
         USING IHADCB-FILDCB,AE                                      #  00016500
         L     R1,SUBTBL(R1)                                            00016510
         BR    R1                                                       00016520
SUBTBL   DC    A(GET,PUT,RES,RLN,REW,WLN,WRS,ELN)                       00016530
         DC    A(WRI,WRR,WRC,RDI,RDR,RDC)                               00016540
         DC    A(RDH,RDY,RDD,WRD,WRE,EOL)                            &  00016550
         DC    A(EOF,XIT,RDS,TRP,SIO,EIO,CLK,FDF,PAG,CLS)               00016560
         DC    A(RDB,WRB,SKP,LIM,MSG,EOT,CTR,TRA)                    &  00016570
SPUSERSA DC    18XL4'FFFFFFFF'                                          00016580
SPSYSTSA DS    18F                                                      00016590
*                                                                       00016600
*                                                                       00016610
*        (GET FETCH) GET A CHAR TO (AD)                                 00016620
*                                                                       00016630
FILGFE   LH    R1,FILPTR(AE)                                         #  00016640
         LA    R1,1(,R1)                                             #  00016650
         CH    R1,FILEND(AE)       TEST FOR END-OF-LINE              #  00016660
         BNL   FILGFE2             IF SO, GO AND PROVIDE A BLANK     #  00016670
         IC    R0,0(R1,AF)         PICK UP INPUT CHARACTER           #  00016680
FILGFE1  STC   R0,PFILCOMP(AD)      AND PUT INTO CALLER'S BUFFER     @  00016690
         STH   R1,FILPTR(AE)                                         #  00016700
         BR    R5                                                    #  00016710
FILGFE2  LA    R0,FILBLA           SET EOL CHARACTER                 #  00016720
         MVI   PFILEOL(AD),TRUE    SET EOL FLAG                      @  00016730
         BE    FILGFE1             GO BACK TO RETURN EOL CHAR        #  00016740
*        B     FILGET              NEED TO GET A NEW INPUT RECORD    #  00016750
*                                                                       00016760
*        GET A RECORD TO (AF)                                           00016770
*                                                                       00016780
FILGET   TM    FILEOF(AE),1                                             00016790
         BOR   R5                  RETURN IF END-OF-FILE             #  00016800
         AIF   (&SYSTEM).SYS42                                          00016810
         TM    FILOPN(AE),READOPN                                       00016820
         BZ    BADREAD             IF FILE NOT OPEN FOR READ, COMPLAIN  00016830
.SYS42   ANOP                                                           00016840
FILGET1  MVI   RRFLAG,0            CLEAR REREAD FLAG                 #  00016850
         GET   FILDCB(AE)          READ THE NEXT RECORD              #  00016860
         CLI   RRFLAG,0            TEST IF REREAD ASKED FOR          #  00016870
         BNE   FILGET1             IF SO, GO BACK AND TRY AGAIN      #  00016880
         ST    R1,FILBUF(AE)       STORE ADDRESS OF INPUT RECORD     #  00016890
         LR    AF,R1                                                 #  00016900
         LH    R1,FILBEG(AE)                                         #  00016910
         STH   R1,FILPTR(AE)       RESET CHAR. PTR                   #  00016920
         IC    R0,0(R1,AF)                                           #  00016930
         STC   R0,PFILCOMP(AD)     UPDATE CURRENT FILE ELEMENT       @  00016940
         MVI   PFILEOL(AD),FALSE   CLEAR EOL FLAG                    @  00016950
         MVC   FILEND(2,AE),DCBLRECL    RESET BUFFER LENGTH          #  00016960
         BR    R5                                                       00016970
*                                                                    @  00016980
*        (GET NON-BLANK) GET NEXT NON-BLANK TO (AD)                  @  00016990
*                                                                    @  00017000
FILGNB   LH    R1,FILPTR(AE)                                         @  00017010
         B     FILGNB1                                               @  00017020
FILGNB0  LA    R15,0(R1,AF)                                          @  00017030
         CLI   0(R15),FILBLA                                         @  00017040
         BNE   FILGNB2             JUMP IF WE HAVE A NON-BLANK       @  00017050
         LA    R1,1(,R1)           OTHERWISE, STEP TO NEXT POSITION  @  00017060
FILGNB1  CH    R1,FILEND(AE)                                         @  00017070
         BL    FILGNB0             GO BACK AND TRY AGAIN             @  00017080
         ST    R5,FILPSTSV         NEED TO REFILL THE LINE           @  00017090
         BAL   R5,FILGET                                             @  00017100
         L     R5,FILPSTSV                                           @  00017110
         TM    FILEOF(AE),1        HAVE WE HIT THE EOF?              @  00017120
         BOR   R5                  MAKE ERROR RETURN                 &  00017130
         B     FILGNB                                                @  00017140
FILGNB2  IC    R0,0(R15)           TRANSFER THE CHAR TO              @  00017150
         STC   R0,PFILCOMP(AD)     THE FILE BUFFER                   @  00017160
         MVI   PFILEOL(AD),FALSE   CLEAR EOL FLAG                    @  00017170
         STH   R1,FILPTR(AE)       RESTORE THE FILE POINTER          @  00017180
         B     4(R5)               AND MAKE NORMAL RETURN            &  00017190
*                                                                       00017200
*        (PUT-STORE) PUT A CHAR FROM (AD)                               00017210
*                                                                       00017220
FILPST   LH    R1,FILPTR(AE)                                            00017230
         CH    R1,FILEND(AE)       TEST IF BUFFER FULL               #  00017240
         BNL   FILPST1             CLEAR IT FIRST                    #  00017250
         IC    R0,PFILCOMP(AD)                                       @  00017260
         STC   R0,0(R1,AF)                                           #  00017270
         LA    R1,1(R1)            INCREMENT CHAR. PTR.              #  00017280
         STH   R1,FILPTR(AE)                                         #  00017290
         BR    R5                                                    #  00017300
FILPST1  ST    R5,FILPSTSV         SAVE RETURN ADDRESS               #  00017310
         BAL   R5,FILPUT           EMPTY THE BUFFER                  #  00017320
         L     R5,FILPSTSV                                           #  00017330
         B     FILPST                                                #  00017340
*                                                                       00017350
*        PUT A RECORD (FROM AF)                                         00017360
*                                                                       00017370
FILPUT   DS    0H                                                       00017380
         AIF   (&SYSTEM).SYS44                                          00017390
         TM    FILOPN(AE),WRITEOPN                                      00017400
         BZ    BADWRITE            IF NOT OPEN FOR WRITE, THEN COMPLAIN 00017410
.SYS44   ANOP                                                           00017420
*                                                                    #  00017430
*        PREPARE THE OUTPUT BUFFER FOR TRANSMITTING TO O.S.          #  00017440
*                                                                    #  00017450
         CLI   DCBRECFM,X'80'                                        #  00017460
         BNL   FILPUT4             JUMP IF F OR U-FORMAT             #  00017470
         LA    R0,6                MIN LENGTH FOR VBA RECORDS        #  00017480
         TM    DCBRECFM,X'06'                                        #  00017490
         BNZ   *+6                 JUMP IF CONTROL CHARS             #  00017500
         BCTR  R0,0                ADJUST MIN LENGTH                 #  00017510
         LH    R1,FILPTR(AE)                                         #  00017520
         CR    R1,R0                                                 #  00017530
         BNL   FILPUT2             JUMP IF RECORD SIZE OK            #  00017540
         LTR   AF,AF               RETURN IF THE I/O BUFFER IS NOT   #  00017550
         BZ    FILPUT4             ALLOCATED  (FILE NEWLY OPENED)    #  00017560
         LA    R0,FILBLA                                             #  00017570
         STC   R0,0(R1,AF)         PROVIDE 1 CHAR AT LEAST           #  00017580
         LA    R1,1(R1)                                              #  00017590
         AIF   (&IBM370).M701                                        @  00017600
FILPUT2  STC   R1,1(AF)            SET RDW FOR V-FORMAT              @  00017610
         SRA   R1,8                - BUT DO IT WITH 2 STC INST.S TO  @  00017620
         STC   R1,0(AF)              AVOID ALIGNMENT ERRORS ON 360'S @  00017630
         AGO   .M601                                                 @  00017640
.M701    ANOP  ,                                                     @  00017650
FILPUT2  STCM  R1,3,0(AF)            SET RDW FOR V-FORMAT            @  00017660
.M601    ANOP  ,                                                     @  00017670
*                                                                    #  00017680
FILPUT4  DS    0H                                                       00017690
         PUT   FILDCB(AE)          WRITE THE RECORD                  #  00017700
         ST    R1,FILBUF(AE)       SAVE ADDRESS OF NEXT OUTPUT BUFFER#  00017710
         MVC   FILEND(2,AE),DCBLRECL  RESET BUFFER LENGTH            #  00017720
         LR    AF,R1                                                 #  00017730
         AIF   (&SYSTEM).SYS415                                      #  00017740
         L     R0,FILLIM(AE)       LOAD LINES LIMIT                  #  00017750
         BCT   R0,FILPUT6          DECREMENT                         #  00017760
         ST    R0,FILLIM(AE)       OVERFLOW OF COUNTER               #  00017770
         B     LIMITERR                                              #  00017780
FILPUT6  ST    R0,FILLIM(AE)       PUT DECREMENTED COUNT BACK        #  00017790
.SYS415  ANOP                                                        #  00017800
*        B     FILCLR              I.E., NEXT LINE                   #  00017810
*                                                                    #  00017820
*        CLEAR THE OUTPUT BUFFER TO BLANKS                           #  00017830
*                                                                    #  00017840
FILCLR   LH    R1,FILBEG(AE)                                         #  00017850
         STH   R1,FILPTR(AE)       RESET CHAR. POINTER               #  00017860
         CLI   DCBRECFM,X'80'      JUMP IF F OR U-FORMAT             #  00017870
         BNL   FILCLR1                                               #  00017880
         TM    DCBRECFM,X'06'                                        #  00017890
         BZR   R5                  RETURN IF NO CONTROL CHAR NEEDED  #  00017900
         MVI   4(AF),FILBLA        SET DEFAULT CONTROL CHAR          #  00017910
         TM    DCBRECFM,X'04'                                        #  00017920
         BOR   R5                  RETURN IF ASCII CONTROL CHARS     #  00017930
         MVI   4(AF),X'09'         REPLACE WITH MACHINE CHAR         #  00017940
         BR    R5                                                    #  00017950
FILCLR1  LH    R15,FILEND(AE)      LOAD BUFFER LENGTH                #  00017960
         AIF   (&IBM370).M705                                        @  00017970
         LA    R14,256                                               #  00017980
         LR    R1,AF               LOAD BUFFER ADDRESS               #  00017990
         MVI   0(AF),FILBLA                                          #  00018000
         SH    R15,=H'2'                                             #  00018010
         B     FILCLR3                                               #  00018020
FILCLR2  MVC   1(256,R1),0(R1)     PROPAGATE BLANKS                  #  00018030
         AR    R1,R14                                                #  00018040
         SR    R15,R14                                               #  00018050
FILCLR3  BMR   R5                                                    #  00018060
         CR    R15,R14                                               #  00018070
         BNL   FILCLR2                                               #  00018080
         EX    R15,CLRBUF          CLEAR REMAINDER OF BUFFER         #  00018090
         AGO   .M605                                                 @  00018100
.M705    LR    R14,AF                                                @  00018110
         LA    R1,FILBLA                                             @  00018120
         SLL   R1,24               SET FILL CHARACTER                @  00018130
         MVCL  R14,R0              CLEAR THE I/O BUFFER              @  00018140
.M605    ANOP  ,                                                     @  00018150
         TM    DCBRECFM,X'02'                                        #  00018160
         BZR   R5                  RETURN IF NOT MACH CONTROL CHAR   #  00018170
         MVI   0(AF),X'09'                                           #  00018180
         BR    R5                                                    #  00018190
*                                                                    #  00018200
CLRBUF   MVC   1(0,R1),0(R1)       PROPAGATE BLANKS                  #  00018210
*                                                                       00018220
*        'END OF DATA' EXIT, THIS ROUTINE IS ENTERED WHENEVER           00018230
*        A 'GET' IS ISSUED FOR A FILE WHICH HAS REACHED THE             00018240
*        'END OF FILE' MARK. (I.E. NO MORE INPUT)                       00018250
*                                                                       00018260
EOD      LA    AG,FILDCB(AE)                                         #  00018270
         CLOSE ((AG))                                                   00018280
         TM    DCBBUFCB+3,1                                          #  00018290
         BO    EOD1                SKIP IF NO BUFFER POOL            #  00018300
         FREEPOOL (AG)                                               #  00018310
EOD1     OI    FILEOF(AE),1                                             00018320
         MVI   PFILEOF(AD),TRUE    SET EOF FLAG IN PASCAL            @  00018330
         NI    FILOPN(AE),TEXTFLAG CLEAR THE OPENFLAGS               @  00018340
         BZ    EOD2                JUMP IF NOT A TEXTFILE            @  00018350
         MVI   PFILEOL(AD),TRUE    SET EOL FLAG                      @  00018360
         MVI   PFILCOMP(AD),FILBLA                                   @  00018370
         SR    AF,AF               INDICATE NO I/O BUFFER            @  00018380
         STH   AF,FILBEG(AE)       RESET VARIOUS POINTERS            #  00018390
         STH   AF,FILEND(AE)                                         #  00018400
         STH   AF,FILPTR(AE)                                         #  00018410
         ST    AF,FILBUF(AE)                                         #  00018420
         BR    R5                                                    #  00018430
EOD2     SR    R0,R0                                                 @  00018440
         ST    R0,PFILRSZ(AD)      INDICATE ZERO LENGTH RECORD       @  00018450
         B     RTN                 GO BACK TO CALLER                 @  00018460
*                                                                       00018470
*        RESET AN INPUT FILE                                            00018480
*                                                                       00018490
*                                                                       00018500
         DC    CL4'RES '                                                00018510
RES      FILADR ,                                                       00018520
         BAL   R5,FILCLS           GO AND CLOSE THE FILE             #  00018530
*                                                                       00018540
*        (GET) OPEN A FILE                                              00018550
*                                                                       00018560
FILGOP   NI    FILOPN(AE),TEXTFLAG CLEAR OPEN FLAGS                  @  00018570
         LA    AG,FILDCB(AE)                                         #  00018580
         OPEN  ((AG),(INPUT))                                           00018590
         TM    DCBOFLGS,X'10'                                           00018600
         BNO   BADREAD                                                  00018610
         L     AF,FILBUF(AE)                                         *  00018620
         MVI   PFILEOF(AD),FALSE                                     @  00018630
         MVI   FILEOF(AE),0        CLEAR BOTH EOF FLAGS              @  00018640
         OI    FILOPN(AE),READOPN                                    @  00018650
         TM    FILOPN(AE),TEXTFLAG                                   @  00018660
         BZ    GET1                IF NON TEXT FILE, GET 1ST RECORD  @  00018670
         MVI   PFILEOL(AD),TRUE                                      @  00018680
         SR    R0,R0                                                 @  00018690
         STH   R0,FILBEG(AE)                                         @  00018700
         LH    R1,DCBLRECL                                              00018710
         TM    DCBRECFM,X'C0'                                        #  00018720
         BNO   *+8                 JUMP IF NOT U-FORMAT              #  00018730
         LH    R1,DCBBLKSI                                           #  00018740
         STH   R1,FILEND(AE)       SET LRECL FOR THE LOCAL BUF          00018750
         CLI   DCBRECFM,X'80'                                        #  00018760
         BNL   FILGOP1             JUMP IF NOT V-FORMAT              #  00018770
         MVI   FILBEG+1(AE),4      ALLOW 4-BYTE RDW/SDW              #  00018780
FILGOP1  TM    DCBRECFM,X'06'                                        #  00018790
         BZ    FILGOP2             JUMP IF NO CONTROL CHARS          #  00018800
         CLI   CCFLAG,0            OR IF CONTROL CHARS ARE NOT       #  00018810
         BE    FILGOP2             TO BE INSERTED                    #  00018820
         OI    FILBEG+1(AE),1      ADD IN 1-BYTE CONTROL CHAR        #  00018830
FILGOP2  BAL   R5,FILGET                                                00018840
         B     RTN                 RETURN TO PASCAL PROGRAM             00018850
*                                                                       00018860
*        GET AN INPUT RECORD                                            00018870
*                                                                       00018880
         DC    CL4'GET'                                                 00018890
GET      FILADR ,                                                       00018900
         TM    FILEOF(AE),1                                             00018910
         BO    RTN                                                      00018920
         TM    FILOPN(AE),TEXTFLAG                                   @  00018930
         BZ    GET1                JUMP IF NON-TEXT FILE             @  00018940
         BAL   R5,FILGFE                                                00018950
         B     RTN                                                      00018960
GET1    GET    FILDCB(AE),(AF)     READ THE NEXT RECORD              @  00018970
        CLI    DCBRECFM,X'80'                                        @  00018980
        BL     GET2                JUMP IF V-FORMAT                  @  00018990
        LH     R1,DCBLRECL                                           @  00019000
        B      GET3                                                  @  00019010
GET2    LH     R1,0(AF)            LOAD RDW                          @  00019020
        SH     R1,=H'4'            SUBTRACT RDW LENGTH               @  00019030
GET3    ST     R1,PFILRSZ(AD)      PUT SIZE BACK FOR PASCAL PROG ?   @  00019040
        CH     R1,FILCSZ(AE)       CHECK THAT INPUT RECORD ISNT      @  00019050
        BH     BADRECRD            TOO LARGE FOR BUFFER              @  00019060
        B      RTN                                                   @  00019070
*                                                                       00019080
*                                                                       00019090
*                                                                       00019100
*        EOT (SKIP BLANKS TO END OF TEXT)                            &  00019110
*                                                                       00019120
EOT      FILADR ,                                                    &  00019130
         BAL   R5,FILGNB                                             &  00019140
         B     RTN                                                   &  00019150
         B     RTN                                                   &  00019160
*                                                                       00019170
*        READ-LINE (FOR TEXTFILE ONLY)                                  00019180
*                                                                       00019190
         DC    CL4'RLN'                                                 00019200
RLN      FILADR ,                                                       00019210
         BAL   R5,FILGET                                                00019220
         B     RTN                                                      00019230
*                                                                       00019240
*                                                                       00019250
*                                                                       00019260
*        EOL (SKIP BLANKS TO END OF LINE)                            &  00019270
*                                                                       00019280
EOL      FILADR ,                                                    &  00019290
         TM    FILEOF(AE),1                                          &  00019300
         BO    RTN                 RETURN IF END OF FILE             &  00019310
         LH    R1,FILPTR(AE)                                         &  00019320
EOL1     CH    R1,FILEND(AE)                                         &  00019330
         BNL   EOL3                JUMP IF AT END OF LINE            &  00019340
         LA    R15,0(R1,AF)                                          &  00019350
         CLI   0(R15),FILBLA                                         &  00019360
         BNE   EOL2                EXIT LOOP IF A NON-BLANK          &  00019370
         LA    R1,1(,R1)           ADVANCE TO NEXT CHAR.             &  00019380
         B     EOL1                                                  &  00019390
EOL2     IC    R0,0(R15)           LOAD NON-BLANK CHAR.              &  00019400
         STC   R0,PFILCOMP(AD)     PASS TO PASCAL PROG.              &  00019410
         MVI   PFILEOL(AD),FALSE   REDUNDANT?                        &  00019420
         STH   R1,FILPTR(AE)                                         &  00019430
         B     RTN                                                   &  00019440
EOL3     MVI   PFILEOL(AD),TRUE                                      &  00019450
         MVI   PFILCOMP(AD),FILBLA                                   &  00019460
         STH   R1,FILPTR(AE)                                         &  00019470
         B     RTN                                                   &  00019480
*                                                                       00019490
*                                                                       00019500
*        RDB, (READ BOOLEAN)   ADR(FILE),ADR(BOOLEAN)                #  00019510
*                                                                       00019520
         DC    CL4'RDB'                                                 00019530
RDB      FILADR ,                                                    #  00019540
         BAL   R5,FILGNB           ADVANCE TO A NON-BLANK            @  00019550
         B     EOFREAD             ERROR RETURN FOR EOF              &  00019560
         LA    RSLT,TRUE                                             #  00019570
         OI    PFILCOMP(AD),X'40'  CONVERT TO UPPER CASE (IN CASE !)    00019580
         CLI   PFILCOMP(AD),C'T'   T = TRUE ?                        #  00019590
         BE    RDB6                                                  #  00019600
         CLI   PFILCOMP(AD),C'F'   F = FALSE ?                       #  00019610
         BNE   BADBOOL             NEITHER = AN ERROR                #  00019620
RDB4     SR    RSLT,RSLT                                             #  00019630
RDB6     STC   RSLT,0(R2)          STORE THE RESULT                  #  00019640
         BAL   R5,FILGFE           STEP TO FOLLOWING CHAR            #  00019650
         B     RTN                                                   #  00019660
*                                                                       00019670
*                                                                       00019680
*        RDC  (READ CHAR),  R2 = ADDR. OF CHAR                          00019690
*                                                                       00019700
         DC    CL4'RDC'                                                 00019710
RDC      FILADR ,                                                       00019720
         IC    R0,PFILCOMP(AD)                                          00019730
         STC   R0,0(R2)                                                 00019740
         BAL   R5,FILGFE                                                00019750
         B     RTN                                                      00019760
*                                                                       00019770
*        RDI/RDH/RDY (READ INTEGER)    AD: ADR(FILE),  R2: ADR(INT)     00019780
*                                                                       00019790
         DC    CL4'RDI'                                                 00019800
RDY      OI    RDY1+1,X'F0'        OVERWRITE NO-OP                   &  00019810
RDH      OI    RDH1+1,X'F0'        OVERWRITE NO-OP                   &  00019820
RDI      FILADR ,                                                       00019830
         LR    R4,R2               CLEAR A REGISTER PAIR  (R2,R3)       00019840
         SR    R3,R3                                                    00019850
         MVI   SIGN,1              ASSUME POSITIVE                      00019860
         BAL   R5,FILGNB           ADVANCE TO A NON-BLANK            @  00019870
         B     EOFREAD             ERROR RETURN FOR EOF              &  00019880
         CLI   PFILCOMP(AD),FILPLU                                      00019890
         BE    RDI23                                                 #  00019900
         CLI   PFILCOMP(AD),FILMIN                                      00019910
         BNE   RDI25                                                    00019920
         MVI   SIGN,0              CHANGE TO NEGATIVE                   00019930
RDI23    BAL   R5,FILGFE                                             #  00019940
RDI25    LA    R15,BADINT          PREPARE ERROR RT ADDRESS          #  00019950
RDI4     SR    R0,R0                                                 #  00019960
         IC    R0,PFILCOMP(AD)     GET DIGIT                         #  00019970
         SH    R0,=AL2(FILZER)                                       #  00019980
         BMR   R15                 QUIT LOOP IF NON-DIGIT            #  00019990
         CH    R0,=AL2(9)                                            #  00020000
         BHR   R15                                                   #  00020010
         M     R2,=F'10'                                             #  00020020
         AR    R3,R0                                                    00020030
         BAL   R5,FILGFE                                                00020040
         BAL   R15,RDI4            LOOP BACK & SET EXIT ADDRESS      #  00020050
         TM    SIGN,1                                                   00020060
         BO    *+6                                                      00020070
         LCR   R3,R3                                                    00020080
RDH1     BC    0,RDH2              JUMP FOR RDH/RDY ROUTINES         &  00020090
         ST    R3,0(R4)                                                 00020100
         B     RTN                                                      00020110
RDH2     NI    RDH1+1,X'0F'        RESET JUMP BACK TO NO-OP          &  00020120
RDY1     BC    0,RDY2              JUMP FOR RDY ROUTINE              &  00020130
         CH    R3,=H'32767'                                          &  00020140
         BH    BIGINT                                                &  00020150
         CH    R3,=H'-32768'                                         &  00020160
         BL    BIGINT                                                &  00020170
         STH   R3,0(R4)                                              &  00020180
         B     RTN                                                   &  00020190
RDY2     NI    RDY1+1,X'0F'        RESET JUMP BACK TO NO-OP          &  00020200
         CL    R3,=F'255'                                            &  00020210
         BH    BIGINT                                                &  00020220
         STC   R3,0(R4)                                              &  00020230
         B     RTN                                                   &  00020240
*                                                                       00020250
*                                                                       00020260
*  RDS, (READ STRING), R2= STRING ADDRESS, R3=STRING LENGTH !           00020270
*                                                                       00020280
         DC    CL4'RDS'                                                 00020290
RDS      FILADR ,                                                       00020300
         AIF   (&IBM370).M710                                        @  00020310
         LH    R1,FILPTR(AE)                                            00020320
         IC    R0,PFILCOMP(AD)     START WITH CURRENT CHARACTER      #  00020330
RDSNXTCH STC   R0,0(R2)            COPY CHARS ONE-BY-ONE             #  00020340
         LA    R2,CHR(R2)                                            #  00020350
         LA    R1,1(,R1)                                             #  00020360
         CH    R1,FILEND(AE)       END OF THIS LINE?                 #  00020370
         BL    RDSF1               IF NOT, JUMP                      #  00020380
         LA    R0,FILBLA           END OF LINE CHARACTER             #  00020390
         BCT   R3,RDSNXTCH         REPEAT                            @  00020400
         STC   R0,PFILCOMP(AD)     SET EOL CHAR                      @  00020410
         MVC   FILPTR(2,AE),FILEND(AE)  INDICATE AN EOL CONDITION    @  00020420
         MVI   PFILEOL(AD),TRUE                                      @  00020430
         B     RTN                                                   @  00020440
RDSF1    IC    R0,0(R1,AF)         LOAD NEXT INPUT CHAR              #  00020450
RDSF2    BCT   R3,RDSNXTCH         REPEAT                            #  00020460
         STC   R0,PFILCOMP(AD)                                          00020470
         STH   R1,FILPTR(AE)                                            00020480
         AGO   .M610                                                    00020490
.M710    LH    R15,FILEND(AE)                                        @  00020500
         LH    R14,FILPTR(AE)                                        @  00020510
         SR    R15,R14             COMPUTE # COLUMNS LEFT            @  00020520
         BNM   *+6                                                   @  00020530
         SR    R15,R15                                               @  00020540
         AR    R14,AF              ADDR OF FIRST CHAR                @  00020550
         ICM   R15,8,=AL1(FILBLA)  SET FILL CHAR                     @  00020560
         MVCL  R2,R14              NOW COPY STRING                   @  00020570
         BL    RDSF1               JUMP IF INPUT LINE NOT FINISHED   @  00020580
         MVC   FILPTR(AE),FILEND(AE)  LINE IS FINISHED               @  00020590
         MVI   PFILCOMP(AD),FILBLA                                   @  00020600
         MVI   PFILEOL(AD),TRUE                                      @  00020610
         B     RTN                                                   @  00020620
RDSF1    IC    R0,0(R14)           GET NEXT CHAR IN LINE             @  00020630
         STC   R0,PFILCOMP(AD)                                       @  00020640
         SR    R14,AF                                                @  00020650
         STH   R14,FILPTR(AE)                                        @  00020660
.M610    ANOP                                                           00020670
         B     RTN                                                      00020680
*                                                                       00020690
*                                                                       00020700
*  REW, (REWRITE = REWIND FOR OUTPUT)                                   00020710
*                                                                       00020720
         DC    CL4'REW'                                                 00020730
REW      FILADR ,                                                       00020740
         BAL   R5,FILCLS           GO AND CLOSE THE FILE             #  00020750
*                                                                       00020760
*        (PUT) OPEN A FILE                                              00020770
*                                                                       00020780
FILPOP   NI    FILOPN(AE),TEXTFLAG PUT-OPEN THE FILE                 @  00020790
         LA    AG,FILDCB(AE)                                         #  00020800
         OPEN  ((AG),(OUTPUT))                                          00020810
         TM    DCBOFLGS,X'10'                                           00020820
         BNO   BADWRITE            REPORT ANY PROBLEM                   00020830
         OI    FILOPN(AE),WRITEOPN SET FLAGS, BUF PTRS ETC.             00020840
         OI    FILEOF(AE),1                                             00020850
         MVI   PFILEOF(AD),TRUE    OUTPUT FILES HAVE EOF TRUE        @  00020860
         SR    R0,R0                                                 @  00020870
         ST    R0,FILLIM(AE)       CLEAR OUTPUT LIMIT                @  00020880
         TM    FILOPN(AE),TEXTFLAG                                   @  00020890
         BZ    RTN                 RETURN IF NOT A TEXT FILE         @  00020900
         MVI   PFILEOL(AD),TRUE    SET EOL - IN CASE !               @  00020910
         STH   R0,FILPTR(AE)       CLEAR LINE POSN PTR               #  00020920
         ST    R0,FILBUF(AE)       NULLIFY BUFFER POINTER            #  00020930
         LH    R1,DCBLRECL         GET LRECL FROM THE DCB            #  00020940
         TM    DCBRECFM,X'C0'                                        #  00020950
         BNO   *+12                JUMP IF NOT U-FORMAT              #  00020960
         LH    R1,DCBBLKSI                                           #  00020970
         STH   R1,DCBLRECL                                           #  00020980
         STH   R0,FILBEG(AE)       RESET CHAR. START POSITION        *  00020990
         BCTR  R0,0                                                  *  00021000
         STH   R0,FILEND(AE)       INITIALIZE BUFFER TO "OVER-FULL"  *  00021010
         CLI   DCBRECFM,X'80'                                        #  00021020
         BNL   FILPOP1             JUMP IF NOT V-FORMAT              #  00021030
         MVI   FILBEG+1(AE),4      ALLOW 4-BYTE RDW/SDW              #  00021040
FILPOP1  TM    DCBRECFM,X'06'      TEST IF CONTROL CHARS             #  00021050
         BZ    RTN                                                   #  00021060
         CLI   CCFLAG,0            RETURN IF CONTROL CHARS ARE NOT   #  00021070
         BE    RTN                 TO BE INSERTED                    #  00021080
         OI    FILBEG+1(AE),1      ADD 1-BYTE CONTROL CHAR.          #  00021090
         B     RTN                                                      00021100
*                                                                       00021110
*        PUT (PASCAL 'PUT' OPERATION)                                   00021120
*                                                                       00021130
         DC    CL4'PUT '                                                00021140
PUT      FILADR ,                                                       00021150
         TM    FILEOF(AE),1                                             00021160
         BZ    RTN                                                      00021170
         TM    FILOPN(AE),TEXTFLAG                                   @  00021180
         BZ    PUT1                JUMP IF NOT A TEXT-FILE           @  00021190
         BAL   R5,FILPST                                                00021200
         B     RTN                                                      00021210
PUT1     LH    R1,FILRSZ(AE)       GET CORRECT RECORD SIZE           @  00021220
         SLL   R1,16               CONSTRUCT A RDW                   @  00021230
         ST    R1,PFILRSZ(AD)      - IN CASE FILE HAS V-FORMAT       @  00021240
         PUT   FILDCB(AE),(AF)     WRITE THE RECORD                  @  00021250
         AIF   (&SYSTEM).SYS425                                      @  00021260
         L     R0,FILLIM(AE)                                         @  00021270
         BCT   R0,PUT2             UPDATE OUTPUT LIMIT               @  00021280
         ST    R0,FILLIM(AE)       - LIMIT EXCEEDED                  @  00021290
         B     LIMITERR                                              @  00021300
PUT2     ST    R0,FILLIM(AE)       PUT UPDATED COUNT BACK            @  00021310
.SYS425  ANOP                                                        @  00021320
         B     RTN                                                   @  00021330
*                                                                       00021340
*        WLN (WRITE LINE), TERMINATE CURRENT OUTPUT LINE                00021350
*                                                                       00021360
         DC    CL4'WLN '                                                00021370
WLN      FILADR ,                                                       00021380
         LH    R1,FILPTR(AE)                                         #  00021390
         CH    R1,FILEND(AE)       IF BUFFER IS MARKED "OVER-FULL",  #  00021400
         BNH   *+12                   WE WRITE IT OUT                #  00021410
         BAL   R5,FILPUT                                             #  00021420
         LH    R1,FILPTR(AE)                                         #  00021430
         BCTR  R1,0                                                  #  00021440
         STH   R1,FILEND(AE)       FLAG BUFFER AS "OVER-FULL"        #  00021450
         B     RTN                                                   #  00021460
*                                                                       00021470
*                                                                       00021480
*        WRB (WRITE BOOLEAN):  ADR(FILE),BOOLEAN,FIELD_WIDTH         #  00021490
*                                                                       00021500
         DC    CL4'WRB'                                                 00021510
WRB      LTR   R2,R2                                                 #  00021520
         LA    R2,=C'TRUE'                                           #  00021530
         LA    R4,4                                                  #  00021540
         BNZ   WRS                 JUMP IF "TRUE"                    #  00021550
WRB1     LA    R2,=C'FALSE'                                          #  00021560
         LA    R4,5                                                  #  00021570
         B     WRS                                                   #  00021580
*                                                                       00021590
*                                                                       00021600
*        WRC   R1: ADR(FILE),  R3: FIELD_WIDTH,  R2: CHAR               00021610
*                                                                       00021620
         DC    CL4'WRC '                                                00021630
WRC      FILADR ,                                                       00021640
         BCTR  R3,0                                                     00021650
         LTR   R3,R3                                                    00021660
         BZ    WRC3                                                     00021670
         BM    RTN                                                      00021680
WRC2     MVI   PFILCOMP(AD),FILBLA                                      00021690
         BAL   R5,FILPST                                                00021700
         BCT   R3,WRC2                                                  00021710
WRC3     STC   R2,PFILCOMP(AD)                                          00021720
         BAL   R5,FILPST                                                00021730
         B     RTN                                                      00021740
*                                                                       00021750
*     WRS   ADR(FILE):R1, STRLGTH:R4, FIELD_WIDTH:R3, R2:ADR(STRING)    00021760
*                                                                       00021770
         DC    CL4'WRS '                                                00021780
WRS      FILADR ,                                                       00021790
         LTR   R3,R3                                                    00021800
         BNP   RTN                 ZERO FIELD WIDTH, RETURN             00021810
         LH    R1,FILPTR(AE)                                            00021820
         LA    R0,FILBLA           FILL CHARACTER                       00021830
WRSB1    CR    R3,R4               COMPARE FLD_LGTH TO STR_LGTH         00021840
         BNH   WRSF2               NO NEED FOR FILL CHARS               00021850
         CH    R1,FILEND(AE)                                         #  00021860
         BL    WRSF1                                                 #  00021870
         STH   R1,FILPTR(AE)       UPDATE LENGTH FIRST                  00021880
         BAL   R5,FILPUT           THEN EMPTY THE FULL BUFFER        #  00021890
         LH    R1,FILPTR(AE)                                         #  00021900
         LA    R0,FILBLA                                             #  00021910
WRSF1    STC   R0,0(R1,AF)         PLANT NEXT BLANK IN BUFFER        #  00021920
         LA    R1,1(R1)            AND ADVANCE TO NEXT POSITION      #  00021930
         BCT   R3,WRSB1                                              #  00021940
*    NOW WE HAVE R3 <= R4                                               00021950
WRSF2    DS    0H                                                       00021960
WRSB2    CH    R1,FILEND(AE)                                         #  00021970
         BL    WRSF3                                                 #  00021980
         STH   R1,FILPTR(AE)       UPDATE LENGTH FIELD                  00021990
         BAL   R5,FILPUT           THEN EMPTY THE FULL BUFFER        #  00022000
         LH    R1,FILPTR(AE)                                         #  00022010
WRSF3    IC    R0,0(R2)            PICK UP NEXT CHAR IN STRING       #  00022020
         STC   R0,0(R1,AF)         AND PLANT IT IN BUFFER            #  00022030
         LA    R2,CHR(R2)          ADVANCE IN THE STRING             #  00022040
         LA    R1,1(R1)            ADVANCE IN THE BUFFER             #  00022050
         BCT   R3,WRSB2                                              #  00022060
         STH   R1,FILPTR(AE)                                            00022070
         STC   R0,PFILCOMP(AD)                                       *  00022080
         B     RTN                                                      00022090
*                                                                       00022100
*                                                                       00022110
*        WRI ADR(FILE),WIDTH,INT                                        00022120
*                                                                       00022130
         DC    CL4'WRI '                                                00022140
WRI      DS    0H                                                    #  00022150
         CVD   R2,PINT                                               #  00022160
         MVC   ZINT,=X'402020202020202020202120'                        00022170
         LA    R1,ZINT+11                                               00022180
         EDMK  ZINT,PINT+2                                              00022190
         LTR   R2,R2                                                    00022200
         BNM   *+10                                                     00022210
         BCTR  R1,0                                                     00022220
         MVI   0(R1),C'-'                                               00022230
         LR    R2,R1                                                 #  00022240
         LA    R4,ZINT+L'ZINT                                        #  00022250
         SR    R4,R1                                                 #  00022260
         CR    R4,R3                                                 #  00022270
         BNH   WRS                 PRINT INTEGER AS A STRING         #  00022280
         LR    R3,R4               - BUT INCREASE FIELD WIDTH IF     #  00022290
         B     WRS                 NECESSARY TO PRINT ENTIRE NUMBER  #  00022300
*                                                                       00022310
*                                                                       00022320
*        RDR, READ THE NEXT (REAL) NUMBER INTO (GRG2)                   00022330
*                                                                       00022340
         DC    CL4'RDR'                                                 00022350
RDR      FILADR ,                                                       00022360
         SDR   0,0                                                      00022370
         LA    R3,1                                                     00022380
         BAL   R5,FILGNB           ADVANCE TO A NON-BLANK            @  00022390
         CLI   PFILCOMP(AD),FILPLU                                      00022400
         BE    RDR3                                                     00022410
         CLI   PFILCOMP(AD),FILMIN                                      00022420
         BNE   RDR4                                                     00022430
         LCR   R3,R3                                                    00022440
RDR3     BAL   R5,FILGFE                                                00022450
RDR4     LA    R15,BADREAL         SET ERROR EXIT ADDRESS            #  00022460
RDR45    SR    R1,R1                                                 #  00022470
         IC    R1,PFILCOMP(AD)            GET CHARACTER              #  00022480
         SH    R1,=AL2(FILZER)                                       #  00022490
         BMR   R15                 QUIT LOOP IF NON-DIGIT            #  00022500
         CH    R1,=AL2(9)                                            #  00022510
         BHR   R15                                                   #  00022520
         MD    0,=D'10.0'                                            #  00022530
         SLA   R1,3                                                     00022540
         AD    0,DECTBL(R1)                                             00022550
         BAL   R5,FILGFE                                                00022560
         BAL   R15,RDR45           LOOP BACK & SET EXIT ADDRESS      #  00022570
RDR5     SR    R4,R4                                                    00022580
         CLI   PFILCOMP(AD),FILDOT                                      00022590
         BNE   RDR7                                                     00022600
         BAL   R5,FILGFE                                                00022610
RDR6     CLI   PFILCOMP(AD),FILZER                                      00022620
         BL    RDR7                                                     00022630
         CLI   PFILCOMP(AD),FILNIN                                      00022640
         BH    RDR7                                                     00022650
         MD    0,=D'10.0'                                               00022660
         SR    R1,R1                                                    00022670
         IC    R1,PFILCOMP(AD)                                          00022680
         SH    R1,=AL2(FILZER)                                       #  00022690
         SLA   R1,3                                                     00022700
         AD    0,DECTBL(R1)                                             00022710
         BAL   R5,FILGFE                                                00022720
         BCTR  R4,0                                                     00022730
         B     RDR6                                                     00022740
RDR7     LTR   R3,R3                                                    00022750
         BNM   *+6                                                      00022760
         LCDR  0,0                                                      00022770
         CLI   PFILCOMP(AD),C'E'                                        00022780
         BE    RDR75                                                    00022790
         CLI   PFILCOMP(AD),C'e'                                        00022800
         BNE   RDR13                                                    00022810
RDR75    LA    R3,1                                                     00022820
RDR8     BAL   R5,FILGFE                                                00022830
         CLI   PFILCOMP(AD),FILBLA                                      00022840
         BE    RDR8                                                     00022850
         ST    R4,EXPONENT                                              00022860
         SR    R4,R4                                                    00022870
RDR9     CLI   PFILCOMP(AD),FILPLU                                      00022880
         BE    RDR10                                                    00022890
         CLI   PFILCOMP(AD),FILMIN                                      00022900
         BNE   RDR11                                                    00022910
         LCR   R3,R3                                                    00022920
RDR10    BAL   R5,FILGFE                                                00022930
RDR11    LA    R15,BADREAL         SET ERROR EXIT ADDRESS            #  00022940
RDR115   SR    R1,R1                                                 #  00022950
         IC    R1,PFILCOMP(AD)     GET CHARACTER                     #  00022960
         SH    R1,=AL2(FILZER)                                       #  00022970
         BMR   R15                 QUIT LOOP IF NON-DIGIT            #  00022980
         CH    R1,=AL2(9)                                            #  00022990
         BHR   R15                                                   #  00023000
         MH    R4,=H'10'                                                00023010
         AR    R4,R1                                                    00023020
         BAL   R5,FILGFE                                                00023030
         BAL   R15,RDR115          LOOP BACK & SET EXIT ADDRESS      #  00023040
RDR12    LTR   R3,R3                                                    00023050
         BNM   *+6                                                      00023060
         LCR   R4,R4                                                    00023070
         A     R4,EXPONENT                                              00023080
RDR13    LTR   R4,R4                                                    00023090
         BZ    RDR16                                                    00023100
         BP    RDR14                                                    00023110
         LPR   R4,R4                                                    00023120
         B     RDR15                                                    00023130
RDR14    MD    0,=D'10.0'                                               00023140
         BCT   R4,RDR14                                                 00023150
         B     RDR16                                                    00023160
RDR15    DD    0,=D'10.0'                                               00023170
         BCT   R4,RDR15                                                 00023180
RDR16    STD   0,0(R2)             PUT THE RESULT IN PASCAL VARIABLE    00023190
         B     RTN                                                      00023200
*                                                                       00023210
*        WRR, REAL NUMBER IN FPRG2, FIELDWITH IN GRG3                   00023220
*                                                                       00023230
         DC    CL4'WRR'                                                 00023240
WRR      FILADR ,                                                       00023250
         SR    R2,R2         R2 <-- POWER OF 10                         00023260
         STC   R2,SIGN                                               &  00023270
         STC   R2,EFORM                                              &  00023280
         SDR   FPR0,FPR0                                             &  00023290
         ADR   FPR2,FPR0           FORCE NORMALIZATION               &  00023300
         BNZ   WRR20                                                    00023310
*                                                                       00023320
*        PRINT 'ZERO' IN THE PROPER FORMAT                              00023330
*                                                                       00023340
         LTR   R4,R4         'F' FORMAT ?                               00023350
         BP    WRR40                                                 &  00023360
*        E-FORMAT ZERO                                                  00023370
         MVI   PFILCOMP(AD),FILBLA                                      00023380
         BAL   R5,FILPST                                                00023390
         BAL   R5,FILPST                                                00023400
         SH    R3,=H'4'                                                 00023410
         LR    R4,R3                                                    00023420
         MVI   PFILCOMP(AD),FILZER                                      00023430
         BAL   R5,FILPST                                                00023440
         MVI   PFILCOMP(AD),FILDOT                                      00023450
         BAL   R5,FILPST                                                00023460
         MVI   PFILCOMP(AD),FILZER                                      00023470
         BAL   R5,FILPST                                                00023480
*        PRINT TRAILING BLANKS                                          00023490
         LTR   R4,R4                                                 &  00023500
         BNP   RTN                                                      00023510
         MVI   PFILCOMP(AD),FILBLA                                      00023520
         BALR  R5,0                SET RETURN ADDRESS FOR FILPST     &  00023530
         BCT   R4,FILPST           CALL REPEATEDLY                   &  00023540
         B     RTN                                                      00023550
*                                                                       00023560
*        PRINT A NON_ZERO REAL NUMBER                                   00023570
*                                                                       00023580
WRR20    BNM   WRR22                                                    00023590
         MVI   SIGN,X'01'    NEGATIVE VALUE, REMEMBER THE SIGN          00023600
         BCTR  R3,0          AND ADJUST FIELD WIDTH                     00023610
         LPDR  FPR2,FPR2                                                00023620
WRR22    LD    FPR0,=D'1.0E-12'                                         00023630
         MDR   FPR0,FPR2                                                00023640
         ADR   FPR2,FPR0                                                00023650
         LDR   FPR0,FPR2     SAVE THE ORIGINAL VALUE                    00023660
*                                                                       00023670
WRR24    CD    FPR2,=D'1.0'                                             00023680
         BNL   WRR26                                                    00023690
         MD    FPR2,=D'10.0'                                            00023700
         BCT   R2,WRR24                                                 00023710
WRR26    CD    FPR2,=D'10.0'                                            00023720
         BL    WRR30                                                    00023730
         DD    FPR2,=D'10.0'                                            00023740
         LA    R2,1(R2)                                                 00023750
         B     WRR26                                                    00023760
*                                                                       00023770
*        NOW WE HAVE  "1.0 <= FPR2 < 10"                                00023780
*        AND "FPR0 = FPR2 * (10 ** R2)"                                 00023790
*                                                                       00023800
WRR30    LTR   R4,R4         SEE IF F_FORMAT REQUESTED                  00023810
         BP    WRR40                                                    00023820
*        PRINT THE VALUE IN E_FORM                                      00023830
         MVI   EFORM,X'01'   SET E_FORMAT FLAG                          00023840
         ST    R2,EXPONENT   SAVE EXPONENT VALUE                        00023850
         MVI   PFILCOMP(AD),FILBLA                                      00023860
         BAL   R5,FILPST                                                00023870
         LR    R4,R3         R4 <-- FIELD WIDTH (AT LEAST 9)            00023880
         SH    R4,=H'7'                                                 00023890
         TM    SIGN,X'01'                                               00023900
         BNZ   WRR32                                                    00023910
         MVI   PFILCOMP(AD),FILBLA  PRINT UP TO TWO LEADING BLANKS      00023920
         BAL   R5,FILPST                                                00023930
         BCTR  R4,0                                                     00023940
WRR32    LTR   R4,R4                                                    00023950
         BP    *+8                                                      00023960
         LA    R4,1                                                     00023970
         SR    R2,R2         ONLY ONE DIGIT BEFORE DECIMAL POINT        00023980
         B     WRR50                                                    00023990
*                                                                       00024000
*        F_FORMAT OUTPUT                                                00024010
*                                                                       00024020
WRR40    LTR   R2,R2                                                    00024030
         BNM   WRR44         SEE IF NEGATIVE EXPONENT                   00024040
         LDR   FPR2,FPR0     IF SO, USE THE ORIGINAL VALUE              00024050
         SR    R2,R2         ONLY ONE DIGIT BEFORE DECIMAL POINT        00024060
*                                                                       00024070
WRR44    SR    R3,R4         COMPUTE THE # OF LEADING BLANKS            00024080
         BCTR  R3,0                                                  &  00024090
         SR    R3,R2                                                    00024100
         BNP   WRR50                                                    00024110
WRR46    MVI   PFILCOMP(AD),FILBLA                                      00024120
         BALR  R5,0                SET RETURN ADDRESS FOR FILPST     &  00024130
         BCT   R3,FILPST           CALL REPEATEDLY                   &  00024140
*                                                                       00024150
*        R2 # OF DIGITS BEFORE DECIMAL POINT                            00024160
*        R4 # OF DIGITS FOLLOWING DECIMAL POINT                         00024170
*                                                                       00024180
WRR50    TM    SIGN,X'01'                                               00024190
         BZ    WRR52                                                    00024200
         MVI   PFILCOMP(AD),FILMIN                                      00024210
         BAL   R5,FILPST                                                00024220
*                                                                       00024230
WRR52    LA    R2,2(R2)                                                 00024240
         BALR  R3,0                SET RETURN ADDRESS FOR WRRDGTS    &  00024250
         BCT   R2,WRRDGTS          CALL REPEATEDLY                   &  00024260
         MVI   PFILCOMP(AD),FILDOT                                      00024270
         BAL   R5,FILPST                                                00024280
         BAL   R3,WRRDGTS          SET RETURN ADDRESS FOR WRRDGTS    &  00024290
         BCT   R4,WRRDGTS          CALL REPEATEDLY                   &  00024300
         TM    EFORM,X'01'                                              00024310
         BZ    RTN                                                      00024320
*                                                                       00024330
*        PRINT THE EXPONENT FOR E_FORMAT OUTPUT                         00024340
*                                                                       00024350
         L     R4,EXPONENT                                              00024360
         MVI   PFILCOMP(AD),FILEXP                                      00024370
         BAL   R5,FILPST                                                00024380
         MVI   PFILCOMP(AD),FILPLU                                      00024390
         LTR   R4,R4                                                    00024400
         BNM   *+8                                                      00024410
         MVI   PFILCOMP(AD),FILMIN                                      00024420
         BAL   R5,FILPST                                                00024430
         LPR   R3,R4                                                    00024440
         SR    R2,R2                                                    00024450
         D     R2,=F'10'                                                00024460
         LA    R3,FILZER(R3)                                            00024470
         STC   R3,PFILCOMP(AD)                                          00024480
         BAL   R5,FILPST                                                00024490
         LA    R2,FILZER(R2)                                            00024500
         STC   R2,PFILCOMP(AD)                                          00024510
         BAL   R5,FILPST                                                00024520
         B     RTN                                                      00024530
*                                                                       00024540
*        THIS ROUTINE PRINTS THE NEXT DIGIT OF THE VALUE                00024550
*        IN FPR2, IT USES R3 FOR ITS RETURN ADDRESS                     00024560
*        IT IS ASSUMED THAT "0 <= FPR2 < 10" AND FPR2                   00024570
*        IS UPDATED FOR THE NEXT DIGIT                                  00024580
*                                                                       00024590
WRRDGTS  SR    R1,R1                                                 #  00024600
         LA    R1,1(R1)                                              #  00024610
         SD    FPR2,=D'1.0'                                          #  00024620
         BNM   WRRDGTS+2                                             #  00024630
         AD    FPR2,=D'1.0'                                          #  00024640
         LA    R1,FILZER-1(R1)                                       #  00024650
         STC   R1,PFILCOMP(AD)                                       #  00024660
         BAL   R5,FILPST           WRITE NEXT DIGIT                  #  00024670
         MD    FPR2,=D'10.0'                                         #  00024680
         BR    R3                 RETURN TO CALLER                      00024690
*                                                                       00024700
*                                                                       00024710
*        PAG   SKIP TO NEW PAGE                                         00024720
*                                                                       00024730
         DC    CL4'PAG'                                                 00024740
PAG      SR    R2,R2                                                 #  00024750
         BCT   R2,SKP1             SET R2 = -1, THEN USE SKP ROUTINE #  00024760
*                                                                    #  00024770
*                                                                    #  00024780
*        SKP - SKIP R2 INPUT OR OUTPUT LINES                         #  00024790
*                                                                    #  00024800
         DC    CL4'SKP'                                              #  00024810
SKP      LTR   R2,R2                                                 #  00024820
         BM    RTN                                                   #  00024830
SKP1     FILADR ,                                                    #  00024840
         TM    FILOPN(AE),TEXTFLAG                                   @  00024850
         BZ    SKP9                JUMP IF NOT A TEXT FILE           @  00024860
         TM    FILOPN(AE),READOPN                                    #  00024870
         BO    SKP7                JUMP IF AN INPUT FILE             #  00024880
         LA    R0,MAXSKIP                                            #  00024890
         CR    R2,R0                                                 #  00024900
         BL    *+6                 LIMIT NUMBER OF LINES TO "MAXSKIP"#  00024910
         LR    R2,R0                                                 #  00024920
         TM    DCBRECFM,X'06'      JUMP IF FILE DOES NOT HAVE        #  00024930
         BZ    SKP6                CARRIAGE CONTROL CHARS            #  00024940
         LA    R3,3                MAX NO. OF SKIPS PER RECORD       #  00024950
         TM    DCBRECFM,X'04'                                        #  00024960
         BNZ   SKP2                JUMP IF ANS CONTROL CHARS         #  00024970
         LTR   AF,AF               FORCE AN INITIAL PUT OPERATION IF #  00024980
         BNZ   SKP3                  NO I/O BUFFER YET ALLOCATED     #  00024990
SKP2     BAL   R5,FILPUT           CLEAR LINE BUFFER                 #  00025000
SKP3     CR    R2,R3                                                 #  00025010
         LR    R4,R2                                                 #  00025020
         BNH   *+6                                                   #  00025030
         LR    R4,R3               NOW, R4 = MIN( R2, 3 )            #  00025040
         SR    R1,R1                                                 #  00025050
         CLI   DCBRECFM,X'80'                                        #  00025060
         BNL   *+8                                                   #  00025070
         LA    R1,4                                                  #  00025080
*                                                                    #  00025090
         TM    DCBRECFM,X'04'                                        #  00025100
         BZ    SKP5                JUMP IF MACHINE CHARS             #  00025110
         IC    R0,SKPASCII(R4)                                       #  00025120
         STC   R0,0(R1,AF)         SET ASCII CONTROL CHAR            #  00025130
         SR    R2,R4                                                 #  00025140
         BP    SKP2                REPEAT IF MORE LINES TO SKIP      #  00025150
         LA    R1,1(R1)                                              #  00025160
         STH   R1,FILPTR(AE)       POINT AT FIRST DATA BYTE          #  00025170
         B     RTN                                                   #  00025180
SKP5     IC    R0,SKPMACH(R4)                                        #  00025190
         STC   R0,0(R1,AF)         SET MACHINE CONTROL CHAR          #  00025200
         BAL   R5,FILPUT           AND SEND TO OUTPUT DEVICE         #  00025210
         SR    R2,R4                                                 #  00025220
         BP    SKP3                REPEAT IF MORE LINES TO SKIP      #  00025230
         B     RTN                                                   #  00025240
SKP6     BAL   R5,FILPUT           NO CONTROL CHARS                  #  00025250
         BCTR  R2,0                BUT GIVE AN APPROPRIATE NUMBER    #  00025260
         LTR   R2,R2               OF EMPTY OUTPUT RECORDS           #  00025270
         BP    SKP6                                                  #  00025280
         B     RTN                                                   #  00025290
SKP7     LTR   R2,R2               REJECT PAGE() ON AN INPUT FILE    #  00025300
         BM    BADWRITE                                              #  00025310
         BNZ   SKP8                JUMP IF > 0 SKIPS                 #  00025320
         LH    R1,FILBEG(AE)                                         #  00025330
         STH   R1,FILPTR(AE)       RESET CHAR PTR. TO REREAD LINE    #  00025340
         IC    R0,0(R1,AF)                                           #  00025350
         STC   R0,PFILCOMP(AD)     RESET CURRENT FILE ELEMENT        #  00025360
         B     RTN                                                   #  00025370
SKP8     BAL   R5,FILGET                                             #  00025380
         BCT   R2,SKP8             STEP THROUGH THE LINES            #  00025390
         B     RTN                                                   #  00025400
*                                                                    @  00025410
SKP9     LTR   R2,R2                                                 @  00025420
         BNP   RTN                 RETURN IF SKIP COUNT NON-POSITIVE @  00025430
         TM    FILOPN(AE),READOPN                                    @  00025440
         BNZ   SKP11               JUMP IF AN INPUT FILE             @  00025450
         LH    R1,FILRSZ(AE)                                         @  00025460
         SLL   R1,16               CONSTRUCT A RDW                   @  00025470
         ST    R1,PFILRSZ(AD)      - IN CASE OF A V-FORMAT FILE      @  00025480
SKP10    PUT   FILDCB(AE),(AF)     WRITE A RECORD                    @  00025490
         BCT   R2,SKP10            REPEAT                            @  00025500
         B     RTN                                                   @  00025510
SKP11    GET   FILDCB(AE),(AF)                                       @  00025520
         LH    R1,DCBLRECL         GET RECORD LENGTH                 @  00025530
         CLI   DCBRECFM,X'80'                                        @  00025540
         BNL   SKP12               JUMP IF F OR U-FORMAT             @  00025550
         LH    R1,0(AF)            GET RECORD LENGTH FROM RDW        @  00025560
         SH    R1,=H'4'                                              @  00025570
SKP12    CH    R1,FILCSZ(AE)       CHECK FOR OVERFLOW                @  00025580
         BH    BADRECRD                                              @  00025590
         BCT   R2,SKP11                                              @  00025600
         ST    R1,PFILRSZ(AD)      SET CURRENT LENGTH                @  00025610
         B     RTN                                                   @  00025620
*                                                                       00025630
*                                                                       00025640
*        CLOCK FUNCTION                                                 00025650
*                                                                       00025660
         DC    CL4'CLK'                                                 00025670
CLK      LR    R3,R0              SAVE PARAMETER                        00025680
         TTIMER ,                                                       00025690
         S     R0,CLOCK            SUBTRACT START-UP TIME               00025700
         LPR   R0,R0               MAKE POSITIVE                        00025710
         LTR   R3,R3               TEST CLOCK PARAMETER                 00025720
         BP    RTN                 >0 MEANS RAW TIMER UNITS             00025730
         LPR   R1,R0                                                    00025740
         M     R0,=FS32'0.02604166'                                     00025750
         B     RTN                RETURNS THE RESULT IN R0              00025760
*                                                                       00025770
*                                                                       00025780
*        MESSAGE PROCEDURE   R2=STRING ADDR,  R3=LENGTH              #  00025790
*                                                                    #  00025800
         DC    CL4'MSG'                                              #  00025810
MSG      LTR   R3,R3                                                 #  00025820
         BNP   RTN                                                   #  00025830
         LA    R0,L'MSGBUF-8       SET MAX. MESSAGE LENGTH           @  00025840
         CR    R3,R0                                                 #  00025850
         BNH   *+6                                                   #  00025860
         LR    R3,R0                                                 #  00025870
         EX    R3,MSGMVC                                             #  00025880
         LA    R3,4(R3)            CONSTRUCT VARIABLE-LENGTH RECORD  #  00025890
         STH   R3,MSGBUF                                             #  00025900
         LA    R3,MSGBUF(R3)                                         @  00025910
         MVC   0(4,R3),=X'00000020' SET THE ROUTING CODE             #  00025920
         MVC   MSGBUF+2(2),=X'8000'                                  @  00025930
         LA    R1,MSGBUF                                             @  00025940
         SVC   35                  ISSUE WTO REQUEST                 #  00025950
         B     RTN                                                   #  00025960
MSGMVC   MVC   MSGBUF+4(*-*),0(R2)                                   @  00025970
*                                                                       00025980
*        CTR, TO ALLOCATE AND CLEAR 'R2' RUN TIME 'COUNTERS'            00025990
*                                                                       00026000
         DC    CL4'CTR'                                                 00026010
CTR      L     R3,HEAPLIM                                               00026020
         USING DYN2STOR,R3                                              00026030
         ST    R2,DYNRUNC          SET THE # OF COUNTERS                00026040
         DROP  R3                                                       00026050
         SLA   R2,2                CONVERT COUNT TO BYTES               00026060
         LR    R4,R3               POINT TO HEAP END                    00026070
         SR    R4,R2               LOWER IT TO ITS NEW POSITION         00026080
         ST    R4,HEAPLIM          AND SAVE THE NEW HEAP LIMIT PTR      00026090
*                                                                       00026100
         SR    R5,R5               ASSUME NO OS PARMATER AREA           00026110
         L     R6,OSPRMPTR                                              00026120
         LTR   R6,R6               SEE IF THAT IS THE CASE              00026130
         BM    CTR10                                                    00026140
         LR    R5,R3               IF NOT, FIND THE LENGTH OF           00026150
         SR    R5,R6               THE OS PARM AREA                     00026160
         SR    R3,R5               AND ADJUST 'TO' AND 'FROM' PTRS      00026170
         SR    R4,R5                                                    00026180
         ST    R4,OSPRMPTR                                              00026190
CTR10    LA    R5,DYNCOUNT-DYN2STOR(R5)   ADD THE SIZE OF FIXED AREA    00026200
*        AN EXTRA BYTE IS MOVED BUT IT IS OK.                           00026210
         EX    R5,CTRMVE           AND COPY FROM THE OLD AREA.          00026220
         ST    R4,NEWPTR           UPDATE HEAP PTR                      00026230
         AR    R4,R5               POINT BACK TO THE HEAP END           00026240
         SRA   R2,2                CONVERT BACK BYTES TO WORDS          00026250
         SR    R0,R0                                                    00026260
         ST    R0,0(R4)            AND CLEAR THE COUNTER AREA           00026270
         LA    R4,4(R4)            ADJUST THE POINTER                   00026280
         BCT   R2,*-8              REPEAT AS NEEDED                     00026290
         B     RTN                                                      00026300
*                                                                       00026310
CTRMVE   MVC   0(0,R4),0(R3)                                            00026320
*                                                                       00026330
*                                                                    #  00026340
*        LINELIMIT PROCEDURE   AD=FILE,  R2=LIMIT                    #  00026350
*                                                                    #  00026360
         DC    CL4'LIM'                                              #  00026370
LIM      FILADR ,                                                    #  00026380
         ST    R2,FILLIM(AE)       SET THE NEW LIMIT                 #  00026390
         B     RTN                                                   #  00026400
*                                                                       00026410
*                                                                       00026420
*        DEFINE A FILE,  R2: NAME,  R3: FILE COMP. SIZE              @  00026430
*                                                                       00026440
         DC    CL4'FDF'                                                 00026450
FDF      DS    0H                                                       00026460
         GETMAIN EC,LV=L'#FILREC,A=(AD)                              @  00026470
         LTR   R15,R15             TEST IF STORAGE AVAILABLE         #  00026480
         BNZ   BADFDF                                                #  00026490
         L     AE,0(,AD)                                             @  00026500
         LA    R1,#FILREC          TEMPLATE FOR TEXT FILES           @  00026510
         LTR   R3,R3               R3=0 => A TEXT FILE               @  00026520
         BZ    *+8                 JUMP IF A TEXT FILE               @  00026530
         LA    R1,#NONTXT          TEMPLATE FOR NON-TEXT FILES       @  00026540
         MVC   0(L'#FILREC,AE),0(R1)  COPY TO GETMAINED AREA         @  00026550
         STH   R3,FILCSZ(AE)       SAVE FILE COMP. SIZE              @  00026560
         ST    AD,FILPAS(AE)       SET BACK LINK                     @  00026570
         L     R1,FILLIST                                            @  00026580
         ST    R1,FILLNK(AE)       LINK NEW FILE BLOCK               @  00026590
         ST    AE,FILLIST          INTO THE CHAIN                    @  00026600
         OI    FILLIST,X'80'       FLAG AS NOT BUILT-IN              @  00026610
         MVC   FILNAM(8,AE),0(R2)                                    @  00026620
         MVC   DCBDDNAM,0(R2)      MOVE THE FILE NAME TO ITS DCB FIELD  00026630
         B     RTN                                                      00026640
*                                                                       00026650
*        REQUEST FOR CONTROL TRACE OUTPUT                            &  00026660
*                                                                       00026670
TRA      EQU   *                                                     &  00026680
         AIF   (&SYSTEM).SYS920                                      &  00026690
         LTR   R2,R2                                                 &  00026700
         BP    *+6                                                   &  00026710
         SR    R2,R2               KILL OUTPUT REQUEST               &  00026720
         LA    R2,1(,R2)                                             &  00026730
         L     R15,=A(TRLINES)                                       &  00026740
         ST    R2,0(,R15)                                            &  00026750
.SYS920  ANOP                                                           00026760
         B     RTN                                                   &  00026770
*                                                                       00026780
*        GENERAL ROUTINE TO CLOSE A FILE                             #  00026790
*                                                                    #  00026800
FILCLS   TM    FILOPN(AE),READOPN+WRITEOPN                           @  00026810
         BZR   R5                  RETURN IF FILE NOT OPEN           #  00026820
         TM    FILOPN(AE),TEXTFLAG+WRITEOPN                          @  00026830
         BNO   FILCLS4             JUMP IF NONTEXT OR INPUT FILE     @  00026840
*                                                                    #  00026850
*        PREPARE THE OUTPUT BUFFER FOR TRANSMITTING TO O.S.          #  00026860
*FILCLS1                                                             #  00026870
         LH    R1,FILPTR(AE)       IF BUFFER IS IN "OVER-FULL" STATE @  00026880
         CH    R1,FILEND(AE)       WE MUST WRITE A RECORD NOW - IN   @  00026890
         BNH   FILCLS15            ORDER TO GET THE EXTRA BLANK LINE @  00026900
         ST    R5,FILCLSSV         WHEN THE FILE IS CLOSED.          @  00026910
         BAL   R5,FILPUT                                             @  00026920
         L     R5,FILCLSSV                                           @  00026930
FILCLS15 LH    R1,FILPTR(AE)                                         @  00026940
         CLI   DCBRECFM,X'80'                                        #  00026950
         BNL   FILCLS4             RETURN IF F OR U-FORMAT           #  00026960
         LA    R0,6                MIN LENGTH FOR VBA RECORDS        #  00026970
         TM    DCBRECFM,X'06'                                        #  00026980
         BNZ   *+6                 JUMP IF CONTROL CHARS             #  00026990
         BCTR  R0,0                ADJUST MIN LENGTH                 #  00027000
         CR    R1,R0                                                 #  00027010
         BNL   FILCLS2             JUMP IF RECORD SIZE OK            #  00027020
         LTR   AF,AF               RETURN IF THE I/O BUFFER IS NOT   #  00027030
         BZ    FILCLS4             ALLOCATED  (FILE NEWLY OPENED)    #  00027040
         LA    R0,FILBLA                                             #  00027050
         STC   R0,0(R1,AF)         PROVIDE 1 CHAR AT LEAST           #  00027060
         LA    R1,1(R1)                                              #  00027070
         AIF   (&IBM370).M715                                        @  00027080
FILCLS2  STC   R1,1(AF)            SET RDW FOR V-FORMAT, ONE BYTE       00027090
         SRA   R1,8                AT A TIME TO MAKE 360S HAPPY         00027100
         STC   R1,0(AF)                                                 00027110
         AGO   .M615                                                    00027120
.M715    ANOP  ,                                                     @  00027130
FILCLS2  STCM  R1,3,0(AF)          SET RDW FOR V-FORMAT              @  00027140
.M615    ANOP  ,                                                     @  00027150
*                                                                    #  00027160
FILCLS4  LA    AG,FILDCB(AE)                                         #  00027170
         CLOSE ((AG))                                                #  00027180
         TM    DCBBUFCB+3,1        TEST IF BUFFER POOL THERE         #  00027190
         BOR   R5                  RETURN IF NOT                     #  00027200
         FREEPOOL (AG)             RELEASE THE POOL                  #  00027210
         BR    R5                                                    #  00027220
*                                                                       00027230
*                                                                       00027240
*        EXIT : TO EXIT USER PROGRAM WITH A RETURN CODE                 00027250
*                                                                       00027260
         DC    CL4'XIT'                                                 00027270
XIT      C     R2,=A(1000)         IF ERROR GO TO CLOSE/EXIT ROUTINE    00027280
         BNL   CLS                                                      00027290
         L     R4,HEAPLIM                                               00027300
         USING DYN2STOR,R4                                              00027310
         L     R5,DYNRUNC                                               00027320
         LTR   R5,R5               SEE IF RUN TIME COUNTERS ARE PRESENT 00027330
         BNP   CLS                 IF NOT, QUIT.                        00027340
         LR    R6,R2               SAVE RETURN CODE                     00027350
         LA    AD,QRR              PICK THE COUNTER FILE NAME           00027360
         LA    R1,PREW                                                  00027370
         LA    R15,$PASCSP                                              00027380
         BALR  R14,R15             CALL THE $PASCSP ROUTINES            00027390
*                                                                       00027400
*        THIS CAN BE DONE ONLY IF WE KNOW THAT WE DO NOT NEED           00027410
*        TO GO BACK TO THE PROGRAM WHICH CALLED THE EXIT                00027420
*        ROUTINE.                                                       00027430
*                                                                       00027440
         LA    R1,PWRI             SET THE FUNCTION CODE                00027450
         LA    R3,10               SET THE FIELD_WIDTH                  00027460
NXTCNT   L     R2,DYNCOUNT         PICK THE NEXT COUNT VALUE            00027470
         BALR  R14,R15             OUTPUT IT                            00027480
         LA    R4,4(R4)                                                 00027490
         BCT   R5,NXTCNT           REPEAT UNTIL DONE                    00027500
         DROP  R4                                                       00027510
*                                                                       00027520
         LA    R1,PWLN                                                  00027530
         BALR  R14,R15             OUTPUT THE LAST LINE                 00027540
         MVI   PROFFLAG,X'FF'      SET FLAG TO INDICATE PASPROF CALL @  00027550
         LR    R2,R6               RESTORE RETURN CODE                  00027560
         B     CLS                 GO TO COMPLETE EXIT EPILOGUE.        00027570
*                                                                       00027580
*       CLOSE ALL THE FILES                                             00027590
*                                                                       00027600
         DC    CL4'CLS '                                                00027610
CLS      L     AE,FILLIST                                            @  00027620
CLSB1    L     AF,FILBUF(AE)                                         #  00027630
         BAL   R5,FILCLS           GO AND DO A FILE CLOSE            #  00027640
         L     R3,FILLNK(AE)       GET POINTER TO NEXT BLOCK         @  00027650
         LTR   AE,AE               TEST IF BUILT-IN FILE             @  00027660
         BNM   CLSF1               IF SO, JUMP                       #  00027670
         FREEMAIN R,LV=L'#FILREC,A=(AE)  RELEASE FILE BLOCK STORAGE  #  00027680
CLSF1    LTR   AE,R3               FOLLOW CHAIN OF FILE BLOCKS       @  00027690
         BNZ   CLSB1               REPEAT                            @  00027700
*                                                                       00027710
*        TIME TO EXIT                                                   00027720
*                                                                       00027730
         L     R1,=A(OLDPICA)                                           00027740
         TM    3(R1),1             TEST IF SPIE WAS ISSUED           #  00027750
         BO    SKIPSPIE            JUMP IF NOT                       #  00027760
         L     1,0(R1)             RESET OLD PICA ADDRESS            #  00027770
         SPIE  MF=(E,(1))          TO CANCEL ANY PASCAL SPIE         #  00027780
SKIPSPIE EQU   *                                                     #  00027790
*                                                                       00027800
*        CHECK FOR ABEND                                                00027810
*                                                                       00027820
         C         R2,=A(1000)     IF RETURN CODE < 1000                00027830
         BL        XIT2              THEN DON'T ABEND                   00027840
         L         R1,=A(DUMPFLAG)                                    & 00027850
         CLI       0(R1),X'FF'     TEST IF O.S. DUMP REQUESTED       &  00027860
         BNE       XIT2                                                 00027870
         LA    R1,X'FFF'                                             @  00027880
         NR    R1,R2                                                 @  00027890
         O     R1,=A(X'80000000')                                       00027900
         SVC   13                                                       00027910
XIT2     C     R2,=A(TIMERR)       SEE IF THIS IS A TIME OUT EXIT       00027920
         BE    XIT3                                                     00027930
         C     R2,=A(TIMERR+SNPERR)                                     00027940
         BNE   XIT4                                                     00027950
*                                                                       00027960
*        THIS ABEND IS BECAUSE THERE IS NO CLEAN AND EASY WAY           00027970
*        TO TERMINATE THE PROGRAM IN CASE OF A TIMER INTERRUPT !        00027980
*                                                                       00027990
XIT3     ABEND (R2)                                                     00028000
*                                                                       00028010
XIT4     LR    R13,R12             POINT TO STACK BASE               #  00028020
         S     R13,=A(STACK-DYNSTORE)                                #  00028030
         L     R15,=V(IBCOM#)      IS FORTRAN PRESENT ?                 00028040
         LTR   R15,R15                                                  00028050
         BZ    XIT6                                                     00028060
*                                                                       00028070
*        NOTE: THE IBCOME 'EXIT' ROUTINE USES THE SAVE AREA PASSED      00028080
*        TO THE IBCOM INIT ROUTINE. THE FOLLOWING PATCH SHOULD          00028090
*        ENSURE RETURNING TO 'XIT6' AFTER CLOSING FORTRAN I/O AND       00028100
*        CANCELING IBCOM 'SPIE' AND 'STAE'.                             00028110
*                                                                       00028120
         LA    R14,XIT6            IF SO, SET THE RETURN ADDRESS        00028130
         STM   R14,R12,12(R13)     SET 'RESTORE' AREA FOR THE CALL      00028140
         BAL   R14,IBCOMXIT(R15)   TO IBCOM# XIT ROUTINE.               00028150
         DC    AL2(0)              RETURN CODE FOR ABOVE CALL           00028160
XIT6     L     R13,4(R13)          POINT TO THE SYSTEM SAVE AREA     #  00028170
         FREEMAIN V,A=ALOSTORE     RELEASE STACK STORAGE             #  00028180
         TM    PROFFLAG,X'FF'                                        @  00028190
         BNZ   CALLPROF            JUMP IF PASPROF TO BE INVOKED     @  00028200
         LR    R15,R2              SET THE RETURN CODE               #  00028210
         L     R14,12(R13)         PICK THE RETURN ADDRESS              00028220
         LM    R0,R12,20(R13)      RESTORE OTHER REGS                   00028230
         BR    14                                                       00028240
CALLPROF L     R1,=A(OSPARMS)      GIVE PASPROF SAME PARAMETERS      @  00028250
         L     R1,0(,R1)           AS WE WERE GIVEN                  @  00028260
         L     R14,12(,R13)        SET JUST R14 (XCTL SETS REST)     @  00028270
         XCTL  (2,12),EP=PASPROF   INVOKE THE PROFILER MODULE        @  00028280
*                                                                       00028290
*                                                                       00028300
*        UNDEFINED CSP ENTRIES                                          00028310
*                                                                       00028320
TRP      DS    0H                                                       00028330
SIO      DS    0H                                                       00028340
EIO      DS    0H                                                       00028350
EOF      DS    0H                                                       00028360
ELN      DS    0H                                                       00028370
RDD      DS    0H                                                       00028380
WRD      DS    0H                                                       00028390
WRE      DS    0H                                                       00028400
         B     UNDFERR             REPORT AN ERROR                   @  00028410
*                                                                       00028420
*                                                                       00028430
*                                                                       00028440
*         RETURN TO PASCAL PROGRAM                                      00028450
*                                                                       00028460
RTN      LM    R1,R15,SPUSERSA      'RSLT' REG SHOULD NOT BE RESTORED ! 00028470
         AIF   (&SYSTEM).SYS92                                          00028480
         DROP  ,                                                        00028490
         USING $PASCSP,R15                                              00028500
         MVI   SPUSERSA,X'FF'      CLEAR 'SP' FLAG                      00028510
.SYS92   ANOP                                                           00028520
         BR    14                                                       00028530
*                                                                       00028540
*        I/O ERROR CONDITIONS, ETC.                                     00028550
*                                                                       00028560
         DROP  ,                                                        00028570
         USING $PASCSP,R10                                           @  00028580
         USING $PASCSP+4092,R11                                      @  00028590
         USING STACK,GBR                                                00028600
BADFDF   LA    R14,FDFMSG                                            @  00028610
         LA    AE,FILUNK           PROVIDE A FILE                    *  00028620
         MVC   FILNAM(8,AE),0(R2)      WITH RIGHT NAME               *  00028630
         B     ERRMSGRT                                              #  00028640
UNDFERR  LA    R14,UNDFMSG                                           @  00028650
         B     ERRMSGRT                                              #  00028660
LIMITERR LA    R14,LIMMSG                                            @  00028670
         B     ERRMSGRT                                              #  00028680
BADREAD  LA    R14,READMSG                                           @  00028690
         B     ERRMSGRT                                              #  00028700
EOFREAD  LA    R14,EOFMSG                                            @  00028710
         B     ERRMSGRT                                              #  00028720
BADBOOL  LA    R14,BOOLMSG                                           @  00028730
         B     ERRMSGRT                                              #  00028740
BIGINT   LA    R14,BIGMSG                                               00028750
         B     ERRMSGRT                                                 00028760
BADINT   LA    R14,INTMSG                                            @  00028770
         B     ERRMSGRT                                              #  00028780
BADREAL  LA    R14,REALMSG                                           @  00028790
         B     ERRMSGRT                                              #  00028800
BADRECRD LA    R14,RECRDMSG                                          @  00028810
         B     ERRMSGRT                                              @  00028820
BADFILE  LA    R14,FILERMSG                                          @  00028830
         L     AE,FILLIST          SEARCH FOR CORRECT FILE BLOCK     @  00028840
BF1      C     AD,FILPAS(AE)                                         @  00028850
         BE    ERRMSGRT            EXIT IF FOUND                     @  00028860
         L     AE,FILLNK(AE)       OTHERWISE TRY NEXT FILE           @  00028870
         LTR   AE,AE                                                 @  00028880
         BNZ   BF1                 REPEAT LOOP                       @  00028890
         LA    AE,FILUNK           NOT FOUND - SO PROVIDE            @  00028900
         B     ERRMSGRT            A DUMMY FILE BLOCK INSTEAD        @  00028910
BADWRITE LA    R14,WRITEMSG                                          @  00028920
*        B     ERRMSGRT                                              #  00028930
ERRMSGRT LH    R3,0(,R14)          GET MESSAGE LENGTH                @  00028940
         LA    R2,4(,R14)          ADDR OF TEXT FOR MESSAGE          @  00028950
         LPR   R4,R3                                                 @  00028960
         EX    R4,MSGMVC           MOVE MESSAGE INTO BIG BUFFER      @  00028970
         LTR   R3,R3               R3 < 0 => PROBLEM WITH A FILE     @  00028980
         BNM   ERR0                JUMP IF OTHER THAN A FILE ERROR   @  00028990
         LA    R5,MSGBUF+4(R4)                                       @  00029000
         MVC   0(26,R5),=C' (PASCAL FILE =         ) '                  00029010
         MVC   16(8,R5),FILNAM(AE)   MOVE FILE NAME INTO MSG         @  00029020
         LA    R4,26(,R4)          NEW MESSAGE LENGTH                @  00029030
         LA    R0,OUTPUT                                             @  00029040
         CR    AD,R0               TEST IF FILE IS "OUTPUT"          @  00029050
         BNE   ERR0                IF NOT, CARRY ON AND PRINT MESSAGE@  00029060
         MVC   MSGBUF+2(2),=X'8000'                                  @  00029070
         LA    R4,4(,R4)           CONSTRUCT VARIABLE LENGTH RECORD  @  00029080
         STH   R4,MSGBUF                                             @  00029090
         LA    R3,MSGBUF(R4)                                         @  00029100
         MVC   0(4,R3),=X'00000020'  SET ROUTING CODE                @  00029110
         LA    R1,MSGBUF                                             @  00029120
         SVC   35                  ISSUE WTO REQUEST                 @  00029130
         L     R14,QUITADR         GET ERROR EXIT ADDRESS            @  00029140
         BR    R14                 AND GO TO IT                      @  00029150
ERR0     LA    R3,MSGBUF+4         NEW MESSAGE ADDRESS                  00029160
ERR2     LH    R8,2(,R14)          ERROR CODE                        @  00029170
         L     R15,=A($CHKMSG)     WHERE TO GO NEXT                  @  00029180
         LM    R1,R2,SPUSERSA      RESTORE MOST OF THE               @  00029190
         LM    R5,R7,SPUSERSA+16   USER'S REGISTERS                  @  00029200
         LM    R9,R14,SPUSERSA+32                                    @  00029210
         BR    R15                                                   @  00029220
*                                                                    #  00029230
*                                                                       00029240
*        EXIT ROUTINE CALLED WHEN DCB IS OPENED                      #  00029250
*              IN THIS ROUTINE, WE PROVIDE SOME REASONABLE DEFAULTS  #  00029260
*              FOR THE RECFM, LRECL, BLKSIZE AND BUFNO ATTRIBUTES    #  00029270
*              THIS ROUTINE ALSO SETS THE REREAD FLAG WHEN NEEDED    #  00029280
*              AT THE CHANGE-OVER BETWEEN TWO CONCATENATED           #  00029290
*              INPUT FILES.                                          #  00029300
*                                                                    #  00029310
         DROP  ,                                                     &  00029320
         USING XLSTRTOT,R15                                          &  00029330
         USING IHADCB,R1                                             &  00029340
         USING STACK,GBR                                             &  00029350
XLSTRTOT LA    R5,DEFAULTS         ENTRY FOR OUTPUT DCB'S            &  00029360
         LA    R0,OUTPUT                                             #  00029370
         CR    AD,R0               TEST IF FILE IS "OUTPUT"          @  00029380
         BNE   *+8                 IT USES DIFFERENT DEFAULTS        &  00029390
         LA    R5,OUTDFLTS                                           #  00029400
         BAL   R15,XLSTRT2         RESET BASE REGISTER & TRANSFER    &  00029410
         USING XLSTRTIN,R15                                          &  00029420
XLSTRTIN LA    R5,DEFAULTS         ENTRY FOR INPUT AND INOUT FILES   #  00029430
         TM    DCBOFLGS,X'08'      TEST IF CONCAT. FLAG SET          #  00029440
         BZ    XLSTRT1                                               #  00029450
         MVI   RRFLAG,X'FF'        REQUEST A REREAD                  #  00029460
         B     XLSTRT2                                               #  00029470
XLSTRT1  OI    DCBOFLGS,X'08'      REQUEST PROCESSING OF CONCAT FILES#  00029480
XLSTRT2  SR    R4,R4                                                 #  00029490
         CLI   DCBBUFNO,0                                            #  00029500
         BNE   XLSTRT3             JUMP IF BUFNO PROVIDED            #  00029510
         MVC   DCBBUFNO(1),4(R5)                                     #  00029520
XLSTRT3  TM    DCBRECFM,X'FE'                                        #  00029530
         BNE   XLSTRT4             JUMP IF RECFM SPECIFIED           #  00029540
         OC    DCBRECFM(1),5(R5)                                     #  00029550
XLSTRT4  LH    R3,0(R5)            LOAD TARGET BYTES PER RECORD      #  00029560
         TM    FILOPN(AE),TEXTFLAG                                   IF 00029570
         BNZ   XLSTRT47            JUMP IF A TEXT FILE               @  00029580
         LH    R3,FILCSZ(AE)       GET FILE COMPONENT SIZE           @  00029590
         LA    AF,PFILCOMP(AD)                                       @  00029600
         CLI   DCBRECFM,X'80'                                        @  00029610
         BNL   XLSTRT45            JUMP IF RECFM=F OR U              @  00029620
         LA    R3,4(,R3)           ADD IN 4 BYTES FOR RDW            @  00029630
         S     AF,=F'4'            AND CORRECT BUFFER ADDRESS        @  00029640
XLSTRT45 ST    AF,FILBUF(AE)                                         @  00029650
         STH   R3,FILRSZ(AE)       SAVE CORRECT RECORD SIZE          @  00029660
         CH    R4,DCBLRECL                                           #  00029670
         BNE   XLSTRT5             JUMP IF LRECL SPECIFIED           #  00029680
         B     XLSTRT49            GO AND SET THE LRECL              @  00029690
XLSTRT47 CH    R4,DCBLRECL                                           @  00029700
         BNE   XLSTRT5             JUMP IF LRECL SPECIFIED           @  00029710
         TM    DCBRECFM,X'C0'                                        #  00029720
         BO    XLSTRT5             JUMP IF U-FORMAT (LEAVE LRECL=0)  #  00029730
         CLI   DCBRECFM,X'80'                                        #  00029740
         BNL   *+8                 JUMP IF F-FORMAT                  #  00029750
         LA    R3,4(R3)            ALLOW FOR RDW/SDW IN RECORD LENGTH#  00029760
         TM    DCBRECFM,X'06'                                        #  00029770
         BZ    *+8                 JUMP IF NO CONTROL CHAR.          #  00029780
         LA    R3,1(R3)            ADD IN 1 BYTE FOR CONTROL CHAR    #  00029790
XLSTRT49 STH   R3,DCBLRECL                                           #  00029800
XLSTRT5  CH    R4,DCBBLKSI                                           #  00029810
         BNER  R14            RETURN IF BLKSIZE SPECIFIED            #  00029820
         LH    R5,2(R5)       LOAD TARGET BLKSIZE                    #  00029830
         CLI   DCBRECFM,X'80'                                        #  00029840
         BNL   XLSTRT6        JUMP IF NOT V-FORMAT                   #  00029850
         LA    R3,4(R3)       LRECL+4 IS MINIMUM BLKSIZE             #  00029860
         B     XLSTRT7                                               #  00029870
XLSTRT6  TM    DCBRECFM,X'C0'                                        #  00029880
         BO    XLSTRT8        JUMP IF RECFM=U                        #  00029890
         DR    R4,R3          THEREFORE, RECFM=F HERE                #  00029900
         MR    R4,R3                                                 #  00029910
XLSTRT7  CR    R5,R3                                                 #  00029920
         BL    XLSTRT8                                               #  00029930
         LR    R3,R5                                                 #  00029940
XLSTRT8  STH   R3,DCBBLKSI                                           #  00029950
         BR    R14                                                   #  00029960
*                                                                       00029970
         USING SYNADRT,R15                                           &  00029980
         DROP  R1                                                    &  00029990
SYNADRT  LA    R3,OUTPUT      GENERATES MESSAGES FOR FILE ERRORS     &  00030000
         CR    AD,R3          CHECK IF PROBLEM WITH OUTPUT FILE      @  00030010
         BNE   *+8                 JUMP IF NOT OUTPUT FILE           @  00030020
         ST    R14,QUITADR         SAVE ERROR EXIT ADDRESS           @  00030030
         SYNADAF ACSMETH=QSAM GENERATE THE ERROR DESCRIPTION         #  00030040
         MVC   SYNMSG+5(78),50(R1)   AND MOVE IT INTO LOCAL BUFFER   #  00030050
         SYNADRLS ,           NOW RELEASE THE SYSTEM'S BUFFER        #  00030060
         LA    R14,SYNMSG                                            @  00030070
         L     R10,=A($PASCSP)     RESET SOME BASE REGS.             &  00030080
         LA    R11,4092(,R10)      (JUST IN CASE)                    &  00030090
         USING $PASCSP,R10                                           &  00030100
         USING $PASCSP+4092,R11                                      &  00030110
         DROP  R15                                                   &  00030120
         B     ERRMSGRT                                              #  00030130
*                                                                       00030140
         DROP  ,                                                        00030150
*                                                                       00030160
*          VARIOUS TABLE AND DCB DEFINITIONS                            00030170
*                                                                       00030180
DECTBL   DC    D'0,1,2,3,4,5,6,7,8,9'                                   00030190
PINT     DS    D                   PACKED INTEGER BUFFER                00030200
         DC    20AL1(FILBLA)                                            00030210
ZINT     DS    CL12                ZONED INTEGER BUFFER                 00030220
*                                                                    #  00030230
*              DCB EXIT LIST PARAMETERS                              #  00030240
*                                                                    #  00030250
         DS    0F                                                       00030260
XLINPUT  DC    X'85',AL3(XLSTRTIN)                                   #  00030270
XLINOUT  EQU   XLINPUT                                               #  00030280
XLOUTPUT DC    X'85',AL3(XLSTRTOT)                                   #  00030290
*                                                                    #  00030300
*        DEFAULT AND TARGET VALUES FOR FILES OTHER THAN "OUTPUT"     #  00030310
*                                                                    #  00030320
DEFAULTS DC    H'80'               TARGET DATA BYTES PER RECORD      #  00030330
         DC    H'1600'             TARGET BYTES PER BLOCK            #  00030340
         DC    AL1(3)              DEFAULT BUFNO VALUE               #  00030350
         DC    X'50'               DEFAULT RECFM = VB                #  00030360
*                                                                    #  00030370
*        DEFAULT AND TARGET VALUES FOR "OUTPUT" FILE                 #  00030380
*                                                                    #  00030390
OUTDFLTS DC    H'132'              TARGET DATA BYTES PER RECORD      #  00030400
         DC    H'1600'             TARGET BYTES PER BLOCK            #  00030410
         DC    AL1(5)              DEFAULT BUFNO VALUE               #  00030420
         DC    X'54'               DEFAULT RECFM = VBA               #  00030430
*                                                                    #  00030440
MAXSKIP  DC    F'60'               MAXIMUM NUMBER OF LINES TO SKIP   #  00030450
SKPASCII EQU   *+1                 TABLE OF ASCII CONTROL CHARS      #  00030460
         DC    C'1+ 0-'                                              #  00030470
SKPMACH  EQU   *+1                 TABLE OF MACHINE CONTROL CHARS    #  00030480
         DC    X'8901091119'                                         #  00030490
RRFLAG   DC    X'00'               REREAD FLAG                       #  00030500
PROFFLAG DC    X'00'               CALL PROFILE MODULE FLAG          @  00030510
SIGN     DC    C' '                                                     00030520
EFORM    DC    C' '                                                     00030530
CCFLAG   DC    X'00'               SET BY NOCC O.S. PARM STRING      #  00030540
FILPSTSV DC    A(0)                                                     00030550
FILCLSSV DC    A(0)                                                     00030560
EXPONENT DC    F'0'                                                     00030570
QUITADR  DC    A(XIT)                                                @  00030580
*                                                                       00030590
READMSG  DC    H'-25',AL2(INPERR),C' INVALID INPUT OPERATION '       @  00030600
WRITEMSG DC    H'-26',AL2(OUTERR),C' INVALID OUTPUT OPERATION '      @  00030610
FDFMSG   DC    H'-25',AL2(FDFERR),C' INVALID FILE DEFINITION '       @  00030620
UNDFMSG  DC    H'31',AL2(NDFERR),C' CALL TO UNDEF. STANDARD PROC. '  @  00030630
LIMMSG   DC    H'-26',AL2(LIMERR),C' LINELIMIT VALUE EXCEEDED '      @  00030640
EOFMSG   DC    H'-24',AL2(EOFERR),C' ILLEGAL READ AFTER EOF '        @  00030650
BOOLMSG  DC    H'-21',AL2(BOLERR),C' BAD BOOLEAN ON INPUT '          @  00030660
INTMSG   DC    H'-21',AL2(INTERR),C' BAD INTEGER ON INPUT '          @  00030670
BIGMSG   DC    H'-29',AL2(BIGERR),C' OVER-LARGE INTEGER ON INPUT '      00030680
REALMSG  DC    H'-18',AL2(RELERR),C' BAD REAL ON INPUT '             @  00030690
FILERMSG DC    H'-28',AL2(FILERR),C' INVALID FILE CONTROL BLOCK '    @  00030700
RECRDMSG DC    H'-24',AL2(RCDERR),C' INPUT RECORD TOO LARGE '        @  00030710
SYNMSG   DC    H'-79',AL2(SYNERR),CL79' '                            @  00030720
         DS    0H                                                       00030730
MSGBUF   DC    CL128' '             BUFFER FOR WTO MESSAGES          @  00030740
         LTORG ,                                                        00030750
*                                                                       00030760
FILLIST  DC    A(FILINP)           HEAD POINTER FOR CHAIN OF FILES   @  00030770
         PRINT NOGEN               TURN OFF DCB EXPANSIONS           #  00030780
*                                                                       00030790
*        FILE CONTROL BLOCKS                                         @  00030800
*                                                                       00030810
         FILDEF INPUT,INPUT,TEXT,FILOUT                              @  00030820
         FILDEF OUTPUT,OUTPUT,TEXT,FILPRD                            @  00030830
         FILDEF PRD,INOUT,TEXT,FILPRR                                @  00030840
#FILREC  EQU   FILPRD,*-FILPRD     FILE RECORD TEMPLATE                 00030850
         FILDEF PRR,INOUT,TEXT,FILQRD                                @  00030860
         FILDEF QRD,INOUT,TEXT,FILQRR                                @  00030870
         FILDEF QRR,INOUT,TEXT,0                                     @  00030880
         FILDEF UNKNOWN,INOUT,NONTEXT,0                              @  00030890
#NONTXT  EQU   FILUNK,*-FILUNK     NON-TEXT FILE TEMPLATE            @  00030900
**************************************************************          00030910
*                                                                       00030920
*        END OF $PASCSP MODULE                                          00030930
*                                                                       00030940
**************************************************************          00030950
         SPACE 3                                                        00030960
*        GLOBAL DEFINITIONS                                             00030970
*                                                                       00030980
*                                                                       00030990
*                                                                       00031000
*                                                                       00031010
*        REGISTER ASSIGNMENTS                                           00031020
*                                                                       00031030
R0       EQU   0                                                        00031040
R1       EQU   1                                                        00031050
R2       EQU   2                                                        00031060
R3       EQU   3                                                        00031070
R4       EQU   4                                                        00031080
R5       EQU   5                                                        00031090
R6       EQU   6                                                        00031100
R7       EQU   7                                                        00031110
R8       EQU   8                                                        00031120
R9       EQU   9                                                        00031130
R10      EQU   10                                                       00031140
R11      EQU   11                                                       00031150
R12      EQU   12                                                       00031160
R13      EQU   13                                                       00031170
R14      EQU   14                                                       00031180
R15      EQU   15                                                       00031190
GBR      EQU   12                                                       00031200
FPR0     EQU   0                   FLOATING REG 0                       00031210
FPR2     EQU   2                                                        00031220
FPR4     EQU   4                                                        00031230
FPR6     EQU   6                                                        00031240
K        EQU   1024                                                     00031250
IOBUFSZE EQU   36*K                SIZE OF AREA RETURNED TO OS FOR I/O  00031260
MINSTORE EQU   8*K                 MIN ACCEPTABLE DYNAMIC STORAGE SIZE  00031270
MAXSTORE EQU   4000*K              MAX REQUESTABLE DYNAMIC STORAGE      00031280
LCAFTMST EQU   80                  LOCAL VARIABLE AREA (PASCAL PROCS)   00031290
FPRSAREA EQU   32                  FP REG SAVE AREA SIZE             *  00031300
RSLT     EQU   0                                                        00031310
RET      EQU   14                  RETURN ADDRESS/LOCATION COUNTER      00031320
LINK     EQU   15                  BRANCH REGISTER                      00031330
PBASE2   EQU   11                  PROGRAM BASE REGISTER #2             00031340
PBASE1   EQU   10                  "     "      #1                      00031350
*                                                                       00031360
INXERR   EQU   1001                INDEX ERROR RETURN CODE              00031370
SUBERR   EQU   1002                SUBRANGE ERROR RETURN CODE           00031380
PARERR   EQU   1003                PARAMETER ERROR RETURN CODE          00031390
SETERR   EQU   1004                SET ELEMENT ERROR RETURN CODE        00031400
PTRERR   EQU   1005                POINTER ERROR RETURN CODE            00031410
STKERR   EQU   1006                STACK/HEAP ERROR RETURN CODE         00031420
INPERR   EQU   1007                INPUT OPERATION ERROR RETURN CODE    00031430
OUTERR   EQU   1008                OUTPUT OPERATION ERROR RETURN CODE   00031440
SYNERR   EQU   1009                SYNCHRONOUS I/O ERROR RETURN CODE #  00031450
TIMERR   EQU   1010                TIME OUT ERROR RETURN CODE           00031460
FDFERR   EQU   1011                FILE DEFINITION ERROR RETURN CODE    00031470
SPCERR   EQU   1012                'NO SPACE' ERROR RETURN CODE         00031480
NDFERR   EQU   1013                UNDEFINED CSP CALL ERROR          @  00031490
LIMERR   EQU   1014                'LINES LIMIT EXCEEDED' ERROR      #  00031500
FILERR   EQU   1015                BAD FILE CONTROL BLOCK            @  00031510
RCDERR   EQU   1016                INPUT RECORD TOO LARGE            @  00031520
EOFERR   EQU   1020                ILLEGAL READ PAST EOF             #  00031530
BOLERR   EQU   1021                BAD BOOLEAN ON INPUT              #  00031540
INTERR   EQU   1022                BAD INTEGER ON INPUT              #  00031550
RELERR   EQU   1023                BAD REAL ON INPUT                 #  00031560
BIGERR   EQU   1024                TOO BIG INTEGER ON INPUT          &  00031570
SNPERR   EQU   100                 SNAPSHOT ERROR RETURN CODE           00031580
*                                                                       00031590
*                                                                       00031600
*        MISCELLANEOUS CONSTANTS                                        00031610
*                                                                       00031620
*                                                                       00031630
*        FILE RELATED SYMBOL DEFINITIONS                                00031640
*                                                                       00031650
         EXTRN $MAINBLK                                                 00031660
         WXTRN SNAPSHOT,IBCOM#                                          00031670
IBCOMINI EQU   64                  IBCOM INITIALIZATION ENTRY POINT     00031680
IBCOMXIT EQU   68                  IBCOM TERMINATION ENTRY POINT        00031690
*                                                                       00031700
*                                                                       00031710
*        CSP ROUTINE NUMBERS                                            00031720
*                                                                       00031730
PGET     EQU   0*4                                                      00031740
PPUT     EQU   1*4                                                      00031750
PRES     EQU   2*4                                                      00031760
PRLN     EQU   3*4                                                      00031770
PREW     EQU   4*4                                                      00031780
PWLN     EQU   5*4                                                      00031790
PWRS     EQU   6*4                                                      00031800
PWRI     EQU   8*4                                                      00031810
PWRC     EQU   10*4                                                  &  00031820
PXIT     EQU   21*4                                                     00031830
PCLS     EQU   29*4                                                     00031840
PSKP     EQU   32*4                                                  #  00031850
*                                                                       00031860
*        FILE BLOCK FIELDS                                              00031870
*                                                                       00031880
FILNAM   EQU   0                   PASCAL NAME FOR FILE              @  00031890
FILLNK   EQU   8                   LINK PTR TO NEXT FILE BLOCK       @  00031900
FILPAS   EQU   12                  PTR TO PASCAL FILE VARIABLE       @  00031910
FILBUF   EQU   16                  PTR TO I/O BUFFER                 @  00031920
FILLIM   EQU   20                  OUTPUT LINES LIMIT FOR FILE       @  00031930
FILEND   EQU   24                  CURRENT BUFFER LENGTH (TEXTFILES) @  00031940
FILOPN   EQU   26                  OPEN/TEXT FLAGS                   @  00031950
FILEOF   EQU   27                  EOF FLAG                          @  00031960
FILPTR   EQU   28                  CURRENT CHAR POS (TEXTFILE)       @  00031970
FILBEG   EQU   30                  CHAR START POS   (TEXTFILE)       @  00031980
FILRSZ   EQU   28                  MAX RECORD SIZE (NON TEXTFILE)    @  00031990
FILCSZ   EQU   30                  FILE COMP. SIZE (NON TEXTFILE)    @  00032000
FILDCB   EQU   32                  DCB POSITION IN BLOCK             @  00032010
*                                                                       00032020
PFILEOF  EQU   0                   PASCAL'S EOF FLAG                 @  00032030
PFILPTR  EQU   0                   PTR TO FILE CONTROL BLOCK         @  00032040
PFILEOL  EQU   4                   PASCAL'S EOL FLAG (TEXTFILE)      @  00032050
PFILRSZ  EQU   4                   RECORD SIZE  (NON TEXTFILE)       @  00032060
PFILCOMP EQU   8                   FILE COMPONENT                    @  00032070
PFILTSIZ EQU   12                  TOTAL SIZE FOR TEXT FILE          @  00032080
*                                                                       00032090
*        INTERNAL CHARACTER CODE FOR USEFUL CHARACTERS                  00032100
*                                                                       00032110
FILEOL   EQU   0  ?                                                     00032120
FILEXP   EQU   C'E' 5                                                   00032130
FILZER   EQU   C'0' 27                                                  00032140
FILNIN   EQU   C'9' 36                                                  00032150
FILPLU   EQU   C'+' 37                                                  00032160
FILMIN   EQU   C'-' 38                                                  00032170
FILTIM   EQU   C'*' 39                                                  00032180
FILBLA   EQU   C' ' 45                                                  00032190
FILDOT   EQU   C'.' 47                                                  00032200
*                                                                       00032210
*        READ/WRITE AND TEXT FLAG VALUES                             @  00032220
*                                                                       00032230
READOPN  EQU   1                                                        00032240
WRITEOPN EQU   2                                                        00032250
TEXTFLAG EQU   4                                                     @  00032260
*                                                                       00032270
*        REGISTERS ASSOCIATED WITH FILE USAGE                           00032280
*                                                                       00032290
AD       EQU   9       @ PASCAL FILE CONTROL BLOCK                      00032300
AE       EQU   8       @ CSP FILE CONTROL BLOCK                         00032310
AF       EQU   7       @ O.S. RECORD BUFFER FOR FILE                    00032320
AG       EQU   6       @ DCB FOR FILE                                   00032330
*                                                                       00032340
*        MISCELLANEOUS CONSTANTS                                        00032350
*                                                                       00032360
FALSE    EQU   0                                                        00032370
TRUE     EQU   1                                                        00032380
CHR      EQU   1                   LENGTH (IN BYTES) OF A CHAR. VALUE   00032390
*                                                                       00032400
         END   $PASENT                                                  00032410
